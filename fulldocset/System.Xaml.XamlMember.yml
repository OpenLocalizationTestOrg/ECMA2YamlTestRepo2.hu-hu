### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlMember
  id: XamlMember
  children:
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  - System.Xaml.XamlMember.DeclaringType
  - System.Xaml.XamlMember.DeferringLoader
  - System.Xaml.XamlMember.DependsOn
  - System.Xaml.XamlMember.Equals(System.Object)
  - System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  - System.Xaml.XamlMember.GetHashCode
  - System.Xaml.XamlMember.GetXamlNamespaces
  - System.Xaml.XamlMember.Invoker
  - System.Xaml.XamlMember.IsAmbient
  - System.Xaml.XamlMember.IsAttachable
  - System.Xaml.XamlMember.IsDirective
  - System.Xaml.XamlMember.IsEvent
  - System.Xaml.XamlMember.IsNameValid
  - System.Xaml.XamlMember.IsReadOnly
  - System.Xaml.XamlMember.IsReadPublic
  - System.Xaml.XamlMember.IsUnknown
  - System.Xaml.XamlMember.IsWriteOnly
  - System.Xaml.XamlMember.IsWritePublic
  - System.Xaml.XamlMember.LookupCustomAttributeProvider
  - System.Xaml.XamlMember.LookupDeferringLoader
  - System.Xaml.XamlMember.LookupDependsOn
  - System.Xaml.XamlMember.LookupInvoker
  - System.Xaml.XamlMember.LookupIsAmbient
  - System.Xaml.XamlMember.LookupIsEvent
  - System.Xaml.XamlMember.LookupIsReadOnly
  - System.Xaml.XamlMember.LookupIsReadPublic
  - System.Xaml.XamlMember.LookupIsUnknown
  - System.Xaml.XamlMember.LookupIsWriteOnly
  - System.Xaml.XamlMember.LookupIsWritePublic
  - System.Xaml.XamlMember.LookupTargetType
  - System.Xaml.XamlMember.LookupType
  - System.Xaml.XamlMember.LookupTypeConverter
  - System.Xaml.XamlMember.LookupUnderlyingGetter
  - System.Xaml.XamlMember.LookupUnderlyingMember
  - System.Xaml.XamlMember.LookupUnderlyingSetter
  - System.Xaml.XamlMember.LookupValueSerializer
  - System.Xaml.XamlMember.Name
  - System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  - System.Xaml.XamlMember.PreferredXamlNamespace
  - System.Xaml.XamlMember.SerializationVisibility
  - System.Xaml.XamlMember.TargetType
  - System.Xaml.XamlMember.ToString
  - System.Xaml.XamlMember.Type
  - System.Xaml.XamlMember.TypeConverter
  - System.Xaml.XamlMember.UnderlyingMember
  - System.Xaml.XamlMember.ValueSerializer
  langs:
  - csharp
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
  type: Class
  summary: "Az XAML típusazonosító rendszer biztosít XAML típusú tagok. A azonosítót kell használni az XAML olvasók és XAML írók tag csomópont feldolgozása során (amikor a XAML-olvasó helyezkedik el a egy <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>) és is az általános XAML típus rendszer logika."
  remarks: "XamlMember használható három módszereit, amelyek egy XAML-tag információt ad vissza: standard közös nyelvi futtatókörnyezet (CLR) reflexiós; a hivatkozás csak reflexióra módszer hívása belső API-k, hogy optimalizált használata bit jelzők; felülbírálással virtuális be irányuló hívás vagy a `Lookup*` lehetséges XamlMember alosztályok által biztosított API. A .NET Framework XAML szolgáltatások API-k és a XamlMember API legtöbb célra használja az alapértelmezett XAML séma környezetében. A .NET-keretrendszer XAML-szolgáltatások alapértelmezett XAML séma környezetben CLR típus rendszer biztonsági használja. Ez lehetővé teszi az XAML-olvasók és XAML írók bármilyen vagy, amelynek van definiálva, vagy más módon elérhetővé, a közös nyelvi futtató környezet és a reflexió technikák.      ## Keresési * API-k és XamlMember származtatott osztályok XamlMember határozza meg a több felülírhatják a származtatott osztályok virtuális tagokat. Ezek a tagok rendelkeznek mindig karakterlánccal kezdődő neveket `Lookup`. További része az API neve majd hivatkozásokat a tulajdonság, amely befolyásolja a virtuális metódus. Például felülírhatják a XamlMember származtatott osztályt <xref:System.Xaml.XamlMember.LookupTargetType%2A>befolyásoló, mely az Alap által definiált tulajdonság <xref:System.Xaml.XamlMember.TargetType%2A>adja vissza egy származtatott osztály</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A> Az ilyen tulajdonságok XamlMember létező vagy a származtatott osztályok ehhez beolvassa a megfelelő dokumentációját visszatérési értékek képes előre jelezni `Lookup*` módszerek.       A célja a `Lookup*` módszer az, hogy adjon meg egy XAML típus rendszer bővítmény technika, amely magában foglalja a XamlMember alaposztálya. XamlMember származó, és felülírja a `Lookup` virtuális tagok is meghatározhatja a koncepció egy XAML-tag egy XAML-séma egy XAML típusrendszernek nem egy biztonsági rendszert vagy a technológia rögzítésen kötődik. A megadott XAML séma környezetében ebben a rendszerben is használhatja, és továbbra is a a kívánt eredményt adja vissza.       Tegyük fel fontolja meg a XamlMember tulajdonság <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Ez a tulajdonság tájékoztatja hívóknak, hogy a műveletek, például a használatával egy <xref:System.Xaml.XamlWriter>a szerializálási írhat egy értéket ehhez a taghoz célobjektumot.</xref:System.Xaml.XamlWriter> Az alapértelmezett megvalósításában a meghatározása, hogy a tag írható történik, szemben a CLR-beli biztonsági reflexiós technikák segítségével <xref:System.Type>és annak tagjait (a <xref:System.Reflection.MemberInfo>).</xref:System.Reflection.MemberInfo> </xref:System.Type> Ezért, alapértelmezés szerint a XAML típusrendszernek CLR típus rendszertől függ. Azonban a jelentéskészítéshez XAML típus rendszer, <xref:System.Xaml.XamlMember.IsWritePublic%2A>az API-t <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> felülbírálásával</xref:System.Xaml.XamlMember.IsWritePublic%2A> eltávolíthatja a függőség A felülbírálási belül további meghatározások, például a technológia, a fő keresési tábla egy rögzített XAML szóhasználatának, vagy más meghatározásához, hogy az az XAML szóhasználatának írhatónak kell lennie egy XAML-tag stratégiák számos optimalizált vonatkozó metaadatok is használhatja.      ## XamlMember konstruktora szükséges XamlMember nélkül XAML séma környezetben leggyakrabban hozhat létre egy <xref:System.Xaml.XamlSchemaContext>az inicializálási részeként.</xref:System.Xaml.XamlSchemaContext> A <xref:System.Xaml.XamlSchemaContext>szükséges számos belső <xref:System.Xaml.XamlSchemaContext>Műveletek, például hogy a biztonsági típus továbbítsa.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlSchemaContext> Ha XamlMember API-val dolgozik, akkor általában van egy <xref:System.Xaml.XamlSchemaContext>olyan környező konstrukció <xref:System.Xaml.XamlWriter>.</xref:System.Xaml.XamlWriter> például az elérhető</xref:System.Xaml.XamlSchemaContext> Ebben az esetben átadhatók a <xref:System.Xaml.XamlSchemaContext>hivatkozás keresztül az XAML séma környezetet igénylő összes XAML típus rendszerhívások.</xref:System.Xaml.XamlSchemaContext>       Egy adott konstruktor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>nincs szükség a <xref:System.Xaml.XamlSchemaContext>.</xref:System.Xaml.XamlSchemaContext> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Azonban az összeállított egy XamlMember a <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>aláírás adja vissza `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>       A betöltési elérési úthoz, amely magában foglalja a <xref:System.Xaml.XamlObjectWriter>, az ilyen tag nem írható objektumdiagram.</xref:System.Xaml.XamlObjectWriter> A .NET-keretrendszer XAML szolgáltatások megvalósításával a <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>jelez hívja a <xref:System.Xaml.XamlObjectWriterException>Amikor a megfelelő XamlMember jelentések `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nem kell létrehozni, amelynek értéke egy XamlMember `true` a <xref:System.Xaml.XamlMember.IsUnknown%2A>kivéve, ha a megvalósítás kezelni tud a kivételei <xref:System.Xaml.XamlObjectWriter>, vagy más módon úgy, hogy rendelkezik a <xref:System.Xaml.XamlObjectWriter>viselkedés.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> Például egy vagy több, a következő okai lehetnek a végrehajtás:-az XAML séma környezet, amely később.      – Használja a tag invoker minta.      -Ha szándékosan felülírja <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>az egyéni XAML-író.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XamlMember : IEquatable<System.Xaml.XamlMember>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlMember>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztály a CLR-típus rendszert használ <xref:System.Reflection.EventInfo>és egy <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.EventInfo>"
  remarks: "Ez a konstruktor akkor használja, ha a tag jelenti. az esemény (event kezelő csatlakozási pont tulajdonság)."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.EventInfo>, amely jelöli az esemény tag.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztály a CLR-típus rendszert használ <xref:System.Reflection.PropertyInfo>és egy <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  remarks: "Ez a konstruktor használja, ha a tagja tulajdonságait képviselik (és nincs kifejezetten az esemény-kezelő kapcsolat)."
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.PropertyInfo>, amely jelzi, hogy a property taggal.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztály a CLR-típus rendszert használ <xref:System.Reflection.EventInfo>és egy <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, többek között a következőket <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> adatokat.</xref:System.Reflection.EventInfo>"
  remarks: "Ez a konstruktor akkor használja, ha a tag egy eseményt (vagy egy kezelő csatlakozási pont eseménytulajdonságot) jelöli."
  syntax:
    content: public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.EventInfo>, amely jelöli az esemény tag.</xref:System.Reflection.EventInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "A <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> megvalósítása, amely kezeli a futásidejű reflexiós elleni meghívja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztály a következőt reflexió használatával <xref:System.Reflection.PropertyInfo>és egy <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref>, többek között a következőket <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> adatokat.</xref:System.Reflection.PropertyInfo>"
  remarks: "Ez a konstruktor csak akkor, ha a tagja tulajdonságait képviselik, és ha még nincs az esemény-kezelő kapcsolat használata"
  syntax:
    content: public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.PropertyInfo>, amely jelzi, hogy a property taggal.</xref:System.Reflection.PropertyInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "A <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> kezelő futásidejű hívás végrehajtása elleni meghívja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztályt egy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely egy csatolható eseményt képvisel."
  remarks: "Ez a konstruktor akkor használja, ha a tag egy csatolható esemény tag jelöli."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "A csatolható események karakterlánc neve."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>az kezelő <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> csatolható tag metódus végrehajtása a biztonsági.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  id: '#ctor(System.String,System.Xaml.XamlType,System.Boolean)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztály egy karakterlánc-név használatával, és a deklarálási <xref href=&quot;System.Xaml.XamlType&quot;> </xref> információkat. A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely ennek összeállított aláírása a jelentős korlátozások vonatkoznak, tanulmányozza a megjegyzés."
  remarks: "A <xref:System.Xaml.XamlMember>, amely a XamlMember aláírás adja vissza az összeállított `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember>       A betöltési elérési úthoz, amely magában foglalja a <xref:System.Xaml.XamlObjectWriter>, az ilyen tag nem írható objektumdiagram.</xref:System.Xaml.XamlObjectWriter> A .NET-keretrendszer XAML-szolgáltatások megvalósításával a <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>jelez hívja a <xref:System.Xaml.XamlObjectWriterException>során a megfelelő <xref:System.Xaml.XamlMember>jelentések `true` <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nem kell létrehozni egy <xref:System.Xaml.XamlMember>rendelkező <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` kivéve, ha a megvalósítás kezelni tud a kivételei <xref:System.Xaml.XamlObjectWriter>, vagy más módon úgy, hogy rendelkezik a <xref:System.Xaml.XamlObjectWriter>viselkedés.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember> Például egy vagy több, a következő okai lehetnek a végrehajtás:-az XAML séma környezet, amely később.      – Használja a tag invoker minta.      -Ha szándékosan felülírja <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>az egyéni XAML-író.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>"
  syntax:
    content: public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);
    parameters:
    - id: name
      type: System.String
      description: "A tag karakterlánc nevét."
    - id: declaringType
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> adatai deklarálási típusát."
    - id: isAttachable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>azt jelzi, hogy a tag csatolható; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>or <code>declaringType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztályt egy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely csatolható tulajdonság jelöli."
  remarks: "Ez a konstruktor akkor használja, ha a tag csatolható tulajdonság jelöli."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "A csatolható tulajdonság karakterlánc neve."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>a a <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> csatolható tag elérő tartozó biztonsági megvalósítási.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>a a <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> csatolható tag elérő tartozó biztonsági megvalósítási.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztályt egy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> csatolható eseményre jelöli, amelyek többek között <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> információkat."
  remarks: "Ez a konstruktor akkor használja, ha a tag egy csatolható esemény tag jelöli."
  syntax:
    content: public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachableEventName
      type: System.String
      description: "A csatolható események karakterlánc neve."
    - id: adder
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>az kezelő <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref> csatolható tag metódus végrehajtása a biztonsági.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "A <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> kezelő futásidejű hívás végrehajtása elleni meghívja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  id: '#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)'
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> osztályt egy <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> csatolható tulajdonság jelöli, amelyek többek között <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> információkat."
  remarks: "Ez a konstruktor akkor használja, ha a tag egy csatolható tulajdonság tag jelöli."
  syntax:
    content: public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);
    parameters:
    - id: attachablePropertyName
      type: System.String
      description: "A csatolható tulajdonság karakterlánc neve."
    - id: getter
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>a a <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> csatolható tag elérő tartozó biztonsági megvalósítási.</xref:System.Reflection.MethodInfo>"
    - id: setter
      type: System.Reflection.MethodInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MethodInfo>a a <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> csatolható tag elérő tartozó biztonsági megvalósítási.</xref:System.Reflection.MethodInfo>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> környezetet, amely a tag címtársémának megfelelően."
    - id: invoker
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "A <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> kezelő futásidejű hívás végrehajtása elleni meghívja a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeclaringType
  id: DeclaringType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a típushoz, amely a tag ezt társított deklarál <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ez az érték inicializálás során általában értéke, és általában nem `null`.      > [!IMPORTANT] > Declaringtype típusa információk adhatók át a konstruktorok által az inicializálás. Közvetlenül a alap konstruktor hívása, <xref:System.Xaml.XamlMember>származtatott osztályok kihagyhatja az egyes létrehozott és az alap osztályhoz. az érték - ellenőrzések</xref:System.Xaml.XamlMember> inicializálása Ezért a származtatott inicializálási módosíthatja a jelentett típustag kapcsolat egy XAML-tag, hogy azt már nem igazodik a várt módon a rendszer típusinformációt az alapul szolgáló CLR-deklaráció. A biztonsági szempontból kritikus fontosságú ellenőrzésének típussal kapcsolatos adatok deklaráló, az alapul szolgáló CLR-beli típust használjon helyette."
  syntax:
    content: public System.Xaml.XamlType DeclaringType { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a típushoz, amely a tag ezt társított deklarál <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; objektum, amely az XAML késleltetett betöltés használt objektumok deklarálva."
  remarks: "Hívása DeferringLoader hív <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Ez akkor fordul elő azokban az esetekben, ahol a kezdeti belső tükröződés logika nem már beállította az adatokat."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; rendelkező <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> az általános korlátozást."
  overload: System.Xaml.XamlMember.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.DependsOn
  id: DependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Listájának lekérése <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok. Ezek a tagok, amennyiben a függőségi viszonyok inicializálási rendelés viszonyítva ez léteznek jelentést <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Hívja a DependsOn hív meg <xref:System.Xaml.XamlMember.LookupDependsOn%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupDependsOn%2A> Ez akkor fordul elő azokban az esetekben, ahol a kezdeti belső tükröződés logika nem már beállította az adatokat.       A `DependsOn` mintát szándékosan ellentmondanak XAML általában objektum modelleseteket alkalmazhatók. Az általános XAML szabály, hogy egy típusú tagok nem átadott inicializálási szövegként (vagy egy XAML 2009 gyári metódusa) bármilyen sorrendben hozzárendelendő képesnek kell lennie. Úgy, hogy alkalmazza a `DependsOn` mintát egy taggal, utasíthatja XAML írók mindig feldolgozni a hivatkozott tag előtt ehhez a taghoz. Ez a minta olyan esetekben, ahol az aktuális tagot értékének igényel-e a környezet vagy egyéb információkat, amelyeket csak a másik számára megadása után is alkalmazhatja.       A `DependsOn` mintát kell körültekintően alkalmazott és foglalt tulajdonság forgatókönyvek, ahol egy architekturális célt szolgál. Nagyszámú függőségek esetleg XAML feldolgozási lelassíthatják. Azt is létre körkörös függőségi viszony, ebben az esetben az XAML-feldolgozási működésével nincs definiálva.       Példa `DependsOn` WPF lehetőségeket tartalmazza egyes tulajdonságokat a <xref:System.Windows.Controls.ControlTemplate>és <xref:System.Windows.DataTemplate>a <xref:System.Windows.Trigger>, és a <xref:System.Windows.Setter>.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> </xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlMember> DependsOn { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Listája <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok."
  overload: System.Xaml.XamlMember.DependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Azt jelzi, hogy az aktuális objektum egyenlő másik objektumra."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Az objektum összes objektum összehasonlítani."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális objektum megegyezik a <code> obj </code> paraméter; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  id: Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Azt jelzi, hogy az aktuális objektum egy másik objektum azonos típusú egyenlő."
  syntax:
    content: public bool Equals (System.Xaml.XamlMember other);
    parameters:
    - id: other
      type: System.Xaml.XamlMember
      description: "Ez az objektum összehasonlítandó objektum."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az aktuális objektum megegyezik a <code> other </code> paraméter; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Az objektum kivonatkódját adja vissza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Egy egész kivonatoló kódot."
  overload: System.Xaml.XamlMember.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ha ez a XAML-tag létezhet XAML névterek listáját adja vissza."
  remarks: "Az alapértelmezett implementációja adja vissza <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName> <xref:System.Xaml.XamlMember.DeclaringType%2A>a <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> társított</xref:System.Xaml.XamlMember.DeclaringType%2A> kapott eredmény hívása</xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Karakterláncként XAML-névtér azonosítók listáját."
  overload: System.Xaml.XamlMember.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Invoker
  id: Invoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> végrehajtására, a társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "A `Invoker` a mintája, egy speciális XAML típus rendszer bővítmény technika. A `Invoker` mintát szúrjon különböző séma típus hozzárendelési viselkedés, továbbra is használja a rendszer típusdefiníciók XAML .NET-keretrendszer XAML szolgáltatásokból lehetőséget kínál.       Ha egy <xref:System.Xaml.XamlMember.LookupInvoker%2A>értéket ad vissza felülbírálása `null`, vagy az alapértelmezett implementációja függvény `null` nem rendelkezik <xref:System.Xaml.XamlMember.UnderlyingMember%2A>a <xref:System.Xaml.XamlMember>hívó tulajdonság <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> adja vissza,</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> mert</xref:System.Xaml.XamlMember.LookupInvoker%2A>       <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>az alapértelmezett beállítás.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> Ez igaz a legtöbb műveletet, amelyek a .NET-keretrendszer XAML-szolgáltatások és az alapértelmezett XAML séma környezet használják, és ha nem adott felülbírálás `Invoker` minták XAML típus rendszerentitások építése lett átadva.       Invoker hívása hív <xref:System.Xaml.XamlMember.LookupInvoker%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "A <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> végrehajtására, a társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> az elvártnak megfelelően egy környezeti tulajdonság."
  remarks: "Hívása IsAmbient hív <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Ez akkor fordul elő implementációkban, ahol a kezdeti belső reflexiós logika nem már beállította az adatokat.       A környezeti tulajdonságok ellenőrzése általában a részét képezik XAML feldolgozó logika győződjön meg arról, hogy a objektumok és környezeti használat típusa minősítési támaszkodó értékek megfelelő működéséhez. A .NET Framework XAML szolgáltatások API-k és az alapértelmezett XAML séma környezet tölti fel ezt az értéket a <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> attribútumára alapján Az alapértelmezett implementációja <xref:System.Xaml.XamlMember.LookupIsAmbient%2A>használja a meglévő <xref:System.Windows.Markup.AmbientAttribute>technika, és adja vissza `true` Ha <xref:System.Windows.Markup.AmbientAttribute>létezik tag deklarációjában.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute> </xref:System.Xaml.XamlMember.LookupIsAmbient%2A>       <xref:System.Windows.Markup.AmbientAttribute>tagok WPF számos különböző, többek között megtalálható <xref:System.Windows.Application>, <xref:System.Windows.Setter>, és <xref:System.Windows.Style>.</xref:System.Windows.Style> </xref:System.Windows.Setter> </xref:System.Windows.Application></xref:System.Windows.Markup.AmbientAttribute> Is található, a a <xref:System.Windows.ResourceDictionary>típusát, amely connotes, hogy bármelyik tag használó <xref:System.Windows.ResourceDictionary>, típusára tekintendő környezeti akkor is, ha a tag nem kifejezetten attribútummal.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelentett környezeti tulajdonságként; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsAttachable
  id: IsAttachable
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy csatolható tag."
  remarks: "A IsAttachable érték alapján mely konstruktor <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> összeállításához használt inicializálása"
  syntax:
    content: public bool IsAttachable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy csatolható tag; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsAttachable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsDirective
  id: IsDirective
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy XAML irányelv."
  remarks: "A IsDirective érték alapján mely konstruktor <xref:System.Xaml.XamlMember>.</xref:System.Xaml.XamlMember> összeállításához használt inicializálása A kiinduló <xref:System.Xaml.XamlMember>konstruktorok inicializálása, hogy IsDirective `false`.</xref:System.Xaml.XamlMember> Azonban a <xref:System.Xaml.XamlDirective>osztály (egy <xref:System.Xaml.XamlMember>osztály származtatott), hogy IsDirective inicializálja `true`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlDirective>       Ha szeretne jelentést készíteni, IsDirective `true` hívóknak XAML tagok egyéni XAML séma osztály, ellenőrizze, hogy célosztályából származik <xref:System.Xaml.XamlDirective>az egyetlen lehetőség engedélyezi a viselkedésmódot, mert.</xref:System.Xaml.XamlDirective>"
  syntax:
    content: public bool IsDirective { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> van egy olyan XAML irányelv; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsDirective*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsEvent
  id: IsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy esemény tag jelöli."
  remarks: "Hívása IsEvent hív <xref:System.Xaml.XamlMember.LookupIsEvent%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsEvent%2A>"
  syntax:
    content: public bool IsEvent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy eseményt képvisel; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> inicializálva van egy érvényes <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> karakterláncot, mint a <xref:System.Xaml.XamlMember.Name*>.</xref:System.Xaml.XamlMember.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> inicializálva van egy érvényes <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> karakterlánc; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadOnly
  id: IsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy csak olvasható tag jelöli."
  remarks: "Hívása IsReadOnly hív <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsReadOnly%2A>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelöli egy csak olvasható tag; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsReadPublic
  id: IsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelenti. a hívható nyilvános tagja <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
  remarks: "A IsReadPublic ellenőrzések érték-e a <xref:System.Xaml.XamlMember.DeclaringType%2A>nyilvános.</xref:System.Xaml.XamlMember.DeclaringType%2A> Ha <xref:System.Xaml.XamlMember.DeclaringType%2A>bizalmasként, akkor a `get` elérő nem hívható gyakorlati módon, és IsReadPublic adja vissza `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Hívása IsReadPublic hív <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>      > [!IMPORTANT] > A <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>metódus virtuális, és ezért bírálható felül.</xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> A felülbírálás nem módosítja (ártó vagy más) jelzett hozzáférés adatait egy XAML-tag, hogy azt már nem igazodik a várt módon az alapul szolgáló CLR-deklaráció típusú hozzáférés rendszerinformációkat. Biztonsági szempontból kritikus fontosságú ellenőrzi a hozzáférési szintek, a mögöttes CLR-beli típust használjon helyette."
  syntax:
    content: public bool IsReadPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> hívható nyilvános jelöli <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Egy érték, amely azt jelzi, hogy a tag nem tudják feloldani a biztonsági rendszer típusa és a tag megoldás használt lekérdezi."
  remarks: "A <xref:System.Xaml.XamlMember>, amely össze a <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>aláírás adja vissza `true` a IsUnknown.</xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> </xref:System.Xaml.XamlMember>       A betöltési elérési úthoz, amely magában foglalja a <xref:System.Xaml.XamlObjectWriter>, egy <xref:System.Xaml.XamlMember>rendelkező `true` az objektumdiagram IsUnknown nem írható.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriter> Az alapértelmezett megvalósítások, a .NET Framework XAML szolgáltatások API-k, a a <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>jelez hívja egy <xref:System.Xaml.XamlObjectWriterException>Amikor a megfelelő <xref:System.Xaml.XamlMember>jelentések `true` a IsUnknown.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=fullName>       Nem kell létrehozni egy <xref:System.Xaml.XamlMember>, és adja neki `true` IsUnknown a kivéve, ha a megvalósítás kezelni tud a kivételei <xref:System.Xaml.XamlObjectWriter>, vagy más módon úgy, hogy rendelkezik a <xref:System.Xaml.XamlObjectWriter>viselkedés.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlMember>       Hívása IsUnknown hív <xref:System.Xaml.XamlMember.LookupIsUnknown%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsUnknown%2A>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tag nem feloldható; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> feloldható a tag esetén."
  overload: System.Xaml.XamlMember.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWriteOnly
  id: IsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> csak írható tagja jelöli."
  remarks: "Hívása IsWriteOnly hív <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A>"
  syntax:
    content: public bool IsWriteOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelenti. a csak írható tag; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.IsWritePublic
  id: IsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelöli, amelynek hívható nyilvános tagja <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérővel."
  remarks: "A IsWritePublic érték úgy véli, hogy a <xref:System.Xaml.XamlMember.DeclaringType%2A>nyilvános meghatározása részeként.</xref:System.Xaml.XamlMember.DeclaringType%2A> Ha <xref:System.Xaml.XamlMember.DeclaringType%2A>bizalmasként, akkor a `set` elérő nem hívható gyakorlati módon, és IsWritePublic adja vissza `false`.</xref:System.Xaml.XamlMember.DeclaringType%2A>       Hívása IsWritePublic hív <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>      > [!IMPORTANT] > A <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>metódus virtuális, és ezért bírálható felül.</xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> A felülbírálás nem módosítja (ártó vagy más) jelzett hozzáférés adatait egy XAML-tag, hogy azt már nem igazodik a várt módon az alapul szolgáló CLR-deklaráció típusú hozzáférés rendszerinformációkat. Biztonsági szempontból kritikus fontosságú ellenőrzi a hozzáférési szintek, a mögöttes CLR-beli típust használjon helyette."
  syntax:
    content: public bool IsWritePublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> hívható nyilvános jelöli <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.IsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "A származtatott osztály megadásuk adja vissza egy <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> végrehajtására."
  remarks: "Írja felül a metódust a belső reflexiós CLR attribútumértékek beszerzése alternatív módszert. Felülbírálás hiányában a belső megfelelési tipikus CLR reflexiós logika például <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> hívások használ       Az alapértelmezett implementációja adja vissza `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Egy <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> végrehajtására."
  overload: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Értéket ad vissza egy &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; objektum, amely az XAML késleltetett betöltés használt objektumok deklarálva."
  remarks: "Ez a módszer van meghívni, amikor egy hívó lekérdezi egy értéket a <xref:System.Xaml.XamlMember.DeferringLoader%2A>tulajdonság.</xref:System.Xaml.XamlMember.DeferringLoader%2A> Bírálja felül ezt a módszert, ha azt szeretné, <xref:System.Xaml.XamlMember.DeferringLoader%2A>kattintva visszatérhet eltérő értéket az alapértelmezett belső reflexiós, által engedélyezett érték és egyéni is biztosított <xref:System.Xaml.Schema.XamlMemberInvoker>adatokat.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DeferringLoader%2A>       Az alapértelmezett implementációja visszaad egy objektumot vagy olvasásával <xref:System.Windows.Markup.XamlDeferLoadAttribute>vagy egy <xref:System.Xaml.XamlDeferringLoader>a deklarálási típusát.</xref:System.Xaml.XamlDeferringLoader> </xref:System.Windows.Markup.XamlDeferLoadAttribute> Előfordulhat, hogy ez a metódus visszatérési sem objektum, `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; , amely rendelkezik egy <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> az általános korlátozást."
  overload: System.Xaml.XamlMember.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupDependsOn
  id: LookupDependsOn
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Olyan listát ad vissza <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok. A lista elemeinek jelentést a tagok, amennyiben a függőségi viszonyok inicializálási rendelés viszonyítva ez léteznek <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ez a módszer van meghívni, amikor egy hívó lekérdezi egy értéket a <xref:System.Xaml.XamlMember.DependsOn%2A>tulajdonság.</xref:System.Xaml.XamlMember.DependsOn%2A> Bírálja felül ezt a módszert, ha azt szeretné, <xref:System.Xaml.XamlMember.DependsOn%2A>kattintva visszatérhet eltérő értéket az alapértelmezett belső tükröződés, által engedélyezett érték és egyéni is biztosított <xref:System.Xaml.Schema.XamlMemberInvoker>adatokat.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.DependsOn%2A>       A WPF XAML írási és olvasási szerepkörökhöz megvalósítások attribútum ebben az esetben a <xref:System.Windows.Markup.DependsOnAttribute>.</xref:System.Windows.Markup.DependsOnAttribute> Az alapértelmezett használ a meglévő <xref:System.Windows.Markup.DependsOnAttribute>technika.</xref:System.Windows.Markup.DependsOnAttribute>       Bírálja felül ezt a módszert, ha nem használ <xref:System.Windows.Markup.DependsOnAttribute>ezen célját, és cserélje le a technika, amely jelzi, a saját technikával tulajdonság feldolgozási sorrendben kíván.</xref:System.Windows.Markup.DependsOnAttribute> Ha nem kíván egy tulajdonság feldolgozási sorrendben támogatja, használhatja az alapértelmezett implementációja, mert azt adja vissza eredményt vissza nem küldő, amely megfelelő.       A lista csak olvasható."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlMember> LookupDependsOn ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlMember}
      description: "Listája <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok."
  overload: System.Xaml.XamlMember.LookupDependsOn*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Értéket ad vissza egy <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;> </xref> ez társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ez a módszer <xref:System.Xaml.XamlMember.Invoker%2A>.</xref:System.Xaml.XamlMember.Invoker%2A> által meghívott       Az alapértelmezett implementációja nem igényel, amely egy <xref:System.Xaml.XamlMember>alakítható ki, amely egy kezdeti <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> adja át a konstruktorok egyikét használva</xref:System.Xaml.XamlMember> Azonban egy <xref:System.Xaml.XamlMember.UnderlyingMember%2A>érték léteznie kell a <xref:System.Xaml.XamlMember>; ellenkező esetben az alapértelmezett implementációja adja vissza `null`.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Bírálja felül ezt a módszert, ha akkor is származik <xref:System.Xaml.Schema.XamlMemberInvoker>, és térjen vissza a származtatott osztály kíván</xref:System.Xaml.Schema.XamlMemberInvoker> Ha ismét `null`, <xref:System.Xaml.XamlMember.Invoker%2A>adja vissza <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName>hívóknak.</xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlMember.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlMemberInvoker
      description: "The <xref href=&quot;System.Xaml.Schema.XamlMemberInvoker&quot;></xref> information for this <xref href=&quot;System.Xaml.XamlMember&quot;></xref>; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlMember.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> az elvártnak megfelelően egy környezeti tulajdonság."
  remarks: "Ez a módszer környezeti XAML-tulajdonság tájékoztatás belső hívási elindítását. Környezeti tulajdonság viselkedés biztonságos kimenekítésére is hangsúlyt az XAML-olvasók és XAML írók nyilvános API működését. A belső hívások LookupIsAmbient hivatkozó általában XAML feldolgozó logika győződjön meg arról, hogy a objektumok és környezeti használat típusa minősítési támaszkodó értékek megfelelő működéséhez a részét képezik. Az alapértelmezett .NET-keretrendszer XAML-szolgáltatások beszerezni ezeket az adatokat a reflexió típusok biztonsági keresztül való felruházása CLR használ. Pontosabban, az alapértelmezett implementációja keresi <xref:System.Windows.Markup.AmbientAttribute>adja vissza, és `true` LookupIsAmbient a Ha <xref:System.Windows.Markup.AmbientAttribute>megtalálható a tag definíciója.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.Markup.AmbientAttribute>       Bírálja felül ezt a módszert, ha nem használ <xref:System.Windows.Markup.AmbientAttribute>ezen célját, és cserélje le az adott technika, amely jelzi, a saját technikával környezeti XAML-tulajdonságok kíván.</xref:System.Windows.Markup.AmbientAttribute>       Ez az attribútum a <xref:System.Windows.Markup.AmbientAttribute>esetén <xref:System.Windows.Trigger.Property%2A?displayProperty=fullName>és <xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName>.</xref:System.Windows.Style.BasedOn%2A?displayProperty=fullName> </xref:System.Windows.Trigger.Property%2A?displayProperty=fullName> </xref:System.Windows.Markup.AmbientAttribute> WPF API-k példa"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ez jelentésének <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> környezeti tulajdonságként; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsEvent
  id: LookupIsEvent
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy eseményt képvisel."
  remarks: "Az alapértelmezett megvalósítási ellenőrzések e <xref:System.Xaml.XamlMember.UnderlyingMember%2A>típusú <xref:System.Reflection.EventInfo>, és ha igen, akkor adja vissza `true`.</xref:System.Reflection.EventInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsEvent%2A>.</xref:System.Xaml.XamlMember.IsEvent%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha metaadatok érhető el, XAML meghatározásához értelmezhető speciális rendelkezik írja be a rendszer felelősséget eset alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsEvent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a jelentéshez, amelyhez a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> egy eseményt képvisel; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  id: LookupIsReadOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> tervezett csak olvasható tulajdonság jelöli."
  remarks: "Az alapértelmezett implementációja adja vissza `true` Ha <xref:System.Xaml.XamlMember.UnderlyingMember%2A>létezik, de a nyilvános `set` elérő nem létezik, a belső reflexiós alapján.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</xref:System.Xaml.XamlMember.IsReadOnly%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha metaadatok érhető el, XAML meghatározásához értelmezhető speciális rendelkezik írja be a rendszer felelősséget eset alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ez jelentésének <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> tulajdonságként tervezett csak olvasható; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  id: LookupIsReadPublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Beolvasása e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely rendelkezik a nyilvános tulajdonságait képviselik <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
  remarks: "Az alapértelmezett implementációja belső reflexiós vagy a negálás alapú eredményeket ad vissza <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, ebben a sorrendben feldolgozására.</xref:System.Xaml.XamlMember.IsWriteOnly%2A>       LookupIsReadPublic adja vissza, hogy a tagot is nyilvános; azt adja vissza `true` a egy nyilvános tagot egy nonpublic deklarálási típusú. Használjon <xref:System.Xaml.XamlMember.IsReadPublic%2A>helyette, ha akkor érdemes megfontolni is látható-e a deklarálási típusát.</xref:System.Xaml.XamlMember.IsReadPublic%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</xref:System.Xaml.XamlMember.IsReadPublic%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > A LookupIsReadPublic metódus virtuális, és ezért bírálható felül. A felülbírálás nem módosítja (ártó vagy más) jelzett hozzáférés adatait egy XAML-tag, hogy azt már nem igazodik a várt módon az alapul szolgáló CLR-deklaráció típusú hozzáférés rendszerinformációkat. Biztonsági szempontból kritikus fontosságú ellenőrzi a hozzáférési szintek, a mögöttes CLR-beli típust használjon helyette."
  syntax:
    content: protected virtual bool LookupIsReadPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely rendelkezik a nyilvános tulajdonságait képviselik <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérő; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsReadPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> nem tudják feloldani a biztonsági rendszer típusa és a tag megoldás használt tag jelöli."
  remarks: "Ez a módszer előfordulhat, hogy kell meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsUnknown%2A>.</xref:System.Xaml.XamlMember.IsUnknown%2A> Az alapértelmezett implementációja visszatérési vagy belső reflexiós alapján vagy a rendszer ellenőrzi a `null` értékének <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, feldolgozásra abban a sorrendben.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> nem feloldható tagja jelöl; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  id: LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Beolvasása e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> képvisel, amely rendelkezik egy nyilvános tagot <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérő, de nem nyilvános <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérővel."
  remarks: "Az alapértelmezett implementációja adja vissza `true` Ha egy <xref:System.Xaml.XamlMember.UnderlyingMember%2A>létezik, amelyhez egy nyilvános `set` elérő és egy nonpublic `get` elérő, belső tükröződés alapján.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</xref:System.Xaml.XamlMember.IsWriteOnly%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual bool LookupIsWriteOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelenti. a csak írható tag; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWriteOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  id: LookupIsWritePublic
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza e ez <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> képvisel, amely rendelkezik egy nyilvános tagot <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérővel."
  remarks: "Az alapértelmezett implementációja adja vissza, eredmények alapján belső tükröződés vagy a negálás <xref:System.Xaml.XamlMember.IsReadOnly%2A>, ebben a sorrendben feldolgozására.</xref:System.Xaml.XamlMember.IsReadOnly%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</xref:System.Xaml.XamlMember.IsWritePublic%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>      > [!IMPORTANT] > A LookupIsWritePublic metódus virtuális, és ezért bírálható felül. A felülbírálás nem módosítja (ártó vagy más) jelzett hozzáférés adatait egy XAML-tag, hogy azt már nem igazodik a várt módon az alapul szolgáló CLR-deklaráció típusú hozzáférés rendszerinformációkat. Biztonsági szempontból kritikus fontosságú ellenőrzi a hozzáférési szintek, a mögöttes CLR-beli típust használjon helyette."
  syntax:
    content: protected virtual bool LookupIsWritePublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> jelöli egy írható tag; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupIsWritePublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTargetType
  id: LookupTargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza a <xref href=&quot;System.Xaml.XamlType&quot;> </xref> típusú ahol a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> létezhet."
  remarks: "Az alapértelmezett implementációja különböztet csatolható és nem csatolható tag. Nem csatolható tagok LookupTargetType mindig vissza <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Csatolható tagok LookupTargetType vizsgálata alapján eredményt adja vissza a <xref:System.Xaml.XamlMember.UnderlyingMember%2A>elérő paraméter típusa és, hogy a típus alapján XAML séma környezetében értelmezi.</xref:System.Xaml.XamlMember.UnderlyingMember%2A>       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.TargetType%2A>.</xref:System.Xaml.XamlMember.TargetType%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupTargetType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A típus ahol a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> létezhet. Tekintse meg a megjegyzés."
  overload: System.Xaml.XamlMember.LookupTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupType
  id: LookupType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Vissza a <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a tag által használt típus. Tekintse meg a megjegyzés."
  remarks: "Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Bírálja felül ezt a módszert, ha azt szeretné, <xref:System.Xaml.XamlMember.Type%2A>kattintva visszatérhet eltérő értéket az alapértelmezett belső reflexiós, által engedélyezett érték és egyéni is biztosított <xref:System.Xaml.Schema.XamlMemberInvoker>adatokat.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.XamlMember.Type%2A>       Az alapértelmezett használ másik kódelérési és fogalmi jelentése az a visszaadott <xref:System.Xaml.XamlType>alapul, hogy ez <xref:System.Xaml.XamlMember>tulajdonság, módszer vagy esemény jelöli.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlType>      -A tulajdonság, a visszaadott <xref:System.Xaml.XamlType>beállítja a tulajdonságot, vagy a tulajdonság által visszaadott típus.</xref:System.Xaml.XamlType>      -Az esemény, a visszaadott <xref:System.Xaml.XamlType>van a szükséges típusú eseménykezelő (CLR-megvalósítással egy delegált).</xref:System.Xaml.XamlType>      -A metódus <xref:System.Xaml.XamlType>a visszatérési típusa.</xref:System.Xaml.XamlType>       Minden esetben XAML séma környezetében segítségével kiértékelheti a XAML típusát, a rendszer alaptípusának.       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.Type%2A>.</xref:System.Xaml.XamlMember.Type%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a tag által használt típus. Tekintse meg a megjegyzés."
  overload: System.Xaml.XamlMember.LookupType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Adja vissza a típusú konverter megvalósítása a társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Az alapértelmezett használ a következő programot, és a feldolgozási sorrendben: – Ha a tag szinten kiosztására létezik (<xref:System.ComponentModel.TypeConverterAttribute>), a fájlattribútum-adat hívásakor használatos <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>szemben a XAML séma környezetében.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.ComponentModel.TypeConverterAttribute>      -Ha <xref:System.Xaml.XamlMember.Type%2A>érvényes, olyan típuskonvertert, amely a társított adja vissza.</xref:System.Xaml.XamlMember.Type%2A>      -Ha a tag egy eseményt, az esemény-specifikus típuskonverternek adja vissza.       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.TypeConverter%2A>.</xref:System.Xaml.XamlMember.TypeConverter%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; példányt <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> teljesített megkötés vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  id: LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> ez társított elérő <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Az alapértelmezett megvalósítása értelmezi a <xref:System.Xaml.XamlMember.UnderlyingMember%2A>tulajdonság <xref:System.Reflection.PropertyInfo>értékét adja vissza, és <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName>(beállítása paraméterrel `true`), ami azt jelenti, hogy a visszaküldött metódus lehet bizalmasként.</xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Ezt a viselkedést eredményezhetnek `null` bizonyos esetekben. beleértve azokat az eseteket, ahol nincs társított elérő létezik, vagy a tag nem tulajdonság.       Ez a módszer van meghívni, amikor egy hívó lekérdezi egy értéket a <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>tulajdonság a társított <xref:System.Xaml.Schema.XamlMemberInvoker>.</xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember> Ügyeljen arra, hogy implementálja LookupUnderlyingGetter, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, és <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>, hogy minden kapcsolódó eredményeket adjon.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>a társított <xref uid=&quot;langword_csharp_get&quot; name=&quot;get&quot; href=&quot;&quot;> </xref> elérő; vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingGetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  id: LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Visszaadja a CLR-típus rendszer <xref:System.Reflection.MemberInfo>Ez társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  remarks: "Az alapértelmezett implementációja az alapul szolgáló információit, konstrukció alapuló adja vissza. Ha a <xref:System.Reflection.MemberInfo>objektum, amely nem biztosít elég információval a mögöttes tagja aláírással összeállított, ez a metódus visszaadja `null`.</xref:System.Reflection.MemberInfo>       Ha az alapul szolgáló tag lett beállítva a konstrukció során, nem kell a metódus hívásához.       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</xref:System.Xaml.XamlMember.UnderlyingMember%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember> Ügyeljen arra, hogy implementálja <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, és így azok minden korrelált eredmények LookupUnderlyingMember.</xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "A CLR-típus rendszer <xref:System.Reflection.MemberInfo>a társított objektum <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>; vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MemberInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  id: LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Értéket ad vissza egy <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> ez társított elérő <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Az alapértelmezett megvalósítása értelmezi <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, <xref:System.Reflection.PropertyInfo>értékét adja vissza, és <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName>(beállítása paraméterrel `true`), ami azt jelenti, hogy a visszaküldött metódus lehet bizalmasként.</xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=fullName> </xref:System.Reflection.PropertyInfo> </xref:System.Xaml.XamlMember.UnderlyingMember%2A> Ennek eredményeként `null` egyes esetekben, beleértve az esetekben, ahol nincs ilyen elérő van, vagy a tag nem tulajdonság.       Ez a módszer egy hívó <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>közötti értéket kap egy társított <xref:System.Xaml.Schema.XamlMemberInvoker>hív meg. Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember> </xref:System.Xaml.Schema.XamlMemberInvoker> </xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> Ügyeljen arra, hogy implementálja <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, LookupUnderlyingSetter, és <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>, hogy minden kapcsolódó eredményeket adjon.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> </xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>"
  syntax:
    content: protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo>a társított <xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;> </xref> elérő; vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Xaml.XamlMember.LookupUnderlyingSetter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Visszaadja a érték szerializáló megvalósítása a társított <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Az alapértelmezett használ a következő programot, és a feldolgozási sorrendben: – Ha a tag szinten kiosztására létezik (<xref:System.Windows.Markup.ValueSerializerAttribute>), a fájlattribútum-adat hívásakor használatos <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A>szemben a XAML séma környezetében.</xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> </xref:System.Windows.Markup.ValueSerializerAttribute>      -Ha <xref:System.Xaml.XamlMember.Type%2A>érvényes, a társított típus értékkonverternek adja vissza.</xref:System.Xaml.XamlMember.Type%2A>      – Ha az előző feltételek nem vonatkoznak, `null` adja vissza.       Ez a módszer van meghívni, amikor egy hívó olyan érték lekérése <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</xref:System.Xaml.XamlMember.ValueSerializer%2A> Bírálja felül ezt a módszert, ha azt szeretné, egységes eredményeiből jelentést egy teljes <xref:System.Xaml.XamlMember>származtatott osztály, vagy ha speciális rendelkezik metaadatok rendelkezésre ez esetben alapon.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; példányt <xref:System.Windows.Markup.ValueSerializer>megkötést, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Name
  id: Name
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> karakterlánc, amely kijelenti, ennek neve <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ez az érték mindig van állítva a konstrukció során. A konstruktorok által végrehajtott <xref:System.Xaml.XamlMember>általában váltson ki egy kivételt, ha nincs megadva egy kezdeti neve; ezért nem várható, ezt a tulajdonságot kell `null` vagy üres karakterlánc, alapértelmezett .NET-keretrendszer XAML-szolgáltatások rendszerbeli használata.</xref:System.Xaml.XamlMember>       [XamlName nyelvtan](~/add/includes/ajax-current-ext-md.md) és a CLR-típus és elnevezési szabályok nincsenek egy pontos intersect. Egy tag neve, amely a CLR-beli jogi deklarálható, de nem érvényes XAML-elnevezési alatt. Ez a helyzet lehetőleg ne."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> karakterlánc, amely kijelenti, ennek neve <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Meghatározza, hogy a két megadott <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok ugyanazon értékekkel rendelkeznek."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az értéke <code> xamlMember1 </code> ugyanaz, mint a értékének <code> xamlMember2 </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  id: op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Meghatározza, hogy a két megadott <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> objektumok különböző értékekkel rendelkeznek."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);
    parameters:
    - id: xamlMember1
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlMember2
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az értéke <code> xamlMember1 </code> értéke eltér <code> xamlMember2 </code>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a egyetlen XAML-névtér URI, amely azonosítja az elsődleges XAML-névtér a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "A PreferredXamlNamespace tulajdonság értéke megegyezik hívása biztosít <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A>és az első érték karakterlánc majd lekérése a visszaadott lista.</xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> Az előnyben részesített XAML névtérből kell használni, amikor a tag írása a Vissza gombra, és a szöveges vagy más felelősséget, amely megőrzi XAML-névtér információkat."
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "Az azonosító az elsődleges XAML-névtér a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>, karakterláncként."
  overload: System.Xaml.XamlMember.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.SerializationVisibility
  id: SerializationVisibility
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> érték, amely megadja, hogy hogyan a vizuális tervező használatára a tag dolgozza fel."
  syntax:
    content: public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }
    return:
      type: System.ComponentModel.DesignerSerializationVisibility
      description: "Érték a <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref> enumerálása. Az alapértelmezett érték <xref href=&quot;System.ComponentModel.DesignerSerializationVisibility&quot;> </xref>."
  overload: System.Xaml.XamlMember.SerializationVisibility*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TargetType
  id: TargetType
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref href=&quot;System.Xaml.XamlType&quot;> </xref> típusú ahol a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> létezhet."
  remarks: "A visszaadott érték nem csatolható, és nem csatolható olyan tagok esetében azonos. Nem csatolható tag TargetType adja vissza <xref:System.Xaml.XamlMember.DeclaringType%2A>.</xref:System.Xaml.XamlMember.DeclaringType%2A> Csatolható tagok <xref:System.Xaml.XamlMember.LookupTargetType%2A>ezen logikák alapuló eredményt adja vissza: – Ha reflexiós nem oldható fel egy biztonsági (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), ez a módszer egy általános objektumtípus egy belső állandó adja vissza.</xref:System.Xaml.XamlMember.IsUnknown%2A> </xref:System.Xaml.XamlMember.LookupTargetType%2A>      – Ha az előző állapot nem érvényes, <xref:System.Xaml.XamlMember.LookupTargetType%2A>nevezik.</xref:System.Xaml.XamlMember.LookupTargetType%2A> Az alapértelmezett implementációja adja vissza egy <xref:System.Xaml.XamlType>alapuló vizsgálata folyamatban van a módszereket, amelyek megvalósítják a `get` és `set` elérőnek.</xref:System.Xaml.XamlType> Egy osztály felülírhatják a <xref:System.Xaml.XamlMember.LookupTargetType%2A>másképp viselkednek használandó, például más metaadatok képezi, előfordulhat, hogy jelenti céltípusok csatolható tagok.</xref:System.Xaml.XamlMember.LookupTargetType%2A>"
  syntax:
    content: public System.Xaml.XamlType TargetType { get; }
    return:
      type: System.Xaml.XamlType
      description: "A típus ahol a <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> létezhet. Tekintse meg a megjegyzés."
  overload: System.Xaml.XamlMember.TargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ToString
  id: ToString
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ez a karakterlánc alakot adja vissza <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  remarks: "Ez a megvalósítás <xref:System.Xaml.XamlMember.Name%2A>.</xref:System.Xaml.XamlMember.Name%2A> adja vissza."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Ez a karakterlánc-ábrázolása <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>."
  overload: System.Xaml.XamlMember.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.Type
  id: Type
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a tag által használt típus."
  remarks: "Típusa történt hív <xref:System.Xaml.XamlMember.LookupType%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupType%2A> Ez akkor fordul elő, ha a kezdeti belső reflexiós logika már nincs beállítva az adatokat.       Az alapértelmezett viselkedés (nincs <xref:System.Xaml.XamlMember.LookupType%2A>felülbírálása), a visszaadott <xref:System.Xaml.XamlType>is rendelkezik különböző fogalmi jelentésekkel.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember.LookupType%2A> Mely jelentése vonatkozik attól függ, hogy ez <xref:System.Xaml.XamlMember>jelenti. a tulajdonság, módszer vagy eseményt, az alábbi listán látható módon: - tulajdonság, a visszaadott <xref:System.Xaml.XamlType>beállítja a tulajdonságot, vagy a tulajdonság által visszaadott típus.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlMember>      -Az esemény, a visszaadott <xref:System.Xaml.XamlType>van a szükséges típusú eseménykezelő (CLR-megvalósítással egy delegált).</xref:System.Xaml.XamlType>      -A metódus <xref:System.Xaml.XamlType>Ez a módszer, amely lehet visszatérési típusa `null`.</xref:System.Xaml.XamlType>       Minden esetben az XAML-séma környezetében segítségével értékelje ki a biztonsági típus XAML típusát."
  syntax:
    content: public System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> a tag által használt típus. Tekintse meg a megjegyzés."
  overload: System.Xaml.XamlMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; objektum, amely nem használható XAML-objektumok deklarált típus átalakítás rekordcsoportjának létrehozása."
  remarks: "Hívja a TypeConverter hív meg <xref:System.Xaml.XamlMember.LookupTypeConverter%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Ez akkor fordul elő, ha a kezdeti belső reflexiós logika már nincs beállítva az adatokat.       Tulajdonsága nem null értéket visszaadnia a TypeConverter által már nem szükségszerűen egy működő <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter> Az alábbiakban olvashat egy listát, lehetséges null értékű visszatérési értékek TypeConverter elemmel, és ezeket az értékeket képviselő:-az eredményül kapott értéket jelentések olyan típuskonvertert, amely kifejezetten az adott tag vagy a cél típusa, a konverter általában tudható. Ez a viselkedés általában milyen típusú rendszerek többsége XAML és hozható létre olyan típuskonvertert, és a metódusok keressen XAML processzor.      -Az eredményül kapott értéket a jelentés egy beépített értékkonverternek. A konverterek XAML-író végrehajtott bizonyos belső műveletek léteznek. Különösen a beépített érték konverterek nyers karakterlánc attribútumértékek átalakítása a XAML nyelvi szintű primitívek. A .NET-keretrendszer XAML-szolgáltatások megvalósítás ezek beépített típuskonverziók gyakran továbbítja olyan típuskonvertert, a rendszer szerelvényben definiált. Például a konvertálást egy <xref:System.Int32>érték beépített továbbított átalakítás, és ezért az <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A>érték hivatkozások <xref:System.ComponentModel.Int32Converter>.</xref:System.ComponentModel.Int32Converter> </xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> </xref:System.Int32>      -A visszatérési érték jelentések korlátozás nélküli objektummodell; különleges esetében Ez azt jelenti, hogy a <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlMember.Type%2A> <xref:System.Object>.</xref:System.Object> értéke</xref:System.Xaml.XamlMember.Type%2A> </xref:System.Xaml.XamlMember> Ebben az esetben a <xref:System.Xaml.Schema.XamlValueConverter%601>jelenti, hogy a <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName>van {`Object}`.</xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlValueConverter%601> Azonban <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>van `null` , mert nincs tényleges típus vagy a példány érhető el az átalakításhoz.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> Ehelyett a objektum modellként viselkedő futási idő, amikor az adott technológia futásidejű meghatározza, hogy az objektumdiagram kezelésének addig nem lehet megállapítani.       Ha eléri a működő <xref:System.ComponentModel.TypeConverter>a <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, hívhat meg a konverziós metódusok.</xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> </xref:System.ComponentModel.TypeConverter> Sok konverziós metódusok azonban szolgáltatási környezet támaszkodnak. Ha még nem érhető el, hogy a típuskonverternek vár a tipikus szerepkör objektumgrafikonok objektumok írásának azonos service környezetben, a konverter módszerek kivételek segítségével throw."
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; értéket, és egy <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> az általános korlátozást. Tekintse meg a megjegyzés."
  overload: System.Xaml.XamlMember.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.UnderlyingMember
  id: UnderlyingMember
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a CLR-típus rendszer <xref:System.Reflection.MemberInfo>elérhető egy tag által összeállított <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.MethodInfo>, vagy <xref:System.Reflection.EventInfo>.</xref:System.Reflection.EventInfo> </xref:System.Reflection.MethodInfo> </xref:System.Reflection.PropertyInfo> </xref:System.Reflection.MemberInfo>"
  remarks: "Hívása UnderlyingMember hív <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A>"
  syntax:
    content: public System.Reflection.MemberInfo UnderlyingMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "CLR-típus rendszer <xref:System.Reflection.MemberInfo>információkat, mint a kezdeti konstruktorparaméterek típuskonverzió.</xref:System.Reflection.MemberInfo> A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> , amely össze a &lt;xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29&gt; aláírás adja vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlMember.UnderlyingMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlMember.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlMember
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Lekérdezi a &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; XAML-objektumok deklarált érték szerializálásához használt objektum."
  remarks: "Hívja a ValueSerializer hív meg <xref:System.Xaml.XamlMember.LookupValueSerializer%2A>vagy egy adott felülbírálás móddal.</xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Ez akkor fordul elő, ha a kezdeti belső reflexiós logika már nincs beállítva az adatokat.       Nem minden esetben a ValueSerializer tulajdonsága nem null értéket visszaadó feltétlenül egy működő <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer> Lásd: <xref:System.Xaml.XamlMember.TypeConverter%2A>; ugyanazok a feltételek vonatkoznak a ValueSerializer.</xref:System.Xaml.XamlMember.TypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; rendelkező <xref:System.Windows.Markup.ValueSerializer>az általános korlátozást.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlMember.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(EventInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.Schema.XamlMemberInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlMemberInvoker
  nameWithType: XamlMemberInvoker
  fullName: System.Xaml.Schema.XamlMemberInvoker
- uid: System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(PropertyInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,XamlType,Boolean)
  nameWithType: XamlMember.XamlMember(String,XamlType,Boolean)
  fullName: System.Xaml.XamlMember.XamlMember(String,XamlType,Boolean)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  nameWithType: XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
  fullName: System.Xaml.XamlMember.XamlMember(String,MethodInfo,MethodInfo,XamlSchemaContext,XamlMemberInvoker)
- uid: System.Xaml.XamlMember.DeclaringType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
  fullName: System.Xaml.XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
  fullName: System.Xaml.XamlMember.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.DependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
  fullName: System.Xaml.XamlMember.DependsOn
- uid: System.Collections.Generic.IList{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlMember>
  nameWithType: IList<XamlMember>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Equals(System.Object)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlMember.Equals(Object)
  fullName: System.Xaml.XamlMember.Equals(Object)
- uid: System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals(XamlMember)
  nameWithType: XamlMember.Equals(XamlMember)
  fullName: System.Xaml.XamlMember.Equals(XamlMember)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlMember.GetHashCode
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlMember.GetHashCode()
  fullName: System.Xaml.XamlMember.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlMember.GetXamlNamespaces
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlMember.GetXamlNamespaces()
  fullName: System.Xaml.XamlMember.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Invoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
  fullName: System.Xaml.XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
  fullName: System.Xaml.XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
  fullName: System.Xaml.XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
  fullName: System.Xaml.XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
  fullName: System.Xaml.XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
  fullName: System.Xaml.XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
  fullName: System.Xaml.XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
  fullName: System.Xaml.XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
  fullName: System.Xaml.XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
  fullName: System.Xaml.XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
  fullName: System.Xaml.XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlMember.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlMember.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlMember.LookupDeferringLoader()
  fullName: System.Xaml.XamlMember.LookupDeferringLoader()
- uid: System.Xaml.XamlMember.LookupDependsOn
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn()
  nameWithType: XamlMember.LookupDependsOn()
  fullName: System.Xaml.XamlMember.LookupDependsOn()
- uid: System.Xaml.XamlMember.LookupInvoker
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlMember.LookupInvoker()
  fullName: System.Xaml.XamlMember.LookupInvoker()
- uid: System.Xaml.XamlMember.LookupIsAmbient
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlMember.LookupIsAmbient()
  fullName: System.Xaml.XamlMember.LookupIsAmbient()
- uid: System.Xaml.XamlMember.LookupIsEvent
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent()
  nameWithType: XamlMember.LookupIsEvent()
  fullName: System.Xaml.XamlMember.LookupIsEvent()
- uid: System.Xaml.XamlMember.LookupIsReadOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly()
  nameWithType: XamlMember.LookupIsReadOnly()
  fullName: System.Xaml.XamlMember.LookupIsReadOnly()
- uid: System.Xaml.XamlMember.LookupIsReadPublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic()
  nameWithType: XamlMember.LookupIsReadPublic()
  fullName: System.Xaml.XamlMember.LookupIsReadPublic()
- uid: System.Xaml.XamlMember.LookupIsUnknown
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlMember.LookupIsUnknown()
  fullName: System.Xaml.XamlMember.LookupIsUnknown()
- uid: System.Xaml.XamlMember.LookupIsWriteOnly
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly()
  nameWithType: XamlMember.LookupIsWriteOnly()
  fullName: System.Xaml.XamlMember.LookupIsWriteOnly()
- uid: System.Xaml.XamlMember.LookupIsWritePublic
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic()
  nameWithType: XamlMember.LookupIsWritePublic()
  fullName: System.Xaml.XamlMember.LookupIsWritePublic()
- uid: System.Xaml.XamlMember.LookupTargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType()
  nameWithType: XamlMember.LookupTargetType()
  fullName: System.Xaml.XamlMember.LookupTargetType()
- uid: System.Xaml.XamlMember.LookupType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType()
  nameWithType: XamlMember.LookupType()
  fullName: System.Xaml.XamlMember.LookupType()
- uid: System.Xaml.XamlMember.LookupTypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlMember.LookupTypeConverter()
  fullName: System.Xaml.XamlMember.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter()
  nameWithType: XamlMember.LookupUnderlyingGetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingGetter()
- uid: System.Xaml.XamlMember.LookupUnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember()
  nameWithType: XamlMember.LookupUnderlyingMember()
  fullName: System.Xaml.XamlMember.LookupUnderlyingMember()
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter()
  nameWithType: XamlMember.LookupUnderlyingSetter()
  fullName: System.Xaml.XamlMember.LookupUnderlyingSetter()
- uid: System.Xaml.XamlMember.LookupValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlMember.LookupValueSerializer()
  fullName: System.Xaml.XamlMember.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlMember.Name
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
  fullName: System.Xaml.XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Equality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Equality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality(XamlMember,XamlMember)
  nameWithType: XamlMember.op_Inequality(XamlMember,XamlMember)
  fullName: System.Xaml.XamlMember.op_Inequality(XamlMember,XamlMember)
- uid: System.Xaml.XamlMember.PreferredXamlNamespace
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
  fullName: System.Xaml.XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
  fullName: System.Xaml.XamlMember.SerializationVisibility
- uid: System.ComponentModel.DesignerSerializationVisibility
  parent: System.ComponentModel
  isExternal: false
  name: DesignerSerializationVisibility
  nameWithType: DesignerSerializationVisibility
  fullName: System.ComponentModel.DesignerSerializationVisibility
- uid: System.Xaml.XamlMember.TargetType
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
  fullName: System.Xaml.XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString()
  nameWithType: XamlMember.ToString()
  fullName: System.Xaml.XamlMember.ToString()
- uid: System.Xaml.XamlMember.Type
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
  fullName: System.Xaml.XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
  fullName: System.Xaml.XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
  fullName: System.Xaml.XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
  fullName: System.Xaml.XamlMember.ValueSerializer
- uid: System.Xaml.XamlMember.#ctor*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember.XamlMember
- uid: System.Xaml.XamlMember.DeclaringType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeclaringType
  nameWithType: XamlMember.DeclaringType
- uid: System.Xaml.XamlMember.DeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlMember.DeferringLoader
- uid: System.Xaml.XamlMember.DependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: DependsOn
  nameWithType: XamlMember.DependsOn
- uid: System.Xaml.XamlMember.Equals*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Equals
  nameWithType: XamlMember.Equals
- uid: System.Xaml.XamlMember.GetHashCode*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetHashCode
  nameWithType: XamlMember.GetHashCode
- uid: System.Xaml.XamlMember.GetXamlNamespaces*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlMember.GetXamlNamespaces
- uid: System.Xaml.XamlMember.Invoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Invoker
  nameWithType: XamlMember.Invoker
- uid: System.Xaml.XamlMember.IsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAmbient
  nameWithType: XamlMember.IsAmbient
- uid: System.Xaml.XamlMember.IsAttachable*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsAttachable
  nameWithType: XamlMember.IsAttachable
- uid: System.Xaml.XamlMember.IsDirective*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsDirective
  nameWithType: XamlMember.IsDirective
- uid: System.Xaml.XamlMember.IsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsEvent
  nameWithType: XamlMember.IsEvent
- uid: System.Xaml.XamlMember.IsNameValid*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsNameValid
  nameWithType: XamlMember.IsNameValid
- uid: System.Xaml.XamlMember.IsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadOnly
  nameWithType: XamlMember.IsReadOnly
- uid: System.Xaml.XamlMember.IsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsReadPublic
  nameWithType: XamlMember.IsReadPublic
- uid: System.Xaml.XamlMember.IsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsUnknown
  nameWithType: XamlMember.IsUnknown
- uid: System.Xaml.XamlMember.IsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWriteOnly
  nameWithType: XamlMember.IsWriteOnly
- uid: System.Xaml.XamlMember.IsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: IsWritePublic
  nameWithType: XamlMember.IsWritePublic
- uid: System.Xaml.XamlMember.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlMember.LookupCustomAttributeProvider
- uid: System.Xaml.XamlMember.LookupDeferringLoader*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlMember.LookupDeferringLoader
- uid: System.Xaml.XamlMember.LookupDependsOn*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupDependsOn
  nameWithType: XamlMember.LookupDependsOn
- uid: System.Xaml.XamlMember.LookupInvoker*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlMember.LookupInvoker
- uid: System.Xaml.XamlMember.LookupIsAmbient*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlMember.LookupIsAmbient
- uid: System.Xaml.XamlMember.LookupIsEvent*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsEvent
  nameWithType: XamlMember.LookupIsEvent
- uid: System.Xaml.XamlMember.LookupIsReadOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadOnly
  nameWithType: XamlMember.LookupIsReadOnly
- uid: System.Xaml.XamlMember.LookupIsReadPublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsReadPublic
  nameWithType: XamlMember.LookupIsReadPublic
- uid: System.Xaml.XamlMember.LookupIsUnknown*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlMember.LookupIsUnknown
- uid: System.Xaml.XamlMember.LookupIsWriteOnly*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWriteOnly
  nameWithType: XamlMember.LookupIsWriteOnly
- uid: System.Xaml.XamlMember.LookupIsWritePublic*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupIsWritePublic
  nameWithType: XamlMember.LookupIsWritePublic
- uid: System.Xaml.XamlMember.LookupTargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTargetType
  nameWithType: XamlMember.LookupTargetType
- uid: System.Xaml.XamlMember.LookupType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupType
  nameWithType: XamlMember.LookupType
- uid: System.Xaml.XamlMember.LookupTypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlMember.LookupTypeConverter
- uid: System.Xaml.XamlMember.LookupUnderlyingGetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingGetter
  nameWithType: XamlMember.LookupUnderlyingGetter
- uid: System.Xaml.XamlMember.LookupUnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingMember
  nameWithType: XamlMember.LookupUnderlyingMember
- uid: System.Xaml.XamlMember.LookupUnderlyingSetter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupUnderlyingSetter
  nameWithType: XamlMember.LookupUnderlyingSetter
- uid: System.Xaml.XamlMember.LookupValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlMember.LookupValueSerializer
- uid: System.Xaml.XamlMember.Name*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Name
  nameWithType: XamlMember.Name
- uid: System.Xaml.XamlMember.op_Equality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Equality
  nameWithType: XamlMember.op_Equality
- uid: System.Xaml.XamlMember.op_Inequality*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: op_Inequality
  nameWithType: XamlMember.op_Inequality
- uid: System.Xaml.XamlMember.PreferredXamlNamespace*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlMember.PreferredXamlNamespace
- uid: System.Xaml.XamlMember.SerializationVisibility*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: SerializationVisibility
  nameWithType: XamlMember.SerializationVisibility
- uid: System.Xaml.XamlMember.TargetType*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TargetType
  nameWithType: XamlMember.TargetType
- uid: System.Xaml.XamlMember.ToString*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ToString
  nameWithType: XamlMember.ToString
- uid: System.Xaml.XamlMember.Type*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: Type
  nameWithType: XamlMember.Type
- uid: System.Xaml.XamlMember.TypeConverter*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: TypeConverter
  nameWithType: XamlMember.TypeConverter
- uid: System.Xaml.XamlMember.UnderlyingMember*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: UnderlyingMember
  nameWithType: XamlMember.UnderlyingMember
- uid: System.Xaml.XamlMember.ValueSerializer*
  parent: System.Xaml.XamlMember
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlMember.ValueSerializer
