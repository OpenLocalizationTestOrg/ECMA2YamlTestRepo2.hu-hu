### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "A logikai fán objektumok lekérdezése statikus segítő módszereket kínál."
  remarks: "A LogicalTreeHelper osztály biztosít a módszereket, amelyek objektumokat vagy adott objektumoknak a logikai fa alsóbb szintű gyermek gyűjteményét adják vissza. Azonban a objektum fa műveleteket kell végrehajtania a legtöbb is elérhetők hasonló módszerekkel vagy vagy <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> tulajdonságai Például, próbálkozzon az alábbiakkal: - helyett a statikus <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>metódus, amely a logikai gyermek enumerátor objektumokat adja vissza, az az objektum a tartalommodell felfedett dedikált gyűjtemény használható.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Szinte minden objektumok, amelyek támogatják a tartalommodell fedheti fel néhány tulajdonságot, amely gyermek objektumok gyűjteményét tartalmazza, és közvetlenül a gyűjtemény felület támogatást nyújt a gyűjteményhez.      -Ahelyett, hogy a statikus hívása <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>gyermekobjektum beszerzéséhez nevét, hívás a <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>vagy <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>metódust a konkrét objektumokat.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       LogicalTreeHelper esetén a leghasznosabb elemzés esetek, amikor utazás felfelé vagy lefelé a logikai fán rekurzív módon több szintjéről keresztül, így kíván használni egy egységes módszer a különböző szülő- vagy gyermekmappája objektumok vizsgálata. Ebben az esetben lehetséges, hogy a tartalom modellek keverékével használja, és a további tartalmat-modell használatával meghatározott API-k túl összetett."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A kért felhasználói felületi elem vonja nézetet próbál, és riasztást a <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> esemény ahhoz, hogy az eredmények a célszámítógépen."
  remarks: "Általában a metódusok hívása célszerű <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>vagy <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>ahelyett, hogy ez a metódus statikus segédprogram.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> A metódusok viselkedését megegyezik a statikus metódus viselkedését.       Akkor is, ha a `current` megadott felhasználói felületi elem volt egy <xref:System.Windows.FrameworkContentElement>, az eredményül kapott esemény még mindig azonos <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>esemény, a származó <xref:System.Windows.FrameworkContentElement>azonosítható az eseményadatok az esemény ellenőrzésével.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "A felhasználói felületi elem nézet állapotba."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Megkísérli megkeresi és visszaadja a megadott névvel rendelkező objektum. A Keresés a megadott objektum indul, és továbbra is fennáll, az alsóbb szintű logikai fa."
  remarks: "A módszerek <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>és <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>FindLogicalNode, hasonló, de különböző logika működtetéséhez:-FindLogicalNode keresési irányát (lefelé a fa); gyermekobjektum felé van a keresés irányát a `FindName` módszerek felé szülőobjektumok (felfelé a faszerkezetben) van.</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      -A `FindName` módszerek szabályozza egy XAML namescope fogalmát. Használatával `FindName` akkor is garantálható, hogy csak egy ilyen nevű objektum létezik, mert az XAML namescopes egyediségét. Ezzel szemben FindLogicalNode figyelmen kívül hagyja az XAML namescope, és előfordulhat, hogy kereszt-XAML namescope határokat a keresés közben. Nincs ilyen egyediségének garanciát a `elementName` name határok túllépése után. XAML-namescopes kapcsolatos további információkért lásd: [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "Az objektum, a keresés indításához. Ez az objektum kell lennie, vagy egy <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> vagy egy <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "Az objektum kereséséhez neve."
    return:
      type: System.Windows.DependencyObject
      description: "Az objektum a megfelelő névvel, ha talált; Visszaadja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ha megfelelő nevet nem található a logikai fán."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A megadott objektum azonnali gyermekobjektum gyűjteményét feldolgozásával a logikai fán adja vissza."
  remarks: "Ezt a módszert aláírás és a segítő elsősorban akkor, ha nem biztos fiókadataiban e `current` van egy <xref:System.Windows.FrameworkElement>vagy <xref:System.Windows.FrameworkContentElement>és bizonytalan is hogy adott objektumosztály támogatja-e a saját tartalommodell gyűjteménye.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Ha kérdez le az objektum típusa meghatározhatja, ellenőrizni kell az adott tartalom tulajdonság, hogy tudja, hogy létezik-e típushoz. Például ha tudja, hogy az objektum kérdez le van egy <xref:System.Windows.Controls.ItemsControl>, ellenőrizze a <xref:System.Windows.Controls.ItemsControl.Items%2A>tulajdonság használatával beolvassa a szigorú típusmegadású gyűjteményt, amely a gyűjtemény felülete támogatja, és valószínűleg hasznosabb számbevevőre.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Az objektum, amelyből a logikai fán feldolgozásának igénylésekor. Ez várható lehet egy <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> vagy <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "A logikai fán. a megadott objektum közvetlenül alárendelt objektumokat enumerálható gyűjteménye."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A megadott az azonnali gyermekobjektum gyűjteményét adja vissza <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> feldolgozásával a logikai fán."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "Az objektum, amelyből a logikai fán feldolgozásának igénylésekor."
    return:
      type: System.Collections.IEnumerable
      description: "A enumerálható objektumgyűjtemény azonnali gyermek-től kezdődő <code> current </code> a logikai fán."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A megadott az azonnali gyermekobjektum gyűjteményét adja vissza <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> feldolgozásával a logikai fán."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "Az objektum, amelyből a logikai fán feldolgozásának igénylésekor."
    return:
      type: System.Collections.IEnumerable
      description: "A enumerálható objektumgyűjtemény azonnali gyermek-től kezdődő <code> current </code> a logikai fán."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "A logikai fán feldolgozásával adja vissza a szülői objektumot, a megadott objektum."
  remarks: "Ez a módszer csupán egy a burkoló, amely lekérdezi a megfelelő verziója (<xref:System.Windows.FrameworkElement> vagy <xref:System.Windows.FrameworkContentElement>), a <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>vagy <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>tulajdonság; kivéve, ha nem tudja megállapítani a `current` típusa, érdemes inkább ellenőrizze a megfelelő példányt tulajdonságait.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Az objektum található a szülő objektum számára. Ez várható lehet egy <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> vagy egy <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "A kért szülői objektumon."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
