### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebProcessInformation
  id: WebProcessInformation
  children:
  - System.Web.Management.WebProcessInformation.AccountName
  - System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebProcessInformation.ProcessID
  - System.Web.Management.WebProcessInformation.ProcessName
  langs:
  - csharp
  name: WebProcessInformation
  nameWithType: WebProcessInformation
  fullName: System.Web.Management.WebProcessInformation
  type: Class
  summary: "Tájékoztatást ad azokról a munkavégző folyamat, amely futtatja az ASP.NET."
  remarks: "ASP.NET állapotfigyelés lehetővé teszi, hogy az üzemi és műveletek személyzet telepített webalkalmazások kezelésére. A <xref:System.Web.Management>névtér a feladata az alkalmazás-állapot adatainak csomagolás állapotesemény típust tartalmaz, és a szolgáltató típusokat felelős az adatok feldolgozása.</xref:System.Web.Management> Is tartalmaz, amelyek segítenek a állapotával kapcsolatos események felügyelete során támogató típusok.       A WebProcessInformation osztály példányai alkalmazásával a származtatott típusok információkat tartalmaznak a <xref:System.Web.Management.WebManagementEvent>típusa.</xref:System.Web.Management.WebManagementEvent>       Az alkalmazás kell ehhez a típushoz védett információ eléréséhez szükséges engedélyekkel.       A következő példa egy olyan, a konfigurációs fájl segítségével engedélyezze az ASP.NET folyamat adatokat tartalmazó hiba eseményt naplózzon.      ```   <healthMonitoring      enabled=&quot;true&quot; heartBeatInterval=&quot;0&quot;>          <rules>        <add           name=&quot;All Errors Default&quot;          eventName=&quot;All Errors&quot;          provider=&quot;EventLogProvider&quot;          profile=&quot;Default&quot;          minInterval=&quot;00:01:00&quot; />       </rules>      </healthMonitoring>   ```      > [!NOTE]> A legtöbb esetben lesz ahhoz, hogy az ASP.NET-állapotfigyelés típusok használható megvalósítva, és szabályozza, a rendszerállapot-figyelő rendszer szereplő értékek megadásával a `healthMonitoring` konfigurációs szakasz. Az állapotfigyelés típusok létrehozása a saját egyéni események és szolgáltatók is származik. Például egy egyéni esemény osztály létrehozása például című."
  example:
  - "The following example has two parts. The first is an excerpt of a configuration file that enables ASP.NET to use a custom event that uses the WebProcessInformation type.  \n  \n The second shows how to implement the custom event.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n      <add    \n        name=\"SampleProcessInformation\"   \n        type=\"SamplesAspNet.SampleWebProcessInformation, webprocessinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\"/>  \n    </eventMappings>  \n  \n    <rules>  \n      <add   \n        name=\"Custom Process Information\"  \n        eventName=\"SampleProcessInformation\"   \n        provider=\"EventLogProvider\"  \n        profile=\"Default\"/>  \n    </rules>  \n  \n</healthMonitoring>  \n  \n```  \n  \n The following example shows how to implement a custom event that uses the WebProcessInformation type.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/csharp/t-system.web.management._13_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._13_1.vb)]"
  syntax:
    content: public sealed class WebProcessInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.AccountName
  id: AccountName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Lekérdezi a munkavégző folyamat a fiók nevét."
  remarks: "Az alkalmazás kell a megfelelő engedélyekkel a tulajdonság által biztosított információk eléréséhez."
  example:
  - "The following example shows how to obtain the process account name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/csharp/p-system.web.management._38_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#4](~/add/codesnippet/visualbasic/p-system.web.management._38_1.vb)]"
  syntax:
    content: public string AccountName { get; }
    return:
      type: System.String
      description: "A munkavégző folyamat fióknevet."
  overload: System.Web.Management.WebProcessInformation.AccountName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Formázza az alkalmazással kapcsolatos adatok."
  remarks: "A FormatToString módszert biztosít események adatait, amely akkor hasznos, ha az eseményadat kell naplózza, és később jelenik meg a felhasználó formátuma nem egységes. A metódus belső van meghívva, amikor a szolgáltató hív meg, egy a <xref:System.Web.Management.WebBaseEvent.ToString%2A>módszerek.</xref:System.Web.Management.WebBaseEvent.ToString%2A>"
  example:
  - "The following example shows how to format custom information.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/csharp/f15874b7-315f-41fa-b773-_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#7](~/add/codesnippet/visualbasic/f15874b7-315f-41fa-b773-_1.vb)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "A <xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref> , amely tartalmazza a lap és behúzás beállításait, a webes állapotinformációkat esemény formázásához használt."
  overload: System.Web.Management.WebProcessInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessID
  id: ProcessID
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Lekérdezi a folyamat azonosítója."
  remarks: "Ez az ASP.NET futtató munkavégző folyamat azonosítóját."
  example:
  - "The following example shows how to obtain the process identifier.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/csharp/p-system.web.management._19_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._19_1.vb)]"
  syntax:
    content: public int ProcessID { get; }
    return:
      type: System.Int32
      description: "A folyamat azonosítója."
  overload: System.Web.Management.WebProcessInformation.ProcessID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebProcessInformation.ProcessName
  id: ProcessName
  parent: System.Web.Management.WebProcessInformation
  langs:
  - csharp
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Lekérdezi a folyamat nevét."
  remarks: "Azt a nevet, amelyen az ASP.NET munkavégző folyamat."
  example:
  - "The following example shows how to obtain the process name.  \n  \n [!code-cs[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/csharp/p-system.web.management._6_1.cs)]\n [!code-vb[System.Web.Management.WebProcessInformation#6](~/add/codesnippet/visualbasic/p-system.web.management._6_1.vb)]"
  syntax:
    content: public string ProcessName { get; }
    return:
      type: System.String
      description: "A folyamat nevét."
  overload: System.Web.Management.WebProcessInformation.ProcessName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebProcessInformation.AccountName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
  fullName: System.Web.Management.WebProcessInformation.AccountName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebProcessInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebProcessInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebProcessInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebProcessInformation.ProcessID
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
  fullName: System.Web.Management.WebProcessInformation.ProcessID
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebProcessInformation.ProcessName
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
  fullName: System.Web.Management.WebProcessInformation.ProcessName
- uid: System.Web.Management.WebProcessInformation.AccountName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: AccountName
  nameWithType: WebProcessInformation.AccountName
- uid: System.Web.Management.WebProcessInformation.FormatToString*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebProcessInformation.FormatToString
- uid: System.Web.Management.WebProcessInformation.ProcessID*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessID
  nameWithType: WebProcessInformation.ProcessID
- uid: System.Web.Management.WebProcessInformation.ProcessName*
  parent: System.Web.Management.WebProcessInformation
  isExternal: false
  name: ProcessName
  nameWithType: WebProcessInformation.ProcessName
