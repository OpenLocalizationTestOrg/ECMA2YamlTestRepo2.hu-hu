### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.IOrderedDictionary
  id: IOrderedDictionary
  children:
  - System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  - System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  - System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  - System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  langs:
  - csharp
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
  type: Interface
  summary: "Egy kulcs/érték párok indexelt gyűjteményét képviseli."
  remarks: "A kulcs vagy az index IOrderedDictionary elemek is elérhető.       Minden eleme egy tárolt kulcs/érték pár egy <xref:System.Collections.DictionaryEntry>struktúra.</xref:System.Collections.DictionaryEntry>       Minden párt rendelkeznie kell egy egyedi kulcs, amely nem `null`, de az érték lehet `null` és nem kell egyedinek lennie. A IOrderedDictionary felület lehetővé teszi, hogy a benne lévő kulcsok és értékek jelenjenek, de nem feltétlenül jelenti a megadott rendezési sorrend.       A `foreach` utasítás a C# nyelv (`For Each` a Visual Basic nyelvben) a gyűjtemény elemeinek típusú objektum beolvasása. Mivel egyes elemeinek a <xref:System.Collections.IDictionary>egy kulcs/érték pár, az elem típusa nincs a kulcs vagy érték típusú.</xref:System.Collections.IDictionary> Ehelyett a elemtípusa <xref:System.Collections.DictionaryEntry>, ahogy az alábbi példa bemutatja.</xref:System.Collections.DictionaryEntry>       [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/add/codesnippet/csharp/t-system.collections.spe_7_1.cs)][!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/add/codesnippet/cpp/t-system.collections.spe_7_1.cpp)][!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/add/codesnippet/visualbasic/t-system.collections.spe_7_1.vb) ] a `foreach` az enumeráló modulja, amely lehetővé teszi a, nem írása, a gyűjtemény csak olvasásakor csomagolásának utasítás.    "
  example:
  - "The following code example demonstrates the implementation of a simple IOrderedDictionary based on the <xref:System.Collections.ArrayList> class. The implemented IOrderedDictionary stores first names as the keys and last names as the values, with the added requirement that each first name is unique.  \n  \n [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/add/codesnippet/cpp/t-system.collections.spe_7_2.cpp)]\n [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/add/codesnippet/csharp/t-system.collections.spe_7_2.cs)]\n [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/add/codesnippet/visualbasic/t-system.collections.spe_7_2.vb)]"
  syntax:
    content: 'public interface IOrderedDictionary : System.Collections.IDictionary'
  implements:
  - System.Collections.IDictionary
  platform:
  - net462
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IOrderedDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Adja vissza, amely megismétli a számbavevő a <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény."
  remarks: "[A Visual Basic, a C#]       A `foreach` utasítás a C# nyelv (`for each` a Visual Basic nyelvben) elrejti a enumerálók összetettsége.  Ezért használatával `foreach` helyett az adatbázis közvetlen módosítása az enumerátor ajánlott.       Enumerálók beolvasni az adatokat a gyűjtemény használható, de nem használható az alapul szolgáló gyűjtemény módosításához.       Kezdetben a számbavevő a gyűjtemény első eleme elé. <xref:System.Collections.IEnumerator.Reset%2A>is jelent a számbavevő vissza az ebben a helyzetben.</xref:System.Collections.IEnumerator.Reset%2A>  Ezen a helyen a <xref:System.Collections.IEnumerator.Current%2A>tulajdonság nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> Ezért meg kell hívnia <xref:System.Collections.IEnumerator.MoveNext%2A>ahhoz, hogy a számbavevő a <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> értékének olvasása előtt a gyűjtemény első eleme</xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>az azonos objektumot ad vissza, amíg újra nem indítják <xref:System.Collections.IEnumerator.MoveNext%2A>vagy <xref:System.Collections.IEnumerator.Reset%2A>nevezik.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>Beállítja a <xref:System.Collections.IEnumerator.Current%2A>átállítása.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Ha <xref:System.Collections.IEnumerator.MoveNext%2A>gyűjteményének, a számbavevő a gyűjtemény utolsó eleme mögé van elhelyezve fázisok és <xref:System.Collections.IEnumerator.MoveNext%2A>adja vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> A számbavevő ezen a helyen, az ezt követő hívások esetén <xref:System.Collections.IEnumerator.MoveNext%2A>is vissza `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Ha az utolsó irányuló hívás <xref:System.Collections.IEnumerator.MoveNext%2A>visszaadott `false`, <xref:System.Collections.IEnumerator.Current%2A>nincs definiálva.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>Ebben az esetben a gyűjtemény első eleme a hívása <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> követ</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A> beállítása       Enumerátor érvényes marad mindaddig, amíg a gyűjtemény változatlan marad. Ha módosítják a gyűjteményhez, hozzáadása, módosítása vagy törlése elemek, például a számbavevő visszavonhatatlanul érvénytelenített és annak viselkedését nincs definiálva.       A számbavevő nem rendelkezik kizárólagos hozzáférése a gyűjteményhez; egy gyűjtemény számbavétele ezért alapvetően nem szálbiztos eljárást.  Szál biztonsági felsorolásakor biztosításához zárolhatja a teljes számbavételi művelet során a gyűjteményben.  A gyűjteményt, amelyben több szál olvasására vagy írására érhető el, hogy meg kell valósítani a saját szinkronizálási."
  example:
  - "The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class. The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique. This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.  \n  \n [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/cpp/m-system.collections.spe_15_1.cpp)]\n [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/csharp/m-system.collections.spe_15_1.cs)]\n [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/visualbasic/m-system.collections.spe_15_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Egy <xref:System.Collections.IDictionaryEnumerator>a teljes <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.IOrderedDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  id: Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  name: Insert(Int32,Object,Object)
  nameWithType: IOrderedDictionary.Insert(Int32,Object,Object)
  fullName: System.Collections.Specialized.IOrderedDictionary.Insert(Int32,Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "A kulcs/érték pár szúr be a megadott index a gyűjtemény."
  remarks: "<xref:System.Collections.Specialized.IOrderedDictionary>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.IOrderedDictionary>       Ha a `index` paraméter értéke <xref:System.Collections.ICollection.Count%2A>, a `value` paraméter végére kerül a <xref:System.Collections.Specialized.IOrderedDictionary>gyűjtemény.</xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Collections.ICollection.Count%2A>       A gyűjtemények összefüggő elemek például a listája, a kurzor követő elemek áthelyezése lefelé megfeleljen az új elem. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportba kerülnek, például egy kivonattáblát gyűjteményére vonatkoznak."
  example:
  - "The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class. The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique. This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.  \n  \n [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/cpp/36355794-2a11-4b04-824e-_1.cpp)]\n [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/csharp/36355794-2a11-4b04-824e-_1.cs)]\n [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/visualbasic/36355794-2a11-4b04-824e-_1.vb)]"
  syntax:
    content: public void Insert (int index, object key, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, ahol a kulcs/érték pár kell beilleszteni."
    - id: key
      type: System.Object
      description: "Az elem kulcsaként használatával adhatja hozzá az objektumhoz."
    - id: value
      type: System.Object
      description: "Az elem értékeként használatával adhatja hozzá az objektumhoz.  Az érték lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.IOrderedDictionary.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>értéke 0-nál kisebb.       – vagy – <code>index</code> nagyobb, mint <xref:System.Collections.ICollection.Count*>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Már létezik ilyen kulccsal rendelkező elemet a <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény csak olvasható.       – vagy – a <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény rögzített méretű rendelkezik."
  platform:
  - net462
- uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IOrderedDictionary.Item(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Lekérdezi vagy beállítja az elem a megadott indexnél."
  remarks: "<xref:System.Collections.Specialized.IOrderedDictionary>elfogadja `null` mint érvényes értéket, és lehetővé teszi a duplikált elemeket.</xref:System.Collections.Specialized.IOrderedDictionary>       A C# nyelv használ a kulcsszó helyett az Item tulajdonság végrehajtási indexelők meghatározására. Visual Basic elem megvalósítja az alapértelmezett tulajdonság, amely indexelési ugyanezt a funkcionalitást biztosítja.       Ez a tulajdonság lehetővé teszi egy adott elem a gyűjteményben a következő szintaxissal: [!code-cs [System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/add/codesnippet/csharp/p-system.collections.spe_12_1.cs)][!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/add/codesnippet/cpp/p-system.collections.spe_12_1.cpp)][!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04    ](~/add/codesnippet/visualbasic/p-system.collections.spe_12_1.vb)]"
  example:
  - "The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class. The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique. This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.  \n  \n [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/cpp/p-system.collections.spe_12_2.cpp)]\n [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/csharp/p-system.collections.spe_12_2.cs)]\n [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/visualbasic/p-system.collections.spe_12_2.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az elem lekérése vagy beállítása nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Collections.Specialized.IOrderedDictionary.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>értéke 0-nál kisebb.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.ICollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IOrderedDictionary.RemoveAt(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Eltávolítja a megadott indexpozíciójánál található elemhez."
  remarks: "A szomszédos elemeket, listák, például a gyűjtemények az elemeket, kövesse az eltávolított elem feljebb a vacated helyszíni elfoglalt. Ha a gyűjtemény egy indexelt, áthelyezett elem indexek is frissülnek. Ez a viselkedés nem ahol elemek fogalmilag csoportba kerülnek, például egy kivonattáblát gyűjteményére vonatkoznak."
  example:
  - "The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class. The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique. This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.  \n  \n [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/cpp/m-system.collections.spe_23_1.cpp)]\n [!code-cs[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/csharp/m-system.collections.spe_23_1.cs)]\n [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/add/codesnippet/visualbasic/m-system.collections.spe_23_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem nulla alapú indexét."
  overload: System.Collections.Specialized.IOrderedDictionary.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>értéke 0-nál kisebb.       – vagy – <code>index</code> egyenlőnek vagy annál nagyobb <xref:System.Collections.ICollection.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény csak olvasható.       – vagy – a <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> gyűjtemény rögzített méretű rendelkezik."
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: IOrderedDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: Insert(Int32,Object,Object)
  nameWithType: IOrderedDictionary.Insert(Int32,Object,Object)
  fullName: System.Collections.Specialized.IOrderedDictionary.Insert(Int32,Object,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: Item(Int32)
  nameWithType: IOrderedDictionary.Item(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.Item(Int32)
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IOrderedDictionary.RemoveAt(Int32)
  fullName: System.Collections.Specialized.IOrderedDictionary.RemoveAt(Int32)
- uid: System.Collections.Specialized.IOrderedDictionary.GetEnumerator*
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: IOrderedDictionary.GetEnumerator
- uid: System.Collections.Specialized.IOrderedDictionary.Insert*
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: Insert
  nameWithType: IOrderedDictionary.Insert
- uid: System.Collections.Specialized.IOrderedDictionary.Item*
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: Item
  nameWithType: IOrderedDictionary.Item
- uid: System.Collections.Specialized.IOrderedDictionary.RemoveAt*
  parent: System.Collections.Specialized.IOrderedDictionary
  isExternal: false
  name: RemoveAt
  nameWithType: IOrderedDictionary.RemoveAt
