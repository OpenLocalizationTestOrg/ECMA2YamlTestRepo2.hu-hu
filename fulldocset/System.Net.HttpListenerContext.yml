### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerContext
  id: HttpListenerContext
  children:
  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)
  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)
  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)
  - System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})
  - System.Net.HttpListenerContext.Request
  - System.Net.HttpListenerContext.Response
  - System.Net.HttpListenerContext.User
  langs:
  - csharp
  name: HttpListenerContext
  nameWithType: HttpListenerContext
  fullName: System.Net.HttpListenerContext
  type: Class
  summary: "A kérelem-válasz objektumok által használt hozzáférést biztosít a <xref href=&quot;System.Net.HttpListener&quot;> </xref> osztály. Ez az osztály nem örökölhető."
  remarks: "Ez az osztály a Hypertext Transfer Protocol (HTTP) ügyfélkérések által feldolgozott kapcsolatos információkat tartalmaz az <xref:System.Net.HttpListener>objektum.</xref:System.Net.HttpListener> Ez az osztály is rendelkezik a módszereket, amelyek lehetővé teszik egy <xref:System.Net.HttpListener>objektum WebSocket-kapcsolatok fogadására.</xref:System.Net.HttpListener>       A <xref:System.Net.HttpListener.GetContext%2A>metódus visszaadja a HttpListenerContext osztály példányai</xref:System.Net.HttpListener.GetContext%2A> Az ügyfél kérésében képviselő objektum használatához az <xref:System.Net.HttpListenerContext.Request%2A>tulajdonság.</xref:System.Net.HttpListenerContext.Request%2A> Az objektum, amely jelöli az ügyfél által küldött válasz a <xref:System.Net.HttpListener>, használja a <xref:System.Net.HttpListenerContext.Response%2A>tulajdonság.</xref:System.Net.HttpListenerContext.Response%2A> </xref:System.Net.HttpListener> A kéréseket, például a bejelentkezési nevet, és hogy azt hitelesítése, az ügyfélre vonatkozó felhasználói adatok beolvasása a Tulajdonságok tudja lekérdezni a <xref:System.Security.Principal.IPrincipal>által visszaadott objektum a <xref:System.Net.HttpListenerContext.User%2A>tulajdonság.</xref:System.Net.HttpListenerContext.User%2A> </xref:System.Security.Principal.IPrincipal>       HttpListenerContext objektum záró visszaküldi a választ az ügyfélnek, és felszabadítja a HttpListenerContext által használt erőforrások. Az ügyfél válasz elveti HttpListenerContext objektum megszakítása, ha már nem küldött, és felszabadítja a HttpListenerContext által használt erőforrások. Miután bezárása vagy megszakítása HttpListenerContext objektum, a metódusokra vagy tulajdonságokra nem hivatkozhat. Ha így tesz, kapni fog egy <xref:System.ObjectDisposedException>kivétel.</xref:System.ObjectDisposedException>"
  example:
  - "The following code example displays the user information for a client request.  \n  \n [!code-cs[Net_Listener_Basic#8](~/add/codesnippet/csharp/t-system.net.httplistene_0_1.cs)]"
  syntax:
    content: public sealed class HttpListenerContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)
  id: AcceptWebSocketAsync(System.String)
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: AcceptWebSocketAsync(String)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Fogadja el a WebSocket-kapcsolat, mint egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejezi a WebSocket-kapcsolat elfogadását követően.</xref:System.Threading.Tasks.Task%601>       A fogadási puffer mérete 16,385 bájt. A WebSocket életben tartási időköz 30000 (30 másodperc) alapértelmezett értékét."
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol);
    parameters:
    - id: subProtocol
      type: System.String
      description: "A támogatott, WebSocket alárendelt protokollt."
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum. A &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; feladat objektum tulajdonságának adja vissza egy <xref href=&quot;System.Net.WebSockets.HttpListenerWebSocketContext&quot;> </xref> objektum."
  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subProtocol</code>üres karakterlánc - vagy - <code>subProtocol</code> érvénytelen karaktereket tartalmaz."
  - type: System.Net.WebSockets.WebSocketException
    commentId: T:System.Net.WebSockets.WebSocketException
    description: "Hiba történt a WebSocket-kézfogás elvégzéséhez vonatkozó válasz küldésekor."
  platform:
  - net462
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)
  id: AcceptWebSocketAsync(System.String,System.TimeSpan)
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: AcceptWebSocketAsync(String,TimeSpan)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Fogadja el a WebSocket-kapcsolat egy aszinkron művelet, a támogatott WebSocket alárendelt protokoll és a WebSocket életben tartási időköz megadása."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejezi a WebSocket-kapcsolat elfogadását követően.</xref:System.Threading.Tasks.Task%601>       A fogadási puffer mérete 16,385 bájt."
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);
    parameters:
    - id: subProtocol
      type: System.String
      description: "A támogatott, WebSocket alárendelt protokollt."
    - id: keepAliveInterval
      type: System.TimeSpan
      description: "A WebSocket protokoll életben tartási ezredmásodpercben."
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum. A &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; feladat objektum tulajdonságának adja vissza egy <xref href=&quot;System.Net.WebSockets.HttpListenerWebSocketContext&quot;> </xref> objektum."
  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subProtocol</code>üres karakterlánc - vagy - <code>subProtocol</code> érvénytelen karaktereket tartalmaz."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keepAliveInterval</code>nem elég nagy."
  - type: System.Net.WebSockets.WebSocketException
    commentId: T:System.Net.WebSockets.WebSocketException
    description: "Hiba történt a WebSocket-kézfogás elvégzéséhez vonatkozó válasz küldésekor."
  platform:
  - net462
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)
  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: AcceptWebSocketAsync(String,Int32,TimeSpan)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Fogadja el a támogatott WebSocket alárendelt protokollt megadó WebSocket-kapcsolat, a fogadó puffer mérete, és egy aszinkron művelet WebSocket életben tartási intervallumhoz."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>> objektum befejezi a WebSocket-kapcsolat elfogadását követően.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);
    parameters:
    - id: subProtocol
      type: System.String
      description: "A támogatott, WebSocket alárendelt protokollt."
    - id: receiveBufferSize
      type: System.Int32
      description: "A fogadási puffer mérete bájtban."
    - id: keepAliveInterval
      type: System.TimeSpan
      description: "A WebSocket protokoll életben tartási ezredmásodpercben."
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum. A &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; feladat objektum tulajdonságának adja vissza egy <xref href=&quot;System.Net.WebSockets.HttpListenerWebSocketContext&quot;> </xref> objektum."
  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subProtocol</code>üres karakterlánc - vagy - <code>subProtocol</code> érvénytelen karaktereket tartalmaz."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keepAliveInterval</code>nem elég nagy.       – vagy – <code>receiveBufferSize</code> kisebb, mint 16 bájt – vagy – <code>receiveBufferSize</code> nagyobb, mint 64 kilobájt."
  - type: System.Net.WebSockets.WebSocketException
    commentId: T:System.Net.WebSockets.WebSocketException
    description: "Hiba történt a WebSocket-kézfogás elvégzéséhez vonatkozó válasz küldésekor."
  platform:
  - net462
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})
  id: AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Fogadja el a támogatott WebSocket alárendelt protokollt megadó WebSocket-kapcsolat, a puffer mérete, WebSocket életben tartási időköz és a belső puffer mérete, mint egy aszinkron művelet."
  remarks: "Ez a művelet nem fogja tiltani. A visszaadott <xref:System.Threading.Tasks.Task%601>objektum befejezi a WebSocket-kapcsolat elfogadását követően.</xref:System.Threading.Tasks.Task%601>"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext> AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment<byte> internalBuffer);
    parameters:
    - id: subProtocol
      type: System.String
      description: "A támogatott, WebSocket alárendelt protokollt."
    - id: receiveBufferSize
      type: System.Int32
      description: "A fogadási puffer mérete bájtban."
    - id: keepAliveInterval
      type: System.TimeSpan
      description: "A WebSocket protokoll életben tartási ezredmásodpercben."
    - id: internalBuffer
      type: System.ArraySegment{System.Byte}
      description: "Egy belső puffer használata ehhez a művelethez."
    return:
      type: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}
      description: "Beolvasása &lt;xref:System.Threading.Tasks.Task%601&gt;.       Az aszinkron művelet képviselő feladat objektum. A &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; feladat objektum tulajdonságának adja vissza egy <xref href=&quot;System.Net.WebSockets.HttpListenerWebSocketContext&quot;> </xref> objektum."
  overload: System.Net.HttpListenerContext.AcceptWebSocketAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subProtocol</code>üres karakterlánc - vagy - <code>subProtocol</code> érvénytelen karaktereket tartalmaz."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>keepAliveInterval</code>nem elég nagy.       – vagy – <code>receiveBufferSize</code> kisebb, mint 16 bájt – vagy – <code>receiveBufferSize</code> nagyobb, mint 64 kilobájt."
  - type: System.Net.WebSockets.WebSocketException
    commentId: T:System.Net.WebSockets.WebSocketException
    description: "Hiba történt a WebSocket-kézfogás elvégzéséhez vonatkozó válasz küldésekor."
  platform:
  - net462
- uid: System.Net.HttpListenerContext.Request
  id: Request
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpListenerContext.Request
  fullName: System.Net.HttpListenerContext.Request
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref href=&quot;System.Net.HttpListenerRequest&quot;> </xref> , amely jelzi, hogy az ügyfél által kért erőforrás."
  remarks: "Ha bezárja ezt <xref:System.Net.HttpListenerContext>, zárja be a válasz az ügyfél elküldi a <xref:System.Net.HttpListenerResponse>, amely tartalmazza a választ, és zárja be a <xref:System.Net.HttpListenerRequest>Ez a tulajdonság által visszaadott objektum.</xref:System.Net.HttpListenerRequest> </xref:System.Net.HttpListenerResponse> </xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example demonstrates calling this method. The `listener` variable holds an <xref:System.Net.HttpListener> object.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_16_1.cs)]"
  syntax:
    content: public System.Net.HttpListenerRequest Request { get; }
    return:
      type: System.Net.HttpListenerRequest
      description: "Egy <xref href=&quot;System.Net.HttpListenerRequest&quot;> </xref> az ügyfélkérés képviselő objektum."
  overload: System.Net.HttpListenerContext.Request*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerContext.Response
  id: Response
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpListenerContext.Response
  fullName: System.Net.HttpListenerContext.Response
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi a <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> objektum, amely a program elküldi az ügyfélnek az ügyfél irányuló kérelemre adott válasz."
  remarks: "Az alkalmazás tulajdonságainak megadásával konfigurálja a válasz a <xref:System.Net.HttpListenerResponse>Ez a tulajdonság által visszaadott objektum.</xref:System.Net.HttpListenerResponse> Miután a választ, elküldés az ügyfélnek a válasz bezárásával, vagy zárja be a <xref:System.Net.HttpListenerContext>objektum.</xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example demonstrates getting the response to a client's request and adding the response body.  \n  \n [!code-cs[Net_Listener_Basic#3](~/add/codesnippet/csharp/p-system.net.httplistene_35_1.cs)]"
  syntax:
    content: public System.Net.HttpListenerResponse Response { get; }
    return:
      type: System.Net.HttpListenerResponse
      description: "Egy <xref href=&quot;System.Net.HttpListenerResponse&quot;> </xref> visszajelzés az ügyfélnek való előkészítéséhez használt objektum."
  overload: System.Net.HttpListenerContext.Response*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerContext.User
  id: User
  parent: System.Net.HttpListenerContext
  langs:
  - csharp
  name: User
  nameWithType: HttpListenerContext.User
  fullName: System.Net.HttpListenerContext.User
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Lekérdezi az beszerzése az identitást, a hitelesítési adatokat és a biztonsági szerepkörök az ügyfél, amelynek kérelem ez által képviselt használt objektum <xref href=&quot;System.Net.HttpListenerContext&quot;> </xref> objektum."
  remarks: "Egy <xref:System.Net.HttpListener>, akkor van szükség a hitelesítés a <xref:System.Net.HttpListener.AuthenticationSchemes%2A>tulajdonság vagy adjon meg egy <xref:System.Net.AuthenticationSchemeSelector>használatával delegálása a <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>tulajdonság.</xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> </xref:System.Net.AuthenticationSchemeSelector> </xref:System.Net.HttpListener.AuthenticationSchemes%2A> </xref:System.Net.HttpListener>       Az ügyfél-bejelentkezési nevet és a hitelesítési adatokat a megállapításához ellenőrizze a <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName>tulajdonság az objektum tulajdonságait.</xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.  \n  \n [!code-cs[Net_Listener_Basic#8](~/add/codesnippet/csharp/p-system.net.httplistene_19_1.cs)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Egy <xref:System.Security.Principal.IPrincipal>objektum, amely ismerteti az ügyfelet, vagy <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Ha a <xref href=&quot;System.Net.HttpListener&quot;> </xref> , amely a megadott <xref href=&quot;System.Net.HttpListenerContext&quot;> </xref> nem igényel hitelesítést.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Net.HttpListenerContext.User*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.WebSockets.WebSocketException
  parent: System.Net.WebSockets
  isExternal: false
  name: WebSocketException
  nameWithType: WebSocketException
  fullName: System.Net.WebSockets.WebSocketException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: AcceptWebSocketAsync(String)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String)
- uid: System.Threading.Tasks.Task{System.Net.WebSockets.HttpListenerWebSocketContext}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<HttpListenerWebSocketContext>
  nameWithType: Task<HttpListenerWebSocketContext>
  fullName: System.Threading.Tasks.Task<System.Net.WebSockets.HttpListenerWebSocketContext>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.WebSockets.HttpListenerWebSocketContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.WebSockets.HttpListenerWebSocketContext
    name: HttpListenerWebSocketContext
    nameWithType: HttpListenerWebSocketContext
    fullName: HttpListenerWebSocketContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: AcceptWebSocketAsync(String,TimeSpan)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: AcceptWebSocketAsync(String,Int32,TimeSpan)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
  nameWithType: HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
  fullName: System.Net.HttpListenerContext.AcceptWebSocketAsync(String,Int32,TimeSpan,ArraySegment<Byte>)
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerContext.Request
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: Request
  nameWithType: HttpListenerContext.Request
  fullName: System.Net.HttpListenerContext.Request
- uid: System.Net.HttpListenerRequest
  parent: System.Net
  isExternal: false
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: System.Net.HttpListenerRequest
- uid: System.Net.HttpListenerContext.Response
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: Response
  nameWithType: HttpListenerContext.Response
  fullName: System.Net.HttpListenerContext.Response
- uid: System.Net.HttpListenerResponse
  parent: System.Net
  isExternal: false
  name: HttpListenerResponse
  nameWithType: HttpListenerResponse
  fullName: System.Net.HttpListenerResponse
- uid: System.Net.HttpListenerContext.User
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: User
  nameWithType: HttpListenerContext.User
  fullName: System.Net.HttpListenerContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Net.HttpListenerContext.AcceptWebSocketAsync*
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: AcceptWebSocketAsync
  nameWithType: HttpListenerContext.AcceptWebSocketAsync
- uid: System.Net.HttpListenerContext.Request*
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: Request
  nameWithType: HttpListenerContext.Request
- uid: System.Net.HttpListenerContext.Response*
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: Response
  nameWithType: HttpListenerContext.Response
- uid: System.Net.HttpListenerContext.User*
  parent: System.Net.HttpListenerContext
  isExternal: false
  name: User
  nameWithType: HttpListenerContext.User
