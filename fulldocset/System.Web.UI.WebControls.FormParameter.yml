### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormParameter
  id: FormParameter
  children:
  - System.Web.UI.WebControls.FormParameter.#ctor
  - System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.FormParameter.Clone
  - System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.FormParameter.FormField
  - System.Web.UI.WebControls.FormParameter.ValidateInput
  langs:
  - csharp
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
  type: Class
  summary: "HTTP-kérelem értékének köti <xref:System.Web.HttpRequest.Form*>olyan parameter objektumot mezőről.</xref:System.Web.HttpRequest.Form*>"
  remarks: "A FormParameter osztály használatával kötni az űrlap változó értékét a <xref:System.Web.HttpRequest.Form%2A>a paraméteres lekérdezés vagy parancs használt paraméter-gyűjteményben.</xref:System.Web.HttpRequest.Form%2A> Vezérlőelemek adatok kötni a következő paraméterre, előfordulhat, hogy kivételt jelez, ha egy FormParameter van megadva, de nem megfelelő űrlap változó átadása. Nincsenek adatok akkor is megjelenhet, ha az űrlap változó átadása megfelelő érték nélkül. Állítsa be a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>elkerülése érdekében az ezekben a helyzetekben, ahol.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>       A FormParameter osztály biztosít a <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>tulajdonság, amely azonosítja a kívül <xref:System.Web.UI.WebControls.Parameter>osztályból</xref:System.Web.UI.WebControls.Parameter> öröklődik, kötni az űrlap változó neve</xref:System.Web.UI.WebControls.FormParameter.FormField%2A>      > [!IMPORTANT] > A FormParameter nem ellenőrzi az bármely módon az űrlap elem által átadott érték; a nyers értéket használja. A legtöbb esetben ellenőrizheti a FormParameter értékének kezelnek, mint az esemény által adatforrás-vezérlőhöz használata előtt a `Selecting`, `Updating`, `Inserting`, vagy `Deleting` esemény jelennek meg, ha az adatforrás-vezérlő használ. Ha a paraméter értéke nem felel meg az érvényesítési tesztek, megszakíthatja úgy, hogy az művelet a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>tulajdonsága a társított <xref:System.ComponentModel.CancelEventArgs>az osztály `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple ASP.NET Web page. The current data in the data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls and clicking the button. When the button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_143_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("FormField")]

      public class FormParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Új névtelen példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> osztály."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>az FormParameter konstruktorral létrehozott objektum inicializálása során való tulajdonságok alapértelmezett értékeinek.</xref:System.Web.UI.WebControls.FormParameter> A <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> inicializálása</xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Emellett a <xref:System.Web.UI.WebControls.Parameter.Name%2A>tulajdonság az inicializáláskor felvesz a <xref:System.String.Empty?displayProperty=fullName>, a <xref:System.Web.UI.WebControls.Parameter.Type%2A>tulajdonság az inicializáláskor felvesz a <xref:System.TypeCode?displayProperty=fullName>, a <xref:System.Web.UI.WebControls.Parameter.Direction%2A>tulajdonság az inicializáláskor felvesz a <xref:System.Data.ParameterDirection>, és a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>tulajdonság az inicializáláskor felvesz null értékre (`Nothing` a Visual Basic nyelvben).</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Data.ParameterDirection> </xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_75_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public FormParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  id: '#ctor(System.Web.UI.WebControls.FormParameter)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> értékekkel rendelkező osztály által meghatározott példányának a <code> original </code> paraméter."
  remarks: "A FormParameter konstruktor egy `protected` másolási konstruktorral használt klónozásához egy <xref:System.Web.UI.WebControls.FormParameter>példány.</xref:System.Web.UI.WebControls.FormParameter> Az értékeket a <xref:System.Web.UI.WebControls.FormParameter>, többek között a következőket <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, és <xref:System.Web.UI.WebControls.Parameter.Type%2A>összes átkerülnek az új példány.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> </xref:System.Web.UI.WebControls.FormParameter>"
  syntax:
    content: protected FormParameter (System.Web.UI.WebControls.FormParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.FormParameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> -példányt, az aktuális példány a inicializálva."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializál egy új példányát nevű a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> osztály azonosításához mely űrlapmező változó lehet kötést létrehozni a megadott karakterlánc használatával."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>az FormParameter konstruktorral létrehozott objektum inicializálása a megadott paraméternév és a karakterlánc, amely azonosítja az űrlap változó, amely a paraméter van kötve.</xref:System.Web.UI.WebControls.FormParameter> A <xref:System.Web.UI.WebControls.Parameter.Type%2A>és <xref:System.Web.UI.WebControls.Parameter.Direction%2A>Tulajdonságok rendszer inicializálja az alapértelmezett értékekkel.</xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.Web.UI.WebControls.Parameter.Type%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_211_1.aspx)]"
  syntax:
    content: public FormParameter (string name, string formField);
    parameters:
    - id: name
      type: System.String
      description: "A paraméter neve."
    - id: formField
      type: System.String
      description: "A paraméter objektum kötött űrlap változó neve. Az alapértelmezett érték <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> osztály azonosításához mely űrlapmező változó lehet kötést létrehozni a megadott karakterlánc használatával."
  syntax:
    content: public FormParameter (string name, System.Data.DbType dbType, string formField);
    parameters:
    - id: name
      type: System.String
      description: "A paraméter neve."
    - id: dbType
      type: System.Data.DbType
      description: "A paraméter adatbázistípusa."
    - id: formField
      type: System.String
      description: "A paraméter objektum kötött űrlap változó neve."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Új névvel és szigorú típusmegadású példányát inicializálja a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> osztály azonosításához mely űrlap változó lehet kötést létrehozni a megadott karakterlánc használatával."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>az FormParameter konstruktorral létrehozott objektum inicializálása a megadott paraméternév <xref:System.Web.UI.WebControls.Parameter.Type%2A>, és a karakterlánc, amely azonosítja az űrlap változó, amely a paraméter van kötve.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.FormParameter> Csak a <xref:System.Web.UI.WebControls.Parameter.Direction%2A>és <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>Tulajdonságok rendszer inicializálja az alapértelmezett értékekkel.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> </xref:System.Web.UI.WebControls.Parameter.Direction%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/csharp/8907b4db-f03b-4c6d-87a9-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/visualbasic/8907b4db-f03b-4c6d-87a9-_1.aspx)]"
  syntax:
    content: public FormParameter (string name, TypeCode type, string formField);
    parameters:
    - id: name
      type: System.String
      description: "A paraméter neve."
    - id: type
      type: System.TypeCode
      description: "A paraméter jelölő típus. Az alapértelmezett érték <xref:System.TypeCode>.</xref:System.TypeCode>"
    - id: formField
      type: System.String
      description: "A paraméter objektum kötött űrlap változó neve. Az alapértelmezett érték <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adja vissza az aktuális duplikált <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> példány."
  remarks: "A Klónozás metódushívások a <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>másolási konstruktorral új példányának inicializálása a <xref:System.Web.UI.WebControls.FormParameter>osztály az értékeket az aktuális példányának példányazonosítója.</xref:System.Web.UI.WebControls.FormParameter> </xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> , hogy-e az éppen pontos másolata."
  overload: System.Web.UI.WebControls.FormParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Frissítések és az értékét adja vissza a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> objektum."
  remarks: "A <xref:System.Web.UI.WebControls.FormParameter>kötni az űrlap változó minden alkalommal, amikor a kiértékelés metódus lehívásra kerül megpróbálja.</xref:System.Web.UI.WebControls.FormParameter>       A `context` paramétert használja a kiértékelés metódust a megadott űrlapmező értékének beolvasása a kérelemből. A `control` paraméter a rendszer figyelmen kívül hagyja."
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Az aktuális <xref href=&quot;System.Web.HttpContext&quot;> </xref> a kérelem."
    - id: control
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;> </xref> a lap társított ahol a <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> szolgál."
    return:
      type: System.Object
      description: "A paraméter frissített és aktuális értékét képviselő objektum. Ha a környezet vagy a kérelem üres (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> a Visual Basic nyelvben), a kiértékelés metódus null értéket ad vissza."
  overload: System.Web.UI.WebControls.FormParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.FormField
  id: FormField
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja az űrlap változó, amely összekapcsolja a paraméter nevét."
  remarks: "A FormField átadott név/érték pár azonosítja a <xref:System.Web.HttpRequest.Form%2A>gyűjtemény.</xref:System.Web.HttpRequest.Form%2A> A FormField tulajdonság a kulcspár neve azonosítja a <xref:System.Web.UI.WebControls.FormParameter>futási időben a megfelelő értékkel van kötve.</xref:System.Web.UI.WebControls.FormParameter> Ha a várt űrlap változójának karakterláncában név-érték pár nem adta át az ASP.NET Web oldalra a gyűjteményhez, a <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>módszer van kötve a paraméter értékének a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>tulajdonság, ha a beállítás.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Ha a <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>nincs megadva, a <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>módszer nem jár sikerrel, egy értéket a paraméter kötődni.</xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> </xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>"
  example:
  - "The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and a <xref:System.Web.UI.WebControls.FormParameter> to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a submit button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox> and click the button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression used to filter the data retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. This property uses parameter placeholders that are evaluated to the parameters contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is a <xref:System.Web.UI.WebControls.FormParameter> bound to the value of the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_1.aspx)]  \n  \n The following code example shows the middle-tier business object that the previous code example uses. This example consists of two basic classes: The `EmployeeLogic` class encapsulates business logic, and the `NorthwindEmployee` class is a model class that contains only the basic functionality required to load and persist data from the data tier. For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on the user to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the ASP.NET code examples provided.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_2.vb)]"
  syntax:
    content: public string FormField { get; set; }
    return:
      type: System.String
      description: "Egy karakterlánc, amely azonosítja a képernyőn változó a paraméter van kötve."
  overload: System.Web.UI.WebControls.FormParameter.FormField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Lekérdezi vagy beállítja egy érték, amely azt jelzi, hogy az ügyfél a paraméter bemeneti van hitelesítve."
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha érvényesítette az ügyfél bemeneti; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
- uid: System.Web.UI.WebControls.FormParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.FormParameter.Clone
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.FormParameter.FormField
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormParameter.#ctor*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.Clone*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone
  nameWithType: FormParameter.Clone
- uid: System.Web.UI.WebControls.FormParameter.Evaluate*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate
  nameWithType: FormParameter.Evaluate
- uid: System.Web.UI.WebControls.FormParameter.FormField*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
