### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanCng
  id: ECDiffieHellmanCng
  children:
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  - System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  - System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  - System.Security.Cryptography.ECDiffieHellmanCng.Key
  - System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  - System.Security.Cryptography.ECDiffieHellmanCng.Label
  - System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  - System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  - System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  - System.Security.Cryptography.ECDiffieHellmanCng.Seed
  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  - System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  langs:
  - csharp
  name: ECDiffieHellmanCng
  nameWithType: ECDiffieHellmanCng
  fullName: System.Security.Cryptography.ECDiffieHellmanCng
  type: Class
  summary: "Egy kriptográfiai következő generációs (CNG) végrehajtása az elliptikus görbe Diffie-Hellman (ECDH) algoritmus biztosít. Ez az osztály a titkosítási műveletek végrehajtásához használatos."
  remarks: "Az ECDiffieHellmanCng osztály lehetővé teszi, hogy a két fél Exchange titkos kulcs adatai, még akkor is, ha egy nyilvános csatornán keresztül kommunikálnak.  A két fél is kiszámíthatja a azonos, nevezzük titkos értéke a *titkos megállapodás* a felügyelt Diffie-Hellman osztályok. A titkos megállapodás a különböző célokra, beleértve a szimmetrikus kulcs használható. Ahelyett, hogy csökkenjen a titkos megállapodás közvetlenül, azonban az ECDiffieHellmanCng osztály egyes utáni feldolgozási a szerződésben, mielőtt az érték Igen. A feldolgozás után a neve a *kulcs származtatását függvény (KDF)*; kiválaszthatja, hogy mely KDF szeretné használni, és annak paramétereiről keresztül tulajdonságait a Diffie-Hellman objektum a példányon.      | A kulcs származtatását függvény |} Tulajdonságok |}   |-----------------------------|----------------|   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-A kivonatoló algoritmus, amely segítségével dolgozza fel a titkos megállapodás.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>-A nem kötelező bájttömb illesztenie a titkos megállapodás előtt kivonatoláshoz azt.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>-A nem kötelező bájttömb kivonatolás, mielőtt a titkos megállapodás hozzáfűzése. |}   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A>-A kivonatoló algoritmus, amely segítségével dolgozza fel a titkos megállapodás.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>-A nem kötelező bájttömb illesztenie a titkos megállapodás előtt kivonatoláshoz azt.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>-A nem kötelező bájttömb kivonatolás, mielőtt a titkos megállapodás hozzáfűzése. |}   | <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>| <xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A>-Kulcs származtatását feliratát.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction></xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A><br /><br /> <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A>-A kezdőérték, a kulcs származtatását. |}       A kulcs származtatását funkción keresztül titkos megállapodás átadásakor eredménye egy bájttömböt, amely felhasználható az alkalmazás kulcsokat tárol.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A> A létrehozott kulcs anyag bájtok száma a kulcs származtatását függvény; függ például SHA-256 hoz létre kulcsokat tárol, 256 bit, mivel az SHA-512 hoz létre a fő anyag 512 bites. Az alapszintű adatfolyam egy ECDH kulcscserére a következőképpen történik: 1.  Alice, Bob és hozzon létre egy kulcspárt használandó a Diffie-Hellman kulcscsere művelet 2.  Alice, Bob és konfigurálja a KDF a a Elfogadom paraméterek használatával.      3.  Alice küld Bob nyilvános kulcsát.      4.  Bálint küld Anna a nyilvános kulcsot.      5.  Alice, Bob és egymás nyilvános kulcsok használata a titkos megállapodás előállításához, és a titkos megállapodás előállításához kulcsokat tárol a KDF vonatkoznak."
  example:
  - "The following example shows how to use the ECDiffieHellmanCng class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.  \n  \n [!code-vb[ECDiffieHellmanCng#1](~/add/codesnippet/visualbasic/t-system.security.crypto_88_1.vb)]\n [!code-cs[ECDiffieHellmanCng#1](~/add/codesnippet/csharp/t-system.security.crypto_88_1.cs)]"
  syntax:
    content: 'public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.ECDiffieHellman
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.ECDiffieHellman.Create
  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])
  - System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm
  - System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng()
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> véletlenszerű kulcspár osztályra."
  remarks: "A véletlenszerű kulcspár tartozik egy alapértelmezett nyilvános 521 bites kulcshosszt."
  syntax:
    content: public ECDiffieHellmanCng ();
    parameters: []
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng(Int32)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> véletlenszerű kulcspár, használja a megadott kulcsméret osztályra."
  remarks: "A véletlenszerű kulcsból álló kulcspárt kell a nyilvános kulcs hossza határozzák meg a `keySize` paraméter."
  syntax:
    content: public ECDiffieHellmanCng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: "A kulcs mérete. Érvényes kulcs értékek 256 384 és 521 bits."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keySize</code>Adja meg a rendszer érvénytelen hosszt."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Titkosítás Next Generation (CNG) osztályok nem támogatottak a rendszeren."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ECDiffieHellmanCng(CngKey)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> használatával a megadott osztály <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektum."
  syntax:
    content: public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: "A kulcs a titkosítási műveleteket végzi el az aktuális objektum bemeneteként használható."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>Adjon meg egy elliptikus görbe Diffie-Hellman (ECDH) algoritmus csoporthoz."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Titkosítás Next Generation (CNG) osztályok nem támogatottak a rendszeren."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Osztályból származik, amely használatával a kivonatoló függvényt, egy másik fél nyilvános kulcsot, kivonatoló algoritmus neve, a prepend és hozzáfűző értékkel megadott kulcsként használható bájt."
  remarks: "Ha a értékének `secretPrepend` vagy `secretAppend` van `null`, akkor azok üres tömbök tekintendők."
  syntax:
    content: public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    - id: secretPrepend
      type: System.Byte[]
      description: "A származtatott titkos kulcsot a kivonatolás előtt illesztenie érték."
    - id: secretAppend
      type: System.Byte[]
      description: "A származtatott titkos hozzáfűzése előtt kivonatoláshoz érték."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>Nincs olyan ECDH kulcs, vagy nincs megfelelő méretűek.       -or-       <code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Minden egyéb hibákat."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A kivonat-alapú üzenethitelesítési kód (HMAC) használatával kulcsként használt bájt osztályból származik."
  remarks: "Ha a értékének `secretPrepend` vagy `secretAppend` van `null`, akkor azok üres tömbök tekintendők. Ha az értéke `hmacKey` van `null`, az eredmény az elliptikus görbe Diffie-Hellman (ECDH) algoritmus használandó HMAC kulcsként."
  syntax:
    content: public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: "A kivonatoló algoritmust a kulcsokat tárol létrehozására."
    - id: hmacKey
      type: System.Byte[]
      description: "A kulcs a HMAC."
    - id: secretPrepend
      type: System.Byte[]
      description: "A származtatott titkos kulcsot a kivonatolás előtt illesztenie érték."
    - id: secretAppend
      type: System.Byte[]
      description: "A származtatott titkos hozzáfűzése előtt kivonatoláshoz érték."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>Nincs olyan ECDH kulcs, vagy nincs megfelelő méretűek.       -or-       <code>hashAlgorithm</code>.<xref:System.Security.Cryptography.HashAlgorithmName.Name*> van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> vagy &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Minden egyéb hibákat."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyMaterial(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Osztályból származik, amely a megadott két fél közötti titkos megállapodás jönnek létre a kulcsokat tárol egy <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektum, amely a másik fél nyilvános kulcsot tartalmazza."
  syntax:
    content: public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.CngKey
      description: "Egy objektum, amely a másik fél a kulcsok cseréjét az elliptikus görbe Diffie-Hellman (ECDH) kulcs nyilvános részét tartalmazza."
    return:
      type: System.Byte[]
      description: "A kulcs anyagokat tartalmaz egy bájttömböt. Ezt az információt a titkos megállapodás az aktuális objektum titkos kulcs és a megadott nyilvános kulcs alapján jön létre."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>érvénytelen. Vagy a <xref:System.Security.Cryptography.CngKey.AlgorithmGroup*> tulajdonság nem adja meg a <xref:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*> vagy a kulcs mérete nem felel meg ennek a példánynak a kulcs mérete."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ez az objektum <> </> *> tulajdonság határozza meg a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;> </xref> kulcsszármaztatási függvény, de akár <> </> *> vagy <xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*>van <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed*>"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Minden egyéb hibákat."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Osztályból származik, amely a megadott két fél közötti titkos megállapodás jönnek létre a kulcsokat tárol egy <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> objektum, amely a másik fél nyilvános kulcsot tartalmazza."
  syntax:
    content: public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A nyilvános kulcs a másik fél a kulcsok cseréjét."
    return:
      type: System.Byte[]
      description: "A kulcs anyagokat tartalmaz egy bájttömböt. Ezt az információt a titkos megállapodás az aktuális objektum titkos kulcs és a megadott nyilvános kulcs alapján jön létre."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>nem egy <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCngPublicKey&quot;> </xref> kulcs."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  id: DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A Transport Layer Security (TLS) Pseudo-Random függvény (PRF) kért kulcsderiválási algoritmust használja kulcsként használt bájt osztályból származik."
  syntax:
    content: public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A másik fél nyilvános kulcs."
    - id: prfLabel
      type: System.Byte[]
      description: "ASCII-kódolású PRF címke."
    - id: prfSeed
      type: System.Byte[]
      description: "A 64 bájtos PRF leképezésben."
    return:
      type: System.Byte[]
      description: "A kulcsok cseréjét, a másik fél nyilvános kulccsal a kulcsokat tárol."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>prfLabel</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>prfSeed</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>Nincs olyan ECDH kulcs, vagy nincs megfelelő méretűek."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code>prfSeed</code>a rendszer nem pontosan 64 bájt hosszúságú.       - vagy más kriptográfiai hibák."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  id: DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveSecretAgreementHandle(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a megadott két fél közötti titkos megállapodás leírót egy <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> objektum, amely a másik fél nyilvános kulcsot tartalmazza."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.CngKey
      description: "Egy objektum, amely a másik fél a kulcsok cseréjét az elliptikus görbe Diffie-Hellman (ECDH) kulcs nyilvános részét tartalmazza."
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
      description: "A titkos megállapodás leírót. Ezek az információk az aktuális objektum titkos kulcs és a megadott nyilvános kulccsal kiszámítása."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>Nincs olyan ECDH kulcs, vagy nincs megfelelő méretűek."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Minden egyéb hibákat."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  id: DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a megadott két fél közötti titkos megállapodás leírót egy <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> objektum, amely a másik fél nyilvános kulcsot tartalmazza."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);
    parameters:
    - id: otherPartyPublicKey
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A nyilvános kulcs a másik fél a kulcsok cseréjét."
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
      description: "A titkos megállapodás leírót. Ezek az információk az aktuális objektum titkos kulcs és a megadott nyilvános kulccsal kiszámítása."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>otherPartyPublicKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>otherPartyPublicKey</code>nem egy <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;> </xref> kulcs."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  id: FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: FromXmlString(String)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ez a metódus nincs megvalósítva."
  remarks: "Egy XML-kulccsal deszerializálása, használja a <xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>helyette túlterhelés.</xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override void FromXmlString (string xmlString);
    parameters:
    - id: xmlString
      type: System.String
      description: "Az XML-alapú kulcs adataira deszerializálható."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Ez a módszer nem felülírta erre a példányra."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Az XML-karakterlánc kulcsinformációit deserializes a megadott formátumban."
  syntax:
    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: xml
      type: System.String
      description: "Az XML-alapú kulcs adataira deszerializálható."
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "Az XML-karakterlánc formátuma a számbavételi érték egyikét. Az egyetlen jelenleg elfogad formátuma <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xml</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>xml</code>rosszul megformázva."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>Adja meg az érvénytelen formátumú. Az egyetlen elfogadható érték <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Minden egyéb hibákat."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  id: HashAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kivonatoló algoritmust kulcsokat tárol létrehozásakor."
  remarks: "Ez a tulajdonság által kriptográfiai következő generációs (CNG) objektumok csak akkor, ha használható a <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>vagy <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>érték adható meg a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonság.</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>       Ez a tulajdonság a következő algoritmusokat fogad: <xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>, <xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A>, és <xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A> </xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A> </xref:System.Security.Cryptography.CngAlgorithm.MD5%2A>       Egyéb egyéni kivonatoló algoritmusok is használható.       Az alapértelmezett algoritmus <xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>.</xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A>"
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Egy objektum, amely meghatározza a kivonatoló algoritmus."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Az érték<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  id: HmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kivonat-alapú üzenethitelesítési kód (HMAC) kulcsot kulcsokat tárol való származtatáskor."
  remarks: "Ez a tulajdonság csak akkor, ha vonatkozik a <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>érték adható meg a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonság, és a <xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A>tulajdonság `false`.</xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Alapértelmezés szerint a értéke `null`."
  syntax:
    content: public byte[] HmacKey { get; set; }
    return:
      type: System.Byte[]
      description: "A kivonat-alapú üzenethitelesítési kód (HMAC) kulcsot kulcsokat tárol való származtatáskor."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key
  id: Key
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Megadja a <xref href=&quot;System.Security.Cryptography.CngKey&quot;> </xref> , amelyek használják az aktuális objektum titkosítási műveleteket."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: "A titkosítási műveleteket az objektum által használt kulcspár."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Key*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  id: KeyDerivationFunction
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kulcs származtatását függvényt a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> osztály."
  remarks: "Ez a tulajdonság határozza meg, hogy a kulcs származtatását függvény, amely használatával a kulcsokat tárol a titkos megállapodás."
  syntax:
    content: public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: 'One of the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref> enumeration values: <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>, <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>, or <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;></xref>. Az alapértelmezett érték <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&quot;> </xref>.'
  overload: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Az enumerálás értéke tartományon kívül esik."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label
  id: Label
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a felirat a kulcs származtatását használt."
  remarks: "Ez az érték a kulcs származtatását használható, ha a <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>érték adható meg a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonság.</xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Alapértelmezés szerint van `null`."
  syntax:
    content: public byte[] Label { get; set; }
    return:
      type: System.Byte[]
      description: "A címke értéke."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi a nyilvános kulcsot egy másik használható <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> objektum megosztott titkos megállapodás előállításához."
  syntax:
    content: public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.ECDiffieHellmanPublicKey
      description: "A nyilvános kulcs társított ezen példánya számára a <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> objektum."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  id: SecretAppend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja egy érték, amely hozzá lesznek fűzve a titkos megállapodás kulcsokat tárol létrehozásakor."
  remarks: "Ez az érték a kulcs származtatását használható, ha a <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>vagy <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>kulcsszármaztatási függvény (KDF) használatos.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> Az értéket a rendszer hozzáfűzi a titkos megállapodás, és az összesített érték a kulcsokat tárol létrehozásához KDF továbbítódik. Alapértelmezés szerint a értéke `null`."
  syntax:
    content: public byte[] SecretAppend { get; set; }
    return:
      type: System.Byte[]
      description: "Az érték, amelyek számára a titkos megállapodás."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  id: SecretPrepend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja egy érték, amely megkapja a titkos megállapodás elejére kulcsokat tárol való származtatáskor."
  remarks: "Ezt az értéket a kulcs származtatását használja, ha a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonsága a következő értékek egyikét:- <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>- <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>értékét a titkos megállapodás van $a, és az összesített érték a kulcs származtatását függvényt (KDF) a kulcsokat tárol továbbítódik.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Alapértelmezés szerint a értéke `null`."
  syntax:
    content: public byte[] SecretPrepend { get; set; }
    return:
      type: System.Byte[]
      description: "Az érték, amelyek számára a kulcs származtatását során titkos megállapodás elejére."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  id: Seed
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi vagy beállítja a kezdőérték kulcsokat tárol való származtatás esetén használható."
  remarks: "Ez az érték a kulcs származtatását használható, ha a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonság értéke <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Alapértelmezés szerint a értéke `null`."
  syntax:
    content: public byte[] Seed { get; set; }
    return:
      type: System.Byte[]
      description: "A kezdeti érték."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.Seed*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  id: ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ToXmlString(Boolean)
  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Ez a metódus nincs megvalósítva."
  remarks: "Az aktuális kulcs átalakítása egy XML-ábrázolását, használja a <xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>helyette túlterhelés.</xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29>"
  syntax:
    content: public override string ToXmlString (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a titkos paraméterek; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Nem alkalmazható."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Ez a módszer nem felülírta erre a példányra."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "A megadott formátumban rendezi sorba az XML-karakterlánc kulcs adataira."
  syntax:
    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.ECKeyXmlFormat
      description: "Az XML-karakterlánc formátuma a számbavételi érték egyikét. Az egyetlen jelenleg elfogad formátuma <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
    return:
      type: System.String
      description: "Egy karakterlánc-objektum, amely tartalmazza a kulcsadatokat, szerializálható XML-karakterlánc, a kért formátum szerint."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>format</code>Adja meg az érvénytelen formátumú. Az egyetlen elfogadható érték <xref href=&quot;System.Security.Cryptography.ECKeyXmlFormat&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  id: UseSecretAgreementAsHmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  langs:
  - csharp
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Lekérdezi egy érték, amely azt jelzi, hogy a titkos megállapodás használható kivonat-alapú üzenethitelesítési kód (HMAC) kulcsként származnia kulcsokat tárol."
  remarks: '-Ez az érték a kulcs származtatását használható, ha a <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>tulajdonság értéke <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction>.</xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> Alapértelmezés szerint a értéke `false`.'
  syntax:
    content: public bool UseSecretAgreementAsHmacKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a titkos megállapodás kulcsokat tárol; kapcsolattípusokból HMAC kulcsként használja Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.ECDiffieHellman
  isExternal: false
  name: System.Security.Cryptography.ECDiffieHellman
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng()
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng(Int32)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng(CngKey)
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle(CngKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString(String)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString(String,ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECKeyXmlFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: ECKeyXmlFormat
  nameWithType: ECKeyXmlFormat
  fullName: System.Security.Cryptography.ECKeyXmlFormat
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString(Boolean)
  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString(ECKeyXmlFormat)
  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ECDiffieHellmanCng
  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHash
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyFromHmac
  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyMaterial
  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveKeyTls
  nameWithType: ECDiffieHellmanCng.DeriveKeyTls
- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: DeriveSecretAgreementHandle
  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Dispose
  nameWithType: ECDiffieHellmanCng.Dispose
- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: FromXmlString
  nameWithType: ECDiffieHellmanCng.FromXmlString
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HashAlgorithm
  nameWithType: ECDiffieHellmanCng.HashAlgorithm
- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: HmacKey
  nameWithType: ECDiffieHellmanCng.HmacKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Key
  nameWithType: ECDiffieHellmanCng.Key
- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: KeyDerivationFunction
  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Label
  nameWithType: ECDiffieHellmanCng.Label
- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: PublicKey
  nameWithType: ECDiffieHellmanCng.PublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretAppend
  nameWithType: ECDiffieHellmanCng.SecretAppend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: SecretPrepend
  nameWithType: ECDiffieHellmanCng.SecretPrepend
- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: Seed
  nameWithType: ECDiffieHellmanCng.Seed
- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: ToXmlString
  nameWithType: ECDiffieHellmanCng.ToXmlString
- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey*
  parent: System.Security.Cryptography.ECDiffieHellmanCng
  isExternal: false
  name: UseSecretAgreementAsHmacKey
  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey
