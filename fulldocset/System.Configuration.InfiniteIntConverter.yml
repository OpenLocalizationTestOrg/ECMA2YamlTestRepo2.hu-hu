### YamlMime:ManagedReference
items:
- uid: System.Configuration.InfiniteIntConverter
  id: InfiniteIntConverter
  children:
  - System.Configuration.InfiniteIntConverter.#ctor
  - System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: InfiniteIntConverter
  nameWithType: InfiniteIntConverter
  fullName: System.Configuration.InfiniteIntConverter
  type: Class
  summary: "Konvertálása az karakterlánc és a standard végtelen vagy egész szám."
  remarks: "Ilyen típusú, mint minden más konfigurációs konverter típus, például a konfigurációs fájlban, és a kapcsolódó szigorú típusmegadású tulajdonságok az karakterláncok alakítja át.       A InfiniteIntConverter osztály különösen karakterlánc-érték, egy konfigurációs tulajdonság, egész értékeket, és ez fordítva is igaz rendelt alakítja át. Ha a konfigurációs tulajdonság értéke karakterlánc &quot;végtelen&quot;, ezt az értéket átalakítja <xref:System.Int32>, és ez fordítva is igaz.</xref:System.Int32>       A konverter egész típusú használatos. A végtelen értéket is megőrződjenek <xref:System.Int32>.</xref:System.Int32>"
  example:
  - "The following code example shows how to use the InfiniteIntConverter when applied to a custom section property.  \n  \n [!code-cs[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/csharp/t-system.configuration.i_7_1.cs)]\n [!code-vb[System.Configuration.ConfigurationConvertersCustomSection#5](~/add/codesnippet/visualbasic/t-system.configuration.i_7_1.vb)]"
  syntax:
    content: 'public sealed class InfiniteIntConverter : System.Configuration.ConfigurationConverterBase'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.Configuration.ConfigurationConverterBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.#ctor
  id: '#ctor'
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: InfiniteIntConverter()
  nameWithType: InfiniteIntConverter.InfiniteIntConverter()
  fullName: System.Configuration.InfiniteIntConverter.InfiniteIntConverter()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Configuration.InfiniteIntConverter&quot;> </xref> osztály."
  remarks: "Általában a konverter típusát, a rendszer által biztosított használhatja. Csak kell használnia a InfiniteIntConverter konstruktort, a saját átalakítás típus létrehozásakor."
  syntax:
    content: public InfiniteIntConverter ();
    parameters: []
  overload: System.Configuration.InfiniteIntConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Egy <xref:System.String> <xref:System.Int32>.</xref:System.Int32> </xref:System.String>"
  remarks: "A rendszer az ConvertFrom metódust használja, amikor egy konfigurációs fájl olvasásakor átalakítani egy <xref:System.String>értéket a <xref:System.Int32>.</xref:System.Int32> </xref:System.String>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object data);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> típuskonverziók használt objektum."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>konvertálás során használt objektum.</xref:System.Globalization.CultureInfo>"
    - id: data
      type: System.Object
      description: "A <xref:System.String>objektummá konvertálásához.</xref:System.String>"
    return:
      type: System.Object
      description: "A <xref:System.Int32.MaxValue>, ha a <code> data </code> paraméter a <xref:System.String>&quot;végtelen&quot;; Ellenkező esetben a <xref:System.Int32>képviselő a <code> data </code> paraméternek egész érték.</xref:System.Int32> </xref:System.String> </xref:System.Int32.MaxValue>"
  overload: System.Configuration.InfiniteIntConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.InfiniteIntConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Konvertálja az <xref:System.Int32>fenti <xref:System.String>.</xref:System.String> </xref:System.Int32>"
  remarks: "A rendszer az ConvertTo metódust használja a konfigurációs fájl írása közben egy <xref:System.Int32> <xref:System.String>.</xref:System.String> </xref:System.Int32>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext ctx, System.Globalization.CultureInfo ci, object value, Type type);
    parameters:
    - id: ctx
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> típuskonverziók használt objektum."
    - id: ci
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>konvertálás során használt objektum.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "Az érték átalakítása."
    - id: type
      type: System.Type
      description: "A típus konvertálása."
    return:
      type: System.Object
      description: "A <xref:System.String>&quot;végtelen&quot; if a <code> value </code> van <xref:System.Int32.MaxValue>; ellenkező esetben a <xref:System.String>képviselő a <code> value </code> paraméter.</xref:System.String> </xref:System.Int32.MaxValue> </xref:System.String>"
  overload: System.Configuration.InfiniteIntConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationConverterBase
  isExternal: false
  name: System.Configuration.ConfigurationConverterBase
- uid: System.Configuration.InfiniteIntConverter.#ctor
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: InfiniteIntConverter()
  nameWithType: InfiniteIntConverter.InfiniteIntConverter()
  fullName: System.Configuration.InfiniteIntConverter.InfiniteIntConverter()
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Configuration.InfiniteIntConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Configuration.InfiniteIntConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.InfiniteIntConverter.#ctor*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: InfiniteIntConverter
  nameWithType: InfiniteIntConverter.InfiniteIntConverter
- uid: System.Configuration.InfiniteIntConverter.ConvertFrom*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: InfiniteIntConverter.ConvertFrom
- uid: System.Configuration.InfiniteIntConverter.ConvertTo*
  parent: System.Configuration.InfiniteIntConverter
  isExternal: false
  name: ConvertTo
  nameWithType: InfiniteIntConverter.ConvertTo
