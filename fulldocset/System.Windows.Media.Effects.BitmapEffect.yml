### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffect
  id: BitmapEffect
  children:
  - System.Windows.Media.Effects.BitmapEffect.#ctor
  - System.Windows.Media.Effects.BitmapEffect.Clone
  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
  type: Class
  summary: "**Megjegyzés: Ez az API már elavult.** A nem elavult alternatíva a következő: <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>.       Meghatározza egy bitképek hatást. Származtatott osztályok határozza meg, amelyek alkalmazhatók hatások egy <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> objektumot, például egy <xref href=&quot;System.Windows.Controls.Button&quot;> </xref> vagy egy <xref href=&quot;System.Windows.Controls.Image&quot;> </xref>."
  remarks: "> [!NOTE] >  [!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]bitkép hatás nyújtott szoftver is. Minden objektum hatása alkalmazó is szoftver jelenik meg. Bitkép hatások nem alkalmazandó nagy látványelemek vagy animációk, mert ez ronthatja a teljesítményt.      > [!CAUTION] > Bitkép hatások nem támogatják a részlegesen megbízható kapcsolat végrehajtása. Egy alkalmazás bitkép hatások teljes hozzáférés engedélyekkel kell rendelkeznie.       Skála átalakítások alkalmazása visual hatása alkalmazása előtt. A nem egységes méretezési átalakítás esetén a hatása a nagyobb skálázási értéket fogja használni.       A vizuális fában frissítéseket egy <xref:System.Windows.Media.VisualBrush>nem továbbítódik a ecset szülő lánc egy BitmapEffect esetén.</xref:System.Windows.Media.VisualBrush> Ez a korlátozás kényszerítése a leképezni kívánt jelenetben frissítése a szülőobjektumon a hatás úgy kerülheti. Hívása <xref:System.Windows.UIElement.InvalidateVisual%2A>vagy közé tartozik a leképezni kívánt jelenetben frissítés kényszerítése animáció.</xref:System.Windows.UIElement.InvalidateVisual%2A>       Egyéni hatások öröklik az osztály használatával hozzon létre egy felügyelt felületet biztosít a nem felügyelt hatást. További információkért lásd: a [nem felügyelt BitmapEffect](https://msdn.microsoft.com/library/ms735092.aspx) API."
  syntax:
    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> osztály."
  syntax:
    content: protected BitmapEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.BitmapEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ez módosítható klónja hoz <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref>, ez az objektum értékek mély másolja. Függőségi tulajdonságok másolásakor Ez a módszer másolja át az erőforrás-hivatkozások és az adatok kötések (de már nem lehet feloldani) azonban nem animációk vagy a jelenlegi értékeit."
  remarks: "Ez a módszer segítségével módosítható másolatot készít rögzített <xref:System.Windows.Freezable>objektumok (vagy bármely <xref:System.Windows.Freezable>objektum).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Kényelmi célokat szolgál ez a módszer az örökölt verzió eltakarja.       További információkért lásd a <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName> :"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Az aktuális objektum módosíthatóvá másolat. A klónozott objektum <> </> *> tulajdonság lesz <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> akkor is, ha a forrás <> </> *> tulajdonság<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Effects.BitmapEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ez módosítható klónja hoz <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;> </xref> objektum, ez az objektum aktuális értékek mély másolja. Erőforrás-hivatkozások, az adatkötéseket és animációk nem kerülnek, de az aktuális értéke."
  remarks: "Ez a módszer segítségével módosítható másolatot készít rögzített <xref:System.Windows.Freezable>objektumok (vagy bármely <xref:System.Windows.Freezable>objektum).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Kényelmi célokat szolgál ez a módszer az örökölt verzió eltakarja.       További információkért lásd a <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> :"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "Az aktuális objektum módosíthatóvá másolat. A klónozott objektum <> </> *> tulajdonság lesz <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> akkor is, ha a forrás <> </> *> tulajdonság <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  id: CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Leírót létrehoz egy [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objektum inicializálása egy egyéni hatást használt."
  remarks: "Egyéni hatások keretrendszer interakcióba segítségével kezel egy [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objektum. A külső hatás inicializálása keresztül egyéni kezdve a <xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>metódus.</xref:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect%2A>"
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the CreateBitmapEffectOuter method to retrieve a wrapper effect object.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "Leírót egy [IMILBitmapEffect](http://msdn.microsoft.com/en-us/4bd5697d-bdde-4485-a05b-b3fea1403e16) objektum."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Felülbírálja a származtatott osztály, létrehoz egy nem felügyelt hatásának klónja."
  remarks: ''
  example:
  - "The following example demonstrates an override of the CreateUnmanagedEffect method.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: "A nem felügyelt hatás klón leírót."
  overload: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Vissza a <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> , amely az a hatás alkalmazásakor eredménye a megadott <xref href=&quot;System.Windows.Media.Effects.BitmapEffectInput&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);
    parameters:
    - id: input
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "A bemeneti a hatást, hogy alkalmazza."
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: "A <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;> </xref> vonatkozik. a bemeneti kezdve."
  overload: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Inicializál egy [IMILBitmapEffect](https://msdn.microsoft.com/library/ms735317.aspx) leírót kapott <xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>rendelkező az adott [IMILBitmapEffectPrimitive](https://msdn.microsoft.com/library/ms735258.aspx).</xref:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*>"
  remarks: ''
  example:
  - "The following example shows an implementation of <xref:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect%2A> that uses the InitializeBitmapEffect method to initialize the wrapper object with the custom effect.  \n  \n [!code-cs[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/csharp/RGBFilterBitmapEffect/RGBFilterBitmapEffect.cs#createunmanagedeffect)]\n [!code-vb[RGBFilterEffectAssembly_snip#CreateUnmanagedEffect](~/add/codesnippet/visualbasic/rgbfilterbitmapeffect/rgbfilterbitmapeffect.vb#createunmanagedeffect)]"
  syntax:
    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);
    parameters:
    - id: outerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "A külső IMILBitmapEffect burkoló inicializálása."
    - id: innerObject
      type: System.Runtime.InteropServices.SafeHandle
      description: "A belső IMILBitmapEffectPrimitive."
  overload: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "A megadott értékre állítja be a megadott tulajdonságot."
  remarks: "Ez a módszer szándék szerint egy segédmetódust a <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A> Ha felülbírálása <xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>, használja a SetValue művelet nem felügyelt tulajdonság értékeinek frissítéséhez.</xref:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState%2A>"
  syntax:
    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);
    parameters:
    - id: effect
      type: System.Runtime.InteropServices.SafeHandle
      description: "A leíró arról, hogy a tulajdonság módosítása tartalmazza."
    - id: propertyName
      type: System.String
      description: "Módosíthatja a tulajdonság nevét."
    - id: value
      type: System.Object
      description: "Az érték a tulajdonság beállításához."
  overload: System.Windows.Media.Effects.BitmapEffect.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Felülbírálja a származtatott osztály, amikor frissíti a nem felügyelt tulajdonságok a hatás tulajdonság állapotát."
  remarks: "Ez a módszer felülbírálása nem felügyelt tulajdonságokat beállításakor használja <xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A>.</xref:System.Windows.Media.Effects.BitmapEffect.SetValue%2A> segédmetódus"
  syntax:
    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: "A leíró arról, hogy frissíteni tulajdonságait tartalmazza."
  overload: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect()
  nameWithType: BitmapEffect.BitmapEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.Clone
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffect.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter()
  nameWithType: BitmapEffect.CreateBitmapEffectOuter()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffect.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput(BitmapEffectInput)
  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)
  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect(SafeHandle,SafeHandle)
  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue(SafeHandle,String,Object)
  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)
  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Windows.Media.Effects.BitmapEffect.#ctor*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.Clone*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: Clone
  nameWithType: BitmapEffect.Clone
- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BitmapEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateBitmapEffectOuter
  nameWithType: BitmapEffect.CreateBitmapEffectOuter
- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: CreateUnmanagedEffect
  nameWithType: BitmapEffect.CreateUnmanagedEffect
- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: GetOutput
  nameWithType: BitmapEffect.GetOutput
- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: InitializeBitmapEffect
  nameWithType: BitmapEffect.InitializeBitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect.SetValue*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: SetValue
  nameWithType: BitmapEffect.SetValue
- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState*
  parent: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: UpdateUnmanagedPropertyState
  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState
