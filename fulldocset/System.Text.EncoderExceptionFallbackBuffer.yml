### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallbackBuffer
  id: EncoderExceptionFallbackBuffer
  children:
  - System.Text.EncoderExceptionFallbackBuffer.#ctor
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  - System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  - System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  - System.Text.EncoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer
  fullName: System.Text.EncoderExceptionFallbackBuffer
  type: Class
  summary: "Jelez <xref:System.Text.EncoderFallbackException>Amikor egy bemeneti karakter nem alakítható át egy Kódolt kimenet bájt sorozat.</xref:System.Text.EncoderFallbackException> Ez az osztály nem örökölhető."
  remarks: "A közös egy kódolási vagy -dekódolási művelet sikertelen oka, hogy ha az alapul szolgáló kódolási osztály nem tartalmaz karaktert, és egy ezzel egyenértékű bájt sorozat közötti leképezést. Ha a bemeneti karakter egy kimeneti bájt sorozat nem konvertálható, a kódolási művelet meghívja-e a <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>metódus, amely jelez <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException> </xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A>       Az <xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName>osztály, amely jelzi, hogy egy adatpuffer a kódolási művelet, akkor a EncoderExceptionFallbackBuffer osztály alaposztálya</xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName> Azonban helyett egy adatpuffer a EncoderExceptionFallbackBuffer osztály jelöli egy szabványos viselkedését, amelynek kivételt vált ki, ha egy kódolási művelet sikertelen. Nincs tényleges adatpuffer létezik, és kezelhetik az ilyen puffer tagok tegye nincs jelentős mennyiségű munkával jár."
  syntax:
    content: 'public sealed class EncoderExceptionFallbackBuffer : System.Text.EncoderFallbackBuffer'
  inheritance:
  - System.Text.EncoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> osztály."
  syntax:
    content: public EncoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  id: Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Kivételt jelez, mert a bemeneti karakter nem kódolható. A paraméterek meg értéket és az index pozíciója az a karakter, amely nem konvertálható."
  remarks: "A <xref:System.Text.Encoding.GetBytes%2A>és <xref:System.Text.Encoder.Convert%2A>módszerek tartalék hív, ha egy érvénytelen karakter szerepel a bemeneti szembesülnek.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> Válaszként tartalék mindig jelez <xref:System.Text.EncoderFallbackException>.</xref:System.Text.EncoderFallbackException>"
  syntax:
    content: public override bool Fallback (char charUnknown, int index);
    parameters:
    - id: charUnknown
      type: System.Char
      description: "A bemeneti karakter."
    - id: index
      type: System.Int32
      description: "Az index karakter pozíciója a bemeneti pufferben."
    return:
      type: System.Boolean
      description: "Nincs. Nincs értéket adja vissza, mert a tartalék metódus mindig kivételt jelez."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "<code>charUnknown</code>nem kódolható. Ez a metódus mindig kivételt, amely értékének jelent a <code>charUnknown</code> és <code>index</code> paraméterek."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  id: Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Kivételt jelez, mert a bemeneti karakter nem kódolható. Paraméterek a helyettesítő pár érték és az index helyének megadása a bemeneti adatok, és a névleges visszatérési értéke nem használatos."
  remarks: "A <xref:System.Text.Encoding.GetBytes%2A>és <xref:System.Text.Encoder.Convert%2A>módszerek tartalék hív, ha egy helyettesítő pár adataikkal szembesülnek.</xref:System.Text.Encoder.Convert%2A> </xref:System.Text.Encoding.GetBytes%2A> A válasz a tartalék mindig kivételt jelez."
  syntax:
    content: public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);
    parameters:
    - id: charUnknownHigh
      type: System.Char
      description: "A bemeneti kulcspár magas helyettesítő."
    - id: charUnknownLow
      type: System.Char
      description: "A bemeneti kulcspár alacsony helyettesítő."
    - id: index
      type: System.Int32
      description: "Az index pozíciója a helyettesítő pár a bemeneti pufferben."
    return:
      type: System.Boolean
      description: "Nincs. Nincs értéket adja vissza, mert a tartalék metódus mindig kivételt jelez."
  overload: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "A következő karaktert által képviselt <code> charUnknownHigh </code> és <code> charUnknownLow </code> nem kódolható."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Either <code>charUnknownHigh</code> or <code>charUnknownLow</code> is invalid. <code>charUnknownHigh</code>nincs a U + D800 és U + DBFF, beleértve a határértékeket, vagy <code> charUnknownLow </code> nincs közötti U + DC00 és U + DFFF, beleértve a határértékeket."
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Lekéri a következő karakter a kivétel visszaváltási pufferben."
  remarks: "Mivel <xref:System.Text.EncoderExceptionFallbackBuffer>nincs kivétel adatpuffer rendelkezik a GetNextChar metódus mindig Unicode NULL karaktert adja vissza.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "A visszatérési értéke mindig a Unicode-karakter, NULL (U +&0000;).       A visszatérési érték van definiálva, de nem változó, mert ez a módszer egy absztrakt metódus valósítja meg."
  overload: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Hatására a következő hívás a <xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>metódus kivétel adatok puffer karakter pozíciója az aktuális pozíció rendszernél korábbi elérésére.</xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar*>"
  remarks: "Mivel <xref:System.Text.EncoderExceptionFallbackBuffer>mindig adja meg a MovePrevious metódus nincs kivétel adatpuffer rendelkezik `false`.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "A visszatérési értéke mindig <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       A visszatérési érték van definiálva, de nem változó, mert ez a módszer egy absztrakt metódus valósítja meg."
  overload: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "A karakterek számát, lekérdezi az aktuális <xref href=&quot;System.Text.EncoderExceptionFallbackBuffer&quot;> </xref> objektum, amely feldolgozandó maradnak."
  remarks: "Mivel <xref:System.Text.EncoderExceptionFallbackBuffer>nincs kivétel adatpuffer rendelkezik a fennmaradó tulajdonság mindig nulla adja vissza.</xref:System.Text.EncoderExceptionFallbackBuffer>"
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "A visszatérési értéke mindig nulla.       A visszatérési érték van definiálva, de nem változó, mert ez a módszer egy absztrakt metódus valósítja meg."
  overload: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.EncoderFallbackBuffer
  isExternal: false
  name: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallbackException
  isExternal: true
  name: System.Text.EncoderFallbackException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer()
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer()
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Char,Char,Int32)
  nameWithType: EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
  fullName: System.Text.EncoderExceptionFallbackBuffer.Fallback(Char,Char,Int32)
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.EncoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.EncoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.EncoderExceptionFallbackBuffer.Remaining
- uid: System.Text.EncoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: EncoderExceptionFallbackBuffer
  nameWithType: EncoderExceptionFallbackBuffer.EncoderExceptionFallbackBuffer
- uid: System.Text.EncoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: EncoderExceptionFallbackBuffer.Fallback
- uid: System.Text.EncoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: EncoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.EncoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: EncoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.EncoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.EncoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: EncoderExceptionFallbackBuffer.Remaining
