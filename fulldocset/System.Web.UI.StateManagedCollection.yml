### YamlMime:ManagedReference
items:
- uid: System.Web.UI.StateManagedCollection
  id: StateManagedCollection
  children:
  - System.Web.UI.StateManagedCollection.#ctor
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.GetKnownTypes
  - System.Web.UI.StateManagedCollection.OnClear
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: StateManagedCollection
  nameWithType: StateManagedCollection
  fullName: System.Web.UI.StateManagedCollection
  type: Class
  summary: "Egy olyan alaposztályból biztosít által kezelt összes szigorú típusmegadású gyűjteményt <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> objektumok."
  remarks: "StateManagedCollection osztálya: tároló összes szigorú típusmegadású gyűjteményt alaposztálya <xref:System.Web.UI.IStateManager>elemek, beleértve a <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, stb.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.StyleCollection> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.DataControlFieldCollection> </xref:System.Web.UI.IStateManager> A StateManagedCollection gyűjtemény kezeli a saját állapotát, valamint az elemek állapotát. Ezért egy hívása <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>a gyűjtemény állapota és a gyűjtemény által jelenleg tárolt összes elem állapotát menti.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       Figyelembe kell venni a StateManagedCollection osztályból való származtatáskor a legfontosabb megoldások a következők <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, és <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> </xref:System.Web.UI.StateManagedCollection.SetDirty%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A> </xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> A <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>és <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>nézetben állapot egy tartalmazott elem típusú index tárolására szolgáló módszerek.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> Egy teljesen minősített típusnév helyett index tárolása javítja a teljesítményt. A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus lehívásra kerül, ha a gyűjtemény elemeinek történik művelet, és az üzleti szabályok szerint elemek érvényesíti.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> Végrehajtása jelenleg a <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus nem engedélyezi az `null` gyűjtemény; tárolt objektumok azonban ezt a metódust a saját ellenőrzési viselkedése ad meg származtatott típus lehet felülbírálni.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> A <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>metódus kényszeríti a teljes gyűjteményt szerializálandó állapot megtekintése, ahelyett, hogy csak az állapot utolsó óta végrehajtott módosítások szerializálása betöltődött.</xref:System.Web.UI.StateManagedCollection.SetDirty%2A> A <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>módja a kívánt viselkedést eredményező beállítást az elem szintű végrehajtásához valósíthat meg egy absztrakt metódus.</xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>      > [!IMPORTANT] > StateManagedCollection nézetben állapot gyűjtemény elemeinek típus minősítve a szerelvény nevét tárolja. A látogató nem sikerült dekódolni a nézetállapotot, és a nevének beolvasása. Ebben a forgatókönyvben a webhely hoz létre kapcsolatos egyik biztonsági szempont, ha a nézetállapot helyezés előtt manuálisan titkosíthatja a típusnév."
  example:
  - "The following code example demonstrates how to derive a strongly typed collection class from StateManagedCollection to contain <xref:System.Web.UI.IStateManager> objects. In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects. The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#1](~/add/codesnippet/csharp/t-system.web.ui.stateman_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.stateman_1.vb)]"
  syntax:
    content: 'public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> osztály."
  remarks: "Származtatott osztályok lehet felülbírálni a testreszabott implementálásához konstruktor."
  syntax:
    content: protected StateManagedCollection ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Clear
  id: Clear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az összes elem eltávolítása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnClear%2A>metódus lehívásra kerül, mielőtt a Clear metódus neve, és a <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>módszer neve után törölje az elemek eltávolítása a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Másolja át a elemei a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> tömb, egy adott tömb indextől kezdődő gyűjteményt."
  remarks: "A megadott tömb egy kompatibilis típusúnak kell lennie.       Az elemek kerülnek a <xref:System.Array>ugyanabban a sorrendben, amelyben a számbavevő telepítéseket a <xref:System.Web.UI.StateManagedCollection>gyűjtemény.</xref:System.Web.UI.StateManagedCollection> </xref:System.Array>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Az egydimenziós <xref:System.Array>átmásolva elem, amely a cél a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Array> A <xref:System.Array>kell rendelkeznie a nulla alapú indexelést.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét `array` mely másolása megkezdődik."
  overload: System.Web.UI.StateManagedCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>kisebb, mint nulla."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code> is multidimensional.  \n  \n \\- or -  \n  \n <code>index</code> is greater than or equal to the length of <code>array</code>.  \n  \n \\- or -  \n  \n The number of elements in the source <xref href=\"System.Web.UI.StateManagedCollection\"></xref> is greater than the available space from the <code>index</code> to the end of the destination <code>array</code>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.Count
  id: Count
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a levő elemek száma a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Levő elemek száma a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Felülbírálja a származtatott osztály, létrehoz egy osztály, amely egy példánya <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>. A megadott tag a gyűjtemény által visszaadott alapján létrehozott objektumnak a <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>metódus.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
  remarks: "A CreateKnownType metódus lehívásra kerül által belsőleg a <xref:System.Web.UI.StateManagedCollection>megvalósítását gyűjtemény a <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=fullName> </xref:System.Web.UI.StateManagedCollection> Származtatott gyűjtemények írja felül az CreateKnownType metódust vissza az alapértelmezett példányt a <xref:System.Web.UI.IStateManager>azonosíthatók a megadott típus `index`, mely által visszaadott típusok egyike leképezve a <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>metódus.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> </xref:System.Web.UI.IStateManager>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the CreateKnownType method. The `CycleCollection` implementation of CreateKnownType returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_1_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_1_1.vb)]"
  syntax:
    content: protected virtual object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Az index által visszaadott típus rendezett listája <xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>, milyen típusú <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> létrehozásához.</xref:System.Web.UI.StateManagedCollection.GetKnownTypes*>"
    return:
      type: System.Object
      description: "A származtatott osztály egy példányát <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref>, függően, hogy a <code> index </code> megadott."
  overload: System.Web.UI.StateManagedCollection.CreateKnownType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Minden olyan esetben, ha nincsenek felülbírálva egy származtatott osztályban."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az iterátor, amely telepítéseket adja vissza a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével iterációt az <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Felülbírálja a származtatott osztály, amikor lekérdezi az tömbjét <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> típusokat, a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény tartalmazhat."
  remarks: "A GetKnownTypes metódus lehívásra kerül által belsőleg a <xref:System.Web.UI.StateManagedCollection>megvalósítását gyűjtemény a <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> Származtatott gyűjtemények írja felül az GetKnownTypes metódust egy tömbjét adja vissza <xref:System.Type>objektumok, amelyek megfelelnek a típusokat a gyűjtemény tartalmazhat.</xref:System.Type>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the GetKnownTypes method. The `CycleCollection` implementation of GetKnownTypes returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_0_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_0_1.vb)]"
  syntax:
    content: protected virtual Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Rendezett tömbje <xref:System.Type>, amelyek azonosítják a következő típusú objektumok <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> objektumokat, a gyűjtemény tartalmazhat.</xref:System.Type> Az alapértelmezett implementációja adja vissza <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClear
  id: OnClear
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi előtt a <xref:System.Web.UI.StateManagedCollection.Clear*>metódus eltávolítja az összes elemet a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a OnClear metódus bármit tennie kellene végrehajtani előtt minden elemek el lesznek távolítva a gyűjtemény használja a <xref:System.Web.UI.StateManagedCollection.Clear%2A>metódus.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  id: OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi után a <xref:System.Web.UI.StateManagedCollection.Clear*>metódus befejezése minden elem eltávolítása a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.Clear*>"
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a OnClearComplete metódus bármit tennie kellene végrehajtani minden elemek el lesznek távolítva a gyűjtemény használata után a <xref:System.Web.UI.StateManagedCollection.Clear%2A>metódus.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  id: OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi előtt a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; vagy &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; metódus egy elem hozzáadása a gyűjteményhez."
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a beszúrásra metódus bármit tennie kellene végrehajtani, mielőtt egy elem hozzá lett adva a gyűjteményhez a <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>vagy <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` kell szúrhat be a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; metódust."
    - id: value
      type: System.Object
      description: "Az objektum beszúrása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi után a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; vagy &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A&gt; metódus egy elem hozzáadása a gyűjteményhez."
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a OnInsertComplete metódus bármit tennie kellene végrehajtani egy elemet a gyűjtemény történő hozzáadása után a <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>vagy <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` szúrja be a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A&gt; metódust."
    - id: value
      type: System.Object
      description: "Az objektum beszúrt a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  id: OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi előtt a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; vagy &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; metódus eltávolítja a megadott elemet a gyűjteményből."
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a OnRemove metódus bármit tennie kellene elem eltávolítása a gyűjtemény a végrehajtásához a <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>vagy <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemove (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem, amely nulla alapú indexét használni &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; nevezik."
    - id: value
      type: System.Object
      description: "Az objektum eltávolítása az <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>, mely amikor használt &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; nevezik."
  overload: System.Web.UI.StateManagedCollection.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, végzi el a további munkahelyi után a &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; vagy &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; metódus eltávolítja a megadott elemet a gyűjteményből."
  remarks: "Gyűjtemények származó <xref:System.Web.UI.StateManagedCollection>lehet felülbírálni a OnRemoveComplete metódus bármit tennie kellene végrehajtani egy elemet a gyűjtemény a eltávolítása után a <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A>vagy <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> </xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem, amely nulla alapú indexét használni &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A&gt; nevezik."
    - id: value
      type: System.Object
      description: "Az objektum eltávolítva a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>, mely amikor használt &lt;xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A&gt; nevezik."
  overload: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ha felül van bírálva a származtatott osztály, ellenőrzi a eleme a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A OnValidate módszer neve az objektum-n keresztül érvényesítéséhez a <xref:System.Web.UI.StateManagedCollection>megvalósítása a <xref:System.Collections.IList>módszerek csatoló.</xref:System.Collections.IList> </xref:System.Web.UI.StateManagedCollection> Az alapértelmezett implementációja annak ellenőrzéséhez, hogy az objektum kezelhetők a gyűjtemény nem `null`, azonban származtatott gyűjtemények <xref:System.Web.UI.StateManagedCollection>írja felül az OnValidate metódust a további ellenőrzést, például a típus-ellenőrzés végrehajtásához.</xref:System.Web.UI.StateManagedCollection>"
  syntax:
    content: protected virtual void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> érvényesítéséhez."
  overload: System.Web.UI.StateManagedCollection.OnValidate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirty
  id: SetDirty
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Arra kényszeríti a teljes <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> lehet szerializálni a nézetállapot-gyűjteményben."
  remarks: "A SetDirty metódus kényszeríti a <xref:System.Web.UI.StateManagedCollection>teljesen szerializálandó gyűjtemény (mivel a <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>metódus csak az adatok mentése).</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> </xref:System.Web.UI.StateManagedCollection> Ez akkor hasznos, ha a gyűjtemény módosult jelentős mértékben és adatai nem elegendő, újra létre kell hozni az objektumot állapotának megtekintése a memória."
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Felülbírálja a származtatott osztály, amikor arra utasítja az <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> szerepel a gyűjteményt, amelyben jegyezze fel a teljes állapotában állapot megtekintése, ahelyett, hogy csak rögzítése adatainak módosítása."
  remarks: "A SetDirtyObject metódus lehívásra kerül által belsőleg a <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, és <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A>módszerek.</xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> </xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> </xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>"
  example:
  - "The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract SetDirtyObject method. The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object. This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.  \n  \n [!code-cs[Samples.AspNet.CycleCollection#2](~/add/codesnippet/csharp/m-system.web.ui.stateman_2_1.cs)]\n [!code-vb[Samples.AspNet.CycleCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.stateman_2_1.vb)]"
  syntax:
    content: protected abstract void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> , amely kell magát szerializálni teljesen."
  overload: System.Web.UI.StateManagedCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a levő elemek száma a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "Az elemek száma a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény szinkronizálása (többszálú futtatásra). Ez a metódus visszaadja <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> minden esetben."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Olyan objektum, amely segítségével való hozzáférés szinkronizálása lekérdezi a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény. Ez a metódus visszaadja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> minden esetben."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az iterátor, amely telepítéseket adja vissza a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Egy <xref:System.Collections.IEnumerator>, amelyek segítségével iterációt az <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Elem hozzáadása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>és <xref:System.Web.UI.StateManagedCollection.OnInsert%2A>módszerek nevezzük, az elem hozzáadása a gyűjteményhez, előtt és a <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A>metódus lehívásra kerül, az elem hozzáadása után.</xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnInsert%2A> </xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The<xref uid=&quot;langword_csharp_ object &quot; name=&quot; object &quot; href=&quot;&quot;></xref>to add to the <xref href=&quot;System.Web.UI.StateManagedCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "A pozíció, ahol az új elem lett beszúrva."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az összes elem eltávolítása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnClear%2A>módszer neve előtt a <xref:System.Web.UI.StateManagedCollection.Clear%2A>metódus lehívásra kerül, és a <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A>módszer neve után <xref:System.Web.UI.StateManagedCollection.Clear%2A>befejezte az elemek eltávolítása a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> </xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.StateManagedCollection.OnClear%2A>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Meghatározza, hogy a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény egy adott értéket tartalmaz."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus lehívásra kerül érvényesítéséhez `value` előtt a gyűjtemény be van jelölve.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> keresik a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha az objektum található a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Ha <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> érték paraméter átadása <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> adja vissza."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Meghatározza, hogy a megadott elem indexe a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus lehívásra kerül érvényesítéséhez `value` előtt indexét adja vissza.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Az objektum kereséséhez a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "Az index <code> value </code>, ha a listában található, ha sikertelen, -1."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Az elem beszúrása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény a megadott indexnél."
  remarks: "Ha `index` -1, `value` elején a rendszer hozzáfűzi a <xref:System.Web.UI.StateManagedCollection>gyűjtemény.</xref:System.Web.UI.StateManagedCollection> Ha `index` a gyűjtemény elemeinek száma egyenlő `value` fűz hozzá a gyűjtemény végéig."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A nulla alapú indexét, amellyel `value` kell beilleszteni."
    - id: value
      type: System.Object
      description: "Az objektum beszúrása a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott <code> index </code> a gyűjtemény tartományán kívül esik."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> csak olvasható."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény rögzített méretű rendelkezik. Ez a metódus visszaadja <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> minden esetben."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>minden esetben."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény csak olvasható."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> csak olvasható; egyéb, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi a <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> elem a megadott indexnél."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Az első elem nulla alapú indexét."
    return:
      type: System.Object
      description: "Az elem a megadott indexnél."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott <code> index </code> a gyűjtemény tartományán kívül esik."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Eltávolítja a megadott objektum első előfordulásának a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus lehívásra kerül érvényesítéséhez `value` előtt a rendszer eltávolítja az értéket a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> A <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>módszer neve az objektum eltávolítása, és a <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>módszer neve az objektum eltávolítása után.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Az objektum eltávolítása az <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> csak olvasható."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Eltávolítja a <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> elem a megadott indexnél."
  remarks: "A <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>metódus lehívásra kerül érvényesítéséhez `value` előtt a rendszer eltávolítja az értéket a gyűjteményből.</xref:System.Web.UI.StateManagedCollection.OnValidate%2A> A <xref:System.Web.UI.StateManagedCollection.OnRemove%2A>módszer neve az objektum eltávolítása, és a <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A>módszer neve az objektum eltávolítása után.</xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> </xref:System.Web.UI.StateManagedCollection.OnRemove%2A>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Az eltávolítandó elem nulla alapú indexét."
  overload: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> csak olvasható."
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Lekérdezi, hogy egy érték, amely jelzi, hogy a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény van módosításainak mentése folyamatban van a nézetállapotát."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a gyűjtemény van megjelölve, a saját és a levő összes menteni a <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> elemeket tartalmaz; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Visszaállítja a korábban mentett állapotának megtekintése a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény és a <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> elemeket tartalmaz."
  remarks: "Ez a metódus által mentett-állapot adatai visszaállítja a <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>metódus.</xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>       A rendszer a kiszolgálói vezérlőnek tulajdonságok értékei felhalmozódásához. A kiszolgálói vezérlőnek <xref:System.Web.UI.Control.ViewState%2A>tulajdonság, ez az <xref:System.Web.UI.StateBag>osztály</xref:System.Web.UI.StateBag> egy példányát</xref:System.Web.UI.Control.ViewState%2A> automatikusan kerülnek ezeket az értékeket Ez a tulajdonság értékének majd tárolva legyen az karakterlánc-objektum mentése a kiszolgáló vezérlő életciklusának szakasza állapot után. További információkért lásd: [NIB: ASP.NET webkiszolgáló-vezérlőket](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       Ez a módszer elsősorban vezérlő fejlesztők használják. Ha szeretné felülbírálni az ezt a metódust adja meg, hogyan egy egyéni vezérlőjét visszaállítja-e a nézetállapotát. További információkért lásd: [ASP.NET állapot Management áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "A gyűjtemény és a gyűjtemény elemeinek állapotának visszaállítására képviselő objektum."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "A módosítások mentése a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény és az egyes <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> objektum tartalmazza a óta a lapon megtalálható a kiszolgálón."
  remarks: "Ez a módszer elsősorban vezérlő fejlesztők használják.       A rendszer a kiszolgálói vezérlőnek tulajdonságok értékei felhalmozódásához. A kiszolgálói vezérlőnek <xref:System.Web.UI.Control.ViewState%2A>tulajdonság, ez az <xref:System.Web.UI.StateBag>osztály</xref:System.Web.UI.StateBag> egy példányát</xref:System.Web.UI.Control.ViewState%2A> automatikusan kerülnek ezeket az értékeket Ez a tulajdonság értékének majd tárolva legyen az karakterlánc-objektum mentése a kiszolgáló vezérlő életciklusának szakasza állapot után. További információkért lásd: [NIB: ASP.NET webkiszolgáló-vezérlőket](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       Nézetállapot mentésekor a rendszer a karakterlánc-objektum küld vissza az ügyfél az HTML rejtett elemben tárolt változóként (`<input type=&quot;hidden&quot;>`). Amikor szerzőként egyéni vezérlőket, javíthatja a hatékonyság felülbírálja ezt a módszert, és a kiszolgálói vezérlőnek módosítása <xref:System.Web.UI.Control.ViewState%2A>tulajdonság.</xref:System.Web.UI.Control.ViewState%2A> További információkért lásd: [NIB: ASP.NET webkiszolgáló-vezérlőket](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) és[ASP.NET állapot Management áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Az objektum, amely tartalmazza a változások állapotának megtekintése a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> és a benne található elemeket. Ha nem a rendszer a gyűjteményt, és az elemei társítva, ez a metódus visszaadja <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.StateManagedCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Hatására a <xref href=&quot;System.Web.UI.StateManagedCollection&quot;> </xref> gyűjtemény és az egyes a <xref href=&quot;System.Web.UI.IStateManager&quot;> </xref> objektumokat érintő módosítások követésére a nézetállapotot, így azok az ugyanazon az oldalon kérések között lehet megőrzött tartalmaz."
  remarks: 'View state is the accumulation of the values of a server control''s properties. These values are automatically placed in the server control''s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property''s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).'
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.StateManagedCollection.#ctor
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection()
  nameWithType: StateManagedCollection.StateManagedCollection()
  fullName: System.Web.UI.StateManagedCollection.StateManagedCollection()
- uid: System.Web.UI.StateManagedCollection.Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear()
  nameWithType: StateManagedCollection.Clear()
  fullName: System.Web.UI.StateManagedCollection.Clear()
- uid: System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StateManagedCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateManagedCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.StateManagedCollection.Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
  fullName: System.Web.UI.StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: StateManagedCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.StateManagedCollection.CreateKnownType(Int32)
- uid: System.Web.UI.StateManagedCollection.GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StateManagedCollection.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: StateManagedCollection.GetKnownTypes()
  fullName: System.Web.UI.StateManagedCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.StateManagedCollection.OnClear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear()
  nameWithType: StateManagedCollection.OnClear()
  fullName: System.Web.UI.StateManagedCollection.OnClear()
- uid: System.Web.UI.StateManagedCollection.OnClearComplete
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: StateManagedCollection.OnClearComplete()
  fullName: System.Web.UI.StateManagedCollection.OnClearComplete()
- uid: System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert(Int32,Object)
  nameWithType: StateManagedCollection.OnInsert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnInsertComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnInsertComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove(Int32,Object)
  nameWithType: StateManagedCollection.OnRemove(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemove(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: StateManagedCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.OnValidate(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: StateManagedCollection.OnValidate(Object)
  fullName: System.Web.UI.StateManagedCollection.OnValidate(Object)
- uid: System.Web.UI.StateManagedCollection.SetDirty
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty()
  nameWithType: StateManagedCollection.SetDirty()
  fullName: System.Web.UI.StateManagedCollection.SetDirty()
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: StateManagedCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.StateManagedCollection.SetDirtyObject(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: StateManagedCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StateManagedCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.StateManagedCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateManagedCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.StateManagedCollection.#ctor*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: StateManagedCollection
  nameWithType: StateManagedCollection.StateManagedCollection
- uid: System.Web.UI.StateManagedCollection.Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Clear
  nameWithType: StateManagedCollection.Clear
- uid: System.Web.UI.StateManagedCollection.CopyTo*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CopyTo
  nameWithType: StateManagedCollection.CopyTo
- uid: System.Web.UI.StateManagedCollection.Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: Count
  nameWithType: StateManagedCollection.Count
- uid: System.Web.UI.StateManagedCollection.CreateKnownType*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: StateManagedCollection.CreateKnownType
- uid: System.Web.UI.StateManagedCollection.GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StateManagedCollection.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.GetKnownTypes*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: StateManagedCollection.GetKnownTypes
- uid: System.Web.UI.StateManagedCollection.OnClear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClear
  nameWithType: StateManagedCollection.OnClear
- uid: System.Web.UI.StateManagedCollection.OnClearComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: StateManagedCollection.OnClearComplete
- uid: System.Web.UI.StateManagedCollection.OnInsert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsert
  nameWithType: StateManagedCollection.OnInsert
- uid: System.Web.UI.StateManagedCollection.OnInsertComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: StateManagedCollection.OnInsertComplete
- uid: System.Web.UI.StateManagedCollection.OnRemove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemove
  nameWithType: StateManagedCollection.OnRemove
- uid: System.Web.UI.StateManagedCollection.OnRemoveComplete*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: StateManagedCollection.OnRemoveComplete
- uid: System.Web.UI.StateManagedCollection.OnValidate*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: OnValidate
  nameWithType: StateManagedCollection.OnValidate
- uid: System.Web.UI.StateManagedCollection.SetDirty*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirty
  nameWithType: StateManagedCollection.SetDirty
- uid: System.Web.UI.StateManagedCollection.SetDirtyObject*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: StateManagedCollection.SetDirtyObject
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: StateManagedCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateManagedCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateManagedCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StateManagedCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Add*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StateManagedCollection.System.Collections.IList.Add
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: StateManagedCollection.System.Collections.IList.Clear
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StateManagedCollection.System.Collections.IList.Contains
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StateManagedCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StateManagedCollection.System.Collections.IList.Insert
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StateManagedCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StateManagedCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Item*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StateManagedCollection.System.Collections.IList.Item
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StateManagedCollection.System.Collections.IList.Remove
- uid: System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: StateManagedCollection.System.Collections.IList.RemoveAt
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: StateManagedCollection.System.Web.UI.IStateManager.TrackViewState
