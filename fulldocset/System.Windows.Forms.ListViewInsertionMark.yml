### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ListViewInsertionMark
  id: ListViewInsertionMark
  children:
  - System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  - System.Windows.Forms.ListViewInsertionMark.Bounds
  - System.Windows.Forms.ListViewInsertionMark.Color
  - System.Windows.Forms.ListViewInsertionMark.Index
  - System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  langs:
  - csharp
  name: ListViewInsertionMark
  nameWithType: ListViewInsertionMark
  fullName: System.Windows.Forms.ListViewInsertionMark
  type: Class
  summary: "Azt jelzi a várt eldobott üzenetek helye, amikor egy elem egy új helyre van húzta a <xref href=&quot;System.Windows.Forms.ListView&quot;> </xref> vezérlő. Ez a funkció csak a Windows XP és újabb verziói."
  remarks: "Egy ListViewInsertionMark a kérheti le a <xref:System.Windows.Forms.ListView.InsertionMark%2A>tulajdonsága egy <xref:System.Windows.Forms.ListView>vezérlik, és segítségével vizuálisan jelzik a fogd és vidd művelet várható eldobási helyét, amikor egy elemet egy új helyre van húzta.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.InsertionMark%2A>       Ez a szolgáltatás csak akkor, ha működik a <xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=fullName>tulajdonsága `true` és amikor a <xref:System.Windows.Forms.ListView>vezérlő nem az elemek rendezése automatikusan.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.AutoArrange%2A?displayProperty=fullName> Az automatikus rendezés megelőzése érdekében a <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName>tulajdonság értékre kell állítani <xref:System.Windows.Forms.SortOrder?displayProperty=fullName>és a <xref:System.Windows.Forms.ListView.View%2A?displayProperty=fullName>tulajdonság értékre kell állítani <xref:System.Windows.Forms.View?displayProperty=fullName>, <xref:System.Windows.Forms.View?displayProperty=fullName>, vagy <xref:System.Windows.Forms.View?displayProperty=fullName>.</xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.View?displayProperty=fullName> </xref:System.Windows.Forms.ListView.View%2A?displayProperty=fullName> </xref:System.Windows.Forms.SortOrder?displayProperty=fullName> </xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName> Emellett a beszúrási jel funkció nem használható a <xref:System.Windows.Forms.ListView>szolgáltatás csoportosítás, mert a csoportosítási szolgáltatással rendelések csoport tagsága elemek.</xref:System.Windows.Forms.ListView>       A ListViewInsertionMark osztály használható, egy hibakezelőt a <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>vagy <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>esemény a beszúrási jel helyét frissíti, az elem húzza.</xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> Is használatban van egy hibakezelőt a <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>vagy <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName>esemény megfelelő helyére a húzott elem beszúrására.</xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>       A pozíció a beszúrási jel frissítéséhez kövesse az alábbi lépéseket: 1.  A kezelő-a <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>vagy <xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName>esemény, használja a <xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=fullName>tulajdonság társított ListViewInsertionMark hozzáférni a <xref:System.Windows.Forms.ListView>vezérlő.</xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.ListView.InsertionMark%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName>      2.  Használja a <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>metódusának segítéségével lekérheti az egérmutató legközelebbi elem indexe.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>      3.  Az index értéket átadni a <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>metódusának segítéségével lekérheti a cikk a határoló téglalapon.</xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>      4.  Ha az egérmutató a határoló téglalapon középpontját balra helyezkedik el, állítsa be a <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>tulajdonságot `false`; ellenkező esetben állítsa `true`.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>      5.  Állítsa be a <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>lekért indexértéket tulajdonságot a <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>metódus.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A> </xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> A beszúrási jel jelenik meg a következő elemet a megadott index, vagy balra vagy jobbra, attól függően, hogy a <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>tulajdonság értéke.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> Egy elem önmagára húzza, ha az index kívül esik a -1, és a beszúrási jel van-e rejtve.       A húzott elem beszúrása a megfelelő helyen, tegye a következőket: 1.  A kezelő-a <xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName>vagy <xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName>esemény, használja a <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>tulajdonság a beszúrási jel aktuális helyének meghatározásához.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> </xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName> </xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName> Ezt az értéket a beszúrási index később használható tárolja.      2.  Ha a <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>tulajdonsága `true`, tárolt beszúrási index értékét.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>      3.  Használja a <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=fullName>metódus másolat a húzott elem beszúrása a <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>a tárolt beszúrási index gyűjteményéhez.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> </xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A?displayProperty=fullName>      4.  Használja a <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=fullName>metódus az eredeti példány húzott elem eltávolítása.</xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A?displayProperty=fullName>       Szúrjon be a klón a húzott elem értékei az indexet, az eredeti példány eltávolítása előtt a <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>gyűjtemény nem változnak a beszúrási előtt.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>       Győződjön meg arról, hogy az elemek jelennek meg ugyanabban a sorrendben, mint az index értékekre, be kell állítani a <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=fullName>megvalósítása tulajdonságot a <xref:System.Collections.IComparer>felület, amely elemek rendezése indexértéket.</xref:System.Collections.IComparer> </xref:System.Windows.Forms.ListView.ListViewItemSorter%2A?displayProperty=fullName> További információ a példa című rész.       A szín a beszúrási jel használatával módosíthatja a <xref:System.Windows.Forms.ListViewInsertionMark.Color%2A>tulajdonság.</xref:System.Windows.Forms.ListViewInsertionMark.Color%2A> Ha módosítania kell a méretét vagy a beszúrási jel, a határoló téglalapon kaphat a <xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A>tulajdonság.</xref:System.Windows.Forms.ListViewInsertionMark.Bounds%2A>      > [!NOTE] > A beszúrási be van jelölve szolgáltatás esetén csak a Windows XP és a Windows Server 2003 érhető el, ha egy alkalmazás meghívja a <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName>metódus.</xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName> A korábbi operációs rendszerek esetében a beszúrási jel vonatkozó kódok figyelmen kívül hagyja, és a beszúrási jel nem jelenik meg. Ennek eredményeképpen a beszúrási jel szolgáltatás függ összes kódot nem működnek megfelelően. Ön egy tesztet, amely meghatározza, hogy rendelkezésre áll-e a beszúrási jel szolgáltatást szeretne, és másik ellátni, amikor nem érhető el. Például előfordulhat, hogy szeretné kerülni a fogd és vidd elem áthelyezése az operációs rendszer nem támogatja a beszúrási jelek futtatásakor magában foglaló összes kódot.   >> A beszúrási jel szolgáltatás ugyanazt a szalagtárat, amely az operációs rendszer Témák szolgáltatás biztosítja. Ellenőrizze az ebben a könyvtárban rendelkezésre állását, hívja meg a <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName>metódus túlterhelési, és adjon át a <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName>érték.</xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName> </xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/csharp/t-system.windows.forms.l_14_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/visualbasic/t-system.windows.forms.l_14_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/add/codesnippet/cpp/t-system.windows.forms.l_14_1.cpp)]"
  syntax:
    content: public sealed class ListViewInsertionMark
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  id: AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi, hogy a beszúrási jel jobb jelenik meg az elem által megadott index az a <xref:System.Windows.Forms.ListViewInsertionMark.Index*>tulajdonság.</xref:System.Windows.Forms.ListViewInsertionMark.Index*>"
  remarks: "A <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>módszer lehetővé teszi az egérmutató legközelebbi keresse meg az elemet, de annak meghatározásához, hogy a beszúrási jel előtt vagy után ez az elem megjelenjen-e a saját számítások kell tennie.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>       A AppearsAfterItem tulajdonság szükséges értékét számítja ki, tegye a következőket: 1.  Használja a <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>metódusának segítéségével lekérheti az egérmutató legközelebbi elem indexe.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>      2.  Az index értéket átadni a <xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>metódusának segítéségével lekérheti a cikk a határoló téglalapon.</xref:System.Windows.Forms.ListView.GetItemRect%2A?displayProperty=fullName>      3.  Ha az egérmutató a határoló téglalapon középpontját balra található, a tulajdonsága AppearsAfterItem `false`; egyéb esetben állítsa `true`.       További információkért lásd: a <xref:System.Windows.Forms.ListViewInsertionMark>referencia-témakör áttekintése.</xref:System.Windows.Forms.ListViewInsertionMark>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/p-system.windows.forms.l_57_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/p-system.windows.forms.l_57_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/p-system.windows.forms.l_57_1.cpp)]"
  syntax:
    content: public bool AppearsAfterItem { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a beszúrási jel megjelenik a cikk jobb által megadott index a <xref:System.Windows.Forms.ListViewInsertionMark.Index*>tulajdonság; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.ListViewInsertionMark.Index*> Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  id: Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: System.Windows.Forms.ListViewInsertionMark.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a beszúrási jel a határoló téglalapon."
  remarks: "A koordináták a beszúrási jel határoló négyszög a bal felső sarka vannak a <xref:System.Windows.Forms.ListView>vezérlő.</xref:System.Windows.Forms.ListView>"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> , hogy a pozíció- és méretbeállítások a beszúrási jel jelöli."
  overload: System.Windows.Forms.ListViewInsertionMark.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  id: Color
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: System.Windows.Forms.ListViewInsertionMark.Color
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja a beszúrási jel színét."
  remarks: "Ez a tulajdonság segítségével állítsa be a beszúrási jel szín értéktől eltérőre előtérszíne a <xref:System.Windows.Forms.ListView>vezérlő.</xref:System.Windows.Forms.ListView>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/csharp/p-system.windows.forms.l_71_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/visualbasic/p-system.windows.forms.l_71_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#2](~/add/codesnippet/cpp/p-system.windows.forms.l_71_1.cpp)]"
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> érték, amely a beszúrási jel színt jelöli. Az alapértelmezett érték: értékének a &lt;xref:System.Windows.Forms.ListView.ForeColor%2A?displayProperty=fullName&gt; tulajdonság."
  overload: System.Windows.Forms.ListViewInsertionMark.Color*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  id: Index
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: System.Windows.Forms.ListViewInsertionMark.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi vagy beállítja az elem, amelyek mellett a beszúrási jel jelenik meg."
  remarks: "A beszúrási jel bal oldalán az adott indexű elem jelenik meg, ha a <xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A>tulajdonsága `false`; ellenkező esetben úgy tűnik, hogy az elem jobb.</xref:System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem%2A> A beszúrási jel automatikusan eltűnik a húzott elem számítógépbe történő behelyezésekor a <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName>gyűjtemény.</xref:System.Windows.Forms.ListView.Items%2A?displayProperty=fullName> Manuálisan távolítsa el a beszúrási jel, például amikor egy cikk önmagára húzta vagy kívülre húzta, adja meg az Index értéket -1.       Használja a <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>metódusának segítéségével lekérheti a megadott helyre, például az egérmutató egy elem egérrel húzási és elengedési művelet pozicionálás helyét legközelebbi elem indexe.</xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/p-system.windows.forms.l_67_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/p-system.windows.forms.l_67_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/p-system.windows.forms.l_67_1.cpp)]"
  syntax:
    content: public int Index { get; set; }
    return:
      type: System.Int32
      description: "Az elem melletti indexe a beszúrási jel megjelenő vagy -1, ha a beszúrási jel van-e rejtve."
  overload: System.Windows.Forms.ListViewInsertionMark.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  id: NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  langs:
  - csharp
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: System.Windows.Forms.ListViewInsertionMark.NearestIndex(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Lekérdezi a megadott pont legközelebbi elem indexe."
  remarks: "Ez a módszer lehetővé teszi a fogd és vidd művelet során, keresse meg az egérmutató legközelebbi elem. Állítsa vissza az értéket használja a <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>tulajdonság.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A> Amikor az egérmutató legközelebbi elemet húzott elem, ez a metódus visszatérési értéke értéke -1. Ebben az esetben beállítása a <xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>ezt az értéket a tulajdonság elrejti a beszúrási jel.</xref:System.Windows.Forms.ListViewInsertionMark.Index%2A>       Ez a módszer megkeresi a legközelebbi elem, függetlenül attól, amikor az egérmutató található, miközben a <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName>metódus csak a megadott helyen elemét adja vissza vagy `null` Ha nincs elem az adott helyhez.</xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> A <xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName>metódus beolvasása `null`, például amikor az egérmutató két elem között található.</xref:System.Windows.Forms.ListView.GetItemAt%2A?displayProperty=fullName> Emiatt mindig használjon a NearestIndex metódus elemek helyezze a fogd és vidd művelet használatakor."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.ListView> insertion mark feature and implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  \n  \n For the complete example, see the <xref:System.Windows.Forms.ListViewInsertionMark> overview reference topic.  \n  \n [!code-cs[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/csharp/m-system.windows.forms.l_23_1.cs)]\n [!code-vb[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/visualbasic/m-system.windows.forms.l_23_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView.InsertionMark#3](~/add/codesnippet/cpp/m-system.windows.forms.l_23_1.cpp)]"
  syntax:
    content: public int NearestIndex (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref> , amelyből a legközelebbi elem található a helyet jelölő."
    return:
      type: System.Int32
      description: "A megadott pontot vagy a -1, ha a legközelebbi elem jelenleg húzta a cikk legközelebbi elem indexe."
  overload: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
  fullName: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
  fullName: System.Windows.Forms.ListViewInsertionMark.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.ListViewInsertionMark.Color
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
  fullName: System.Windows.Forms.ListViewInsertionMark.Color
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.ListViewInsertionMark.Index
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
  fullName: System.Windows.Forms.ListViewInsertionMark.Index
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex(System.Drawing.Point)
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex(Point)
  nameWithType: ListViewInsertionMark.NearestIndex(Point)
  fullName: System.Windows.Forms.ListViewInsertionMark.NearestIndex(Point)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.ListViewInsertionMark.AppearsAfterItem*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: AppearsAfterItem
  nameWithType: ListViewInsertionMark.AppearsAfterItem
- uid: System.Windows.Forms.ListViewInsertionMark.Bounds*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Bounds
  nameWithType: ListViewInsertionMark.Bounds
- uid: System.Windows.Forms.ListViewInsertionMark.Color*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Color
  nameWithType: ListViewInsertionMark.Color
- uid: System.Windows.Forms.ListViewInsertionMark.Index*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: Index
  nameWithType: ListViewInsertionMark.Index
- uid: System.Windows.Forms.ListViewInsertionMark.NearestIndex*
  parent: System.Windows.Forms.ListViewInsertionMark
  isExternal: false
  name: NearestIndex
  nameWithType: ListViewInsertionMark.NearestIndex
