### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.Binding
  id: Binding
  children:
  - System.Windows.Data.Binding.#ctor
  - System.Windows.Data.Binding.#ctor(System.String)
  - System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.AsyncState
  - System.Windows.Data.Binding.BindsDirectlyToSource
  - System.Windows.Data.Binding.Converter
  - System.Windows.Data.Binding.ConverterCulture
  - System.Windows.Data.Binding.ConverterParameter
  - System.Windows.Data.Binding.DoNothing
  - System.Windows.Data.Binding.ElementName
  - System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  - System.Windows.Data.Binding.IndexerName
  - System.Windows.Data.Binding.IsAsync
  - System.Windows.Data.Binding.Mode
  - System.Windows.Data.Binding.NotifyOnSourceUpdated
  - System.Windows.Data.Binding.NotifyOnTargetUpdated
  - System.Windows.Data.Binding.NotifyOnValidationError
  - System.Windows.Data.Binding.Path
  - System.Windows.Data.Binding.RelativeSource
  - System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  - System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  - System.Windows.Data.Binding.ShouldSerializePath
  - System.Windows.Data.Binding.ShouldSerializeSource
  - System.Windows.Data.Binding.ShouldSerializeValidationRules
  - System.Windows.Data.Binding.Source
  - System.Windows.Data.Binding.SourceUpdatedEvent
  - System.Windows.Data.Binding.TargetUpdatedEvent
  - System.Windows.Data.Binding.UpdateSourceExceptionFilter
  - System.Windows.Data.Binding.UpdateSourceTrigger
  - System.Windows.Data.Binding.ValidatesOnDataErrors
  - System.Windows.Data.Binding.ValidatesOnExceptions
  - System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.Binding.ValidationRules
  - System.Windows.Data.Binding.XmlNamespaceManagerProperty
  - System.Windows.Data.Binding.XPath
  langs:
  - csharp
  name: Binding
  nameWithType: Binding
  fullName: System.Windows.Data.Binding
  type: Class
  summary: "Magas szintű definíciója: egy kötést, amely csatlakozik a célobjektum kötés tulajdonságainak hozzáférést biztosít (általában [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] elemek), és bármilyen adatforrást (például egy adatbázis egy [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] fájl, vagy bármely objektum, amely adatokat tartalmaz)."
  remarks: "[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]adatkötéskor egy egyszerű és egységes módon biztosít a alkalmazások jelent-e, és végezhet az adatokkal. Adatkötéskor lehetővé teszi, hogy szinkronizálja a két különböző objektum tulajdonság értékét.       A kötés létrehozásához használja a kötési osztály vagy a többi <xref:System.Windows.Data.BindingBase>.</xref:System.Windows.Data.BindingBase> öröklő osztály egyik Függetlenül attól, milyen objektum köti, és az adatforrás jellegétől kötésben modelljébe által az alábbi ábra mutatja.       ![Alapvető adatok kötés diagram](~/add/media/databindingmostbasic.png &quot;alapvető adatok kötés diagram&quot;) ábra azt mutatja be az alábbi alapvető [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] kötés – fogalmak.      -Kötésben általában ezek négy részből áll: egy kötés célobjektum, a target tulajdonság, a kötés forrás és a <xref:System.Windows.Data.Binding.Path%2A>használt kötés forrás értéke.</xref:System.Windows.Data.Binding.Path%2A> Például, ha a kötés tartalmát szeretné egy <xref:System.Windows.Controls.TextBox>alkalmazott objektum neve tulajdonságához, a célobjektum van a <xref:System.Windows.Controls.TextBox>, a target tulajdonság a <xref:System.Windows.Controls.TextBox.Text%2A>tulajdonság, az érték használandó nevét, és az adatforrás-objektum az az alkalmazott objektum.</xref:System.Windows.Controls.TextBox.Text%2A> </xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>      -A céltulajdonság a függőség tulajdonság kell lennie. Ez azt is jelenti, hogy egy mező nem hozható létre kötés. A legtöbb tulajdonságok <xref:System.Windows.UIElement>objektumok függőségi tulajdonságok és a legtöbb függőségi tulajdonságok esetében, csak olvasható meglévőket, kivéve alapértelmezés szerint támogatja az adatkötést.</xref:System.Windows.UIElement> (Csak <xref:System.Windows.DependencyObject>típusok függőségi tulajdonságok pedig az összes <xref:System.Windows.UIElement>objektum <xref:System.Windows.DependencyObject>származik.)      – Bár nincs megadva az ábrán, érdemes megjegyezni, hogy a kötés adatforrás-objektum nem korlátozódik az egyéni alatt [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objektum.</xref:System.Windows.DependencyObject> </xref:System.Windows.UIElement> </xref:System.Windows.DependencyObject> [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]Az adatkötés formájában támogatja az adatok [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objektumok és [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]. Néhány példa arra a kötés forrás lehet egy <xref:System.Windows.UIElement>, bármely listaobjektum egy [!INCLUDE[TLA2#tla_clr](~/add/includes/tla2sharptla-clr-md.md)] objektum, amelyhez társítva van [!INCLUDE[TLA#tla_adonet](~/add/includes/tlasharptla-adonet-md.md)] adatok vagy a Web Services vagy XmlNode, amely tartalmazza a [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] adatok.</xref:System.Windows.UIElement>       Használja a <xref:System.Windows.Data.Binding.Mode%2A>tulajdonság adja meg az adatfolyam irányát.</xref:System.Windows.Data.Binding.Mode%2A> Az adatforrás-módosításokkal vagy kétirányú kötések észlelését, a forrás meg kell valósítania egy megfelelő tulajdonság módosítás értesítési mechanizmus például <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> Egy vonatkozó példáért lásd: [hogyan: megvalósítása tulajdonság módosulásáról](~/add/includes/ajax-current-ext-md.md). A <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>tulajdonság határozza meg a forrás frissítések időzítése.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> További információkért tekintse meg az &quot;Adatok kötésének alapfogalmait&quot; a [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_PriorityBinding&quot;></a>## XAML attribútumok használata ```   <object property=&quot;{Binding  declaration}&quot;/>   ``` <a name=&quot;xamlValues_PriorityBinding&quot;> </a> ## XAML értékek *deklaráció* nulla vagy több attribútum-hozzárendelés záradékok vesszővel (,) elválasztva.       További információkért lásd: [Kódkiterjesztés kötés](~/add/includes/ajax-current-ext-md.md) vagy [kötés nyilatkozatok áttekintése](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class Binding : System.Windows.Data.BindingBase'
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements: []
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> osztály."
  syntax:
    content: public Binding ();
    parameters: []
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Egy új példányát inicializálja a <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> egy kezdeti elérési úttal rendelkező osztály."
  syntax:
    content: public Binding (string path);
    parameters:
    - id: path
      type: System.String
      description: "A kezdeti <xref:System.Windows.Data.Binding.Path*>a kötéshez.</xref:System.Windows.Data.Binding.Path*>"
  overload: System.Windows.Data.Binding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A kezelőtársítást ad hozzá a <xref:System.Windows.Data.Binding.SourceUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Ez a metódus támogatja a csatolt események használati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> figyel az eseményre."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "A kezelő hozzáadása."
  overload: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "A kezelőtársítást ad hozzá a <xref:System.Windows.Data.Binding.TargetUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Ez a metódus támogatja a csatolt események használati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> figyel az eseményre."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "A kezelő hozzáadása."
  overload: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.AsyncState
  id: AsyncState
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a aszinkron adatok kézbesítő átadott nem átlátszó adatokat."
  syntax:
    content: public object AsyncState { get; set; }
    return:
      type: System.Object
      description: "Az aszinkron adatok kézbesítő átadott adatokat."
  overload: System.Windows.Data.Binding.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  id: BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely azt jelzi, hogy értékelje ki a <xref:System.Windows.Data.Binding.Path*>viszonyítva az elem vagy a <xref href=&quot;System.Windows.Data.DataSourceProvider&quot;> </xref> objektum.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "A normál viselkedése (Ha ez a tulajdonság van `false`) tartalmazza a speciális kezelés <xref:System.Windows.Data.DataSourceProvider>objektumok.</xref:System.Windows.Data.DataSourceProvider> Ebben az esetben a kötési motor kiértékeli a <xref:System.Windows.Data.Binding.Path%2A>az objektum szerzett a <xref:System.Windows.Data.DataSourceProvider.Data%2A>tulajdonság.</xref:System.Windows.Data.DataSourceProvider.Data%2A> </xref:System.Windows.Data.Binding.Path%2A> Emellett a kötés figyeli a <xref:System.Windows.Data.DataSourceProvider.DataChanged>esemény, és ennek megfelelően reagál.</xref:System.Windows.Data.DataSourceProvider.DataChanged> Ez a tulajdonság `true` felülírja ezt a viselkedést, és a kötés hozzáférést biztosít a tulajdonságait a <xref:System.Windows.Data.DataSourceProvider>objektum.</xref:System.Windows.Data.DataSourceProvider>"
  syntax:
    content: public bool BindsDirectlyToSource { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>az elérési út, az elem; viszonyítva kiértékelése Ellenkező esetben <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.BindsDirectlyToSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Converter
  id: Converter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a konverter használatára."
  remarks: "A kötés olyan alapértelmezett átalakító, amely megkísérli a típuskonverziós között a forrás és cél értéke implicit módon használja. Ha a átalakítás nem végezhető el, az alapértelmezett átalakító függvény `null`.       Ha azt szeretné, egy egyéni értékkonverternek társítandó kötést, készítsen egy osztály, amely megvalósítja a <xref:System.Windows.Data.IValueConverter>felületet, és adja meg a hitelesítés megvalósításához a <xref:System.Windows.Data.IValueConverter.Convert%2A>és <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>módszerek.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter> Érték konverterek módosítani az adatokat egy típus a másikra, például karakterkészletek kulturális részletek között fordítása, vagy módosítsa a egyéb szempontok a bemutató. Tipikus átalakítás forgatókönyvet, tekintse meg a &quot;Adatok átalakítása&quot; a a [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlAttributeUsage_Converter&quot;></a>## XAML attribútumok használata ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> ## XAML értékek *myConverter* egy osztály, amely megvalósítja az erőforrás hivatkozik a <xref:System.Windows.Data.IValueConverter>felület, amely tartalmazza többek között az a <xref:System.Windows.Data.IValueConverter.Convert%2A>és <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>módszerek.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A> </xref:System.Windows.Data.IValueConverter>       Tekintse meg a értékkonverternek, használja a [StaticResource Kódkiterjesztés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IValueConverter
      description: "Típusú érték <xref href=&quot;System.Windows.Data.IValueConverter&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a kulturális környezet, amelyben a konverter kiértékeléséhez."
  remarks: "Ha ez a tulajdonság nincs megadva, a kötési motor által a `Language` kötés célobjektum tulajdonság. A [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] ez alapértelmezés szerint az &quot;en-US&quot; vagy a gyökérelem (vagy bármely elem) a lap örökli az értéket, ha egy explicit módon állították.       Adatok átalakítása kapcsolatos információkért lásd: az adatok átalakítása szakasz a [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*> , hogy a paraméter"
  remarks: "A ConverterParameter tulajdonság segítségével adja meg, hogyan alakul objektum.  Ezt a tulajdonságot, amelyet kötést konvertert további információt továbbítja.  Amikor megad egy ConverterParameter, a objektumnak átadott érték a <xref:System.Windows.Data.IValueConverter.Convert%2A>és <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>módokat, mint a `parameter` paraméter.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>       Egy vonatkozó példáért lásd: [hogyan: előállít egy értéket a lista a kötött elemeken alapuló](~/add/includes/ajax-current-ext-md.md). A példa bemutatja az megvalósítását egy <xref:System.Windows.Data.IMultiValueConverter>, de a használati továbbra is érvényes.</xref:System.Windows.Data.IMultiValueConverter>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "A paraméter a <xref:System.Windows.Data.Binding.Converter*>.</xref:System.Windows.Data.Binding.Converter*> átadása Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.DoNothing
  id: DoNothing
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Kérje meg a kötési motor nem bármely művelet elvégzésére szolgál, a visszaadott érték."
  remarks: "A kötés forrástulajdonság vagy konverter adhat vissza DoNothing arra utasítani a nem a kötési motor bármely művelet elvégzésére. Ahhoz például, hogy a kötési motor nem a kötés célként, nem a következő ugrás értéket átadni utasítani <xref:System.Windows.Data.Binding>a egy <xref:System.Windows.Data.PriorityBinding>, vagy hogy nem használja a `FallBackValue` vagy alapértelmezett értéket.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: public static readonly object DoNothing;
    return:
      type: System.Object
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ElementName
  id: ElementName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja az elem kívánja használni, mint a kötés adatforrás-objektum nevét."
  remarks: "Ez a tulajdonság akkor hasznos, ha az alkalmazás egy másik elem tulajdonságához kötni kívánt. Például, ha szeretné használni a <xref:System.Windows.Controls.Slider>vezérlésére az alkalmazás egy másik vezérlő magasságát, vagy ha kívánja kötni a <xref:System.Windows.Controls.ContentControl.Content%2A>a vezérlő a <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>tulajdonsága a <xref:System.Windows.Controls.ListBox>vezérlő.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> </xref:System.Windows.Controls.ContentControl.Content%2A> </xref:System.Windows.Controls.Slider>       Alapértelmezés szerint a kötések öröklik az adatkörnyezetben, amelyet a `DataContext` tulajdonság, ha egy van beállítva. Azonban a ElementName tulajdonság egyik közvetlenül beállítható forrását módja egy <xref:System.Windows.Data.Binding>, és felülírja az örökölt adatkörnyezetet.</xref:System.Windows.Data.Binding> További információkért lásd: [hogyan: Adja meg a kötés forrás](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Windows.Data.Binding.Source%2A>és <xref:System.Windows.Data.Binding.RelativeSource%2A>tulajdonságainak a <xref:System.Windows.Data.Binding>osztály is lehetővé teszik a kötés forrását beállítását explicit módon.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Azonban csak egyet a három tulajdonságainak ElementName, <xref:System.Windows.Data.Binding.Source%2A>, és <xref:System.Windows.Data.Binding.RelativeSource%2A>, az egyes set kell kötelező vagy ütközés léphet fel.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.Source%2A> Ez a tulajdonság kivételt jelez, ha az adatforrás kötési ütközés."
  syntax:
    content: public string ElementName { get; set; }
    return:
      type: System.String
      description: "Értékét a <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> tulajdonság vagy [x: Name irányelv](~/add/includes/ajax-current-ext-md.md) érdeklődési eleméhez. Olvassa el a kódot az elemek csak akkor, ha azok már regisztrálva lettek a megfelelő <xref:System.Windows.NameScope>keresztül <xref uid=&quot;langword_csharp_RegisterName&quot; name=&quot;RegisterName&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.NameScope> További információkért lásd: [WPF XAML Namescopes](~/add/includes/ajax-current-ext-md.md).       Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ElementName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  id: GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Értéket ad vissza egy [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] a kötés kapcsolódik a megadott objektum által használt névtér objektum."
  remarks: "Ez a metódus támogatja a csatolt tulajdonságok használatát a <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>csatolt tulajdonság.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>       [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]névtér-kezelők olyan csak akkor, ha az adatok kötésében származott azok egy [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] kötés forrás (<xref:System.Windows.Data.XmlDataProvider> objektum).</xref:System.Windows.Data.XmlDataProvider>       Ha egy névtér manager kifejezetten nem alkalmazott adatok eredeti adatforrás létrehozása, vagy később meghívásával <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>a kötésen, akkor ez a módszer vissza `null`.</xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>       Ez a metódus mindig visszatér `null` Ha a kötés alapjául szolgáló adatok nem [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)]."
  syntax:
    content: public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Az objektum a névtér információk beszerzéséhez."
    return:
      type: System.Xml.XmlNamespaceManager
      description: "A visszaadott objektumot megtekintésre használt [!INCLUDE[TLA2#tla_xml](~/add/includes/tla2sharptla-xml-md.md)] névterek, a kötést az átadott objektum elemen kapcsolódik. Ez az objektum kell konvertálni, mint a &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt;."
  overload: System.Windows.Data.Binding.GetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A <code> target </code> paraméter értéke nem lehet <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.IndexerName
  id: IndexerName
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Használja a <xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>a &lt;xref:System.ComponentModel.PropertyChangedEventArgs?displayProperty=fullName&gt; annak jelzésére, hogy egy indexelési tulajdonság megváltozott.</xref:System.ComponentModel.PropertyChangedEventArgs.PropertyName*>"
  syntax:
    content: public const string IndexerName;
    return:
      type: System.String
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.IsAsync
  id: IsAsync
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy a <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> kell lekérni, és aszinkron módon állítsa be az értékeket."
  remarks: "A IsAsync tulajdonság használata során a `get` elérőjét: a kötés forrástulajdonság hosszú ideig is eltarthat. Egy példa: egy kép tulajdonság egy `get` elérő, amely letölti a webkiszolgálóról. Beállítás IsAsync `true` elkerülhető, hogy blokkolja a [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] közben a letöltésekor következik be.       Miközben a rendszer az érték az ügyfélszámítógépekre érkeznek, a kötés jelent a <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, ha ilyen, vagy az alapértelmezett érték a kötés target tulajdonsága.</xref:System.Windows.Data.BindingBase.FallbackValue%2A>       Azonban nem kell több olyan forgatókönyv, ahol szeretné használni a IsAsync tulajdonság. A [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] irányelvek javasoljuk szemben, amelyek az lassabb, mint egy mezőkészlete nagyságrenddel meghatározása. Hoz létre az osztályhoz, vegye figyelembe kezelési kívüli rendkívül lassú műveletek a `get` elérő és az eredmény gyorsítótárazását. További információkért lásd: [NIB: kiválasztása közötti tulajdonságai és metódusai](http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af)."
  syntax:
    content: public bool IsAsync { get; set; }
    return:
      type: System.Boolean
      description: "Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Mode
  id: Mode
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja egy érték, amely jelzi az adatfolyam a kötésben irányát."
  remarks: "<xref:System.Windows.Data.BindingMode> <xref:System.Windows.Data.BindingMode>Kötések, a mögöttes adatokat meg kell valósítania az <xref:System.ComponentModel.INotifyPropertyChanged>.</xref:System.ComponentModel.INotifyPropertyChanged> </xref:System.Windows.Data.BindingMode> és</xref:System.Windows.Data.BindingMode> támogatása További információkért lásd: [hogyan: megvalósítása tulajdonság módosulásáról](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Windows.Data.BindingMode>vagy <xref:System.Windows.Data.BindingMode>kötések, a cél – forrás frissítések beállításával szabályozhatja a <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>tulajdonság.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> További információkért lásd: <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>       A másik kötés módok további információkért lásd: [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Egy a <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> értékeket. Az alapértelmezett érték <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, amely a célként megadott függőség tulajdonság alapértelmezett kötés mód értékét adja vissza. Az alapértelmezett érték azonban minden függőség tulajdonság változó. Általában felhasználói szerkeszthető vezérlő tulajdonságai, például szövegmezőt és jelölőnégyzeteket, az alapértelmezett kétirányú kötések, mivel egyirányú kötéseket alapértelmezés szerint a legtöbb más tulajdonságok.       Annak meghatározásához, hogy a függőség tulajdonság van kötve egy- vagy kétirányú alapértelmezés szerint programozott módon, hogy a tulajdonság használatával tulajdonság metaadatainak lekérése <> </> *>, majd ellenőrizze a logikai értéket a <> </> *> tulajdonság."
  overload: System.Windows.Data.Binding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely azt jelzi, hogy kell kiadni a <xref:System.Windows.Data.Binding.SourceUpdated>eseményt, amikor egy értéket a kötés célként megadott átkerülnek a kötés forrás.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Windows.Data.Binding.SourceUpdated>esemény kell jelenik meg, ha a kötés adatforrás-értéke frissített; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.SourceUpdated> Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely azt jelzi, hogy kell kiadni a <xref:System.Windows.Data.Binding.TargetUpdated>eseményt, amikor egy értéket a kötés forrásból átkerülnek a kötés cél.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Windows.Data.Binding.TargetUpdated>esemény kell jelenik meg, ha a kötés célérték frissített; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Data.Binding.TargetUpdated> Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely azt jelzi, hogy kell kiadni a <xref:System.Windows.Controls.Validation.Error>esemény az objektum a csatolt.</xref:System.Windows.Controls.Validation.Error>"
  remarks: "Ha a kötés <xref:System.Windows.Data.Binding.ValidationRules%2A>a kötési motor társítva, ellenőrzi, minden egyes alkalommal szabály a target tulajdonság értéke átviszi a source tulajdonság.</xref:System.Windows.Data.Binding.ValidationRules%2A> Egy szabály érvénytelenné válik, hogy egy érték, ha a kötési motor létrehoz egy <xref:System.Windows.Controls.ValidationError>objektumra, és hozzáadja azt, hogy a <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A> gyűjtemény az objektum.</xref:System.Windows.Controls.Validation.Errors%2A> </xref:System.Windows.Controls.Validation> </xref:System.Windows.Controls.ValidationError> Ha a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>tulajdonsága nem üres, a <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>objektum csatolt tulajdonság értéke `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Ha a NotifyOnValidationError tulajdonsága a <xref:System.Windows.Data.Binding>értékre van állítva `true`, majd a kötési motor riasztást a <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>esemény az objektum csatolt.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding>       Az adatok érvényesítése szakaszában talál részletes leírást a hitelesítési folyamat, a [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a <xref:System.Windows.Controls.Validation.Error>csatolt események kell lennie, ha nincs érvényesítési hiba forrás frissítései során kötött objektumon emelt; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> Az alapértelmezett érték <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Path
  id: Path
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja az elérési út kötés source tulajdonságára."
  remarks: "Minden kötésnek általában ezek négy részből áll: egy kötés célobjektum, a target tulajdonság, egy kötés forrás és az értéket a kötés forrás elérési útját. A kötés – fogalmak kapcsolatos további információkért lásd: [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md).       Az kötni kívánt érték megadásához használja az elérési út tulajdonságot: - a legegyszerűbb esetben tulajdonság értéke, a kötés, például a használandó adatforrás-objektum tulajdonságának neve az elérési `Path=PropertyName`.      -Altulajdonságok tulajdonság is megadható egy hasonló a használt szintaxis [!INCLUDE[TLA#tla_cshrp](~/add/includes/tlasharptla-cshrp-md.md)]. Például a záradék `Path=ShoppingCart.Order` állítja be a kötés altulajdonság `Order` az objektum vagy tulajdonság `ShoppingCart`.      -Kötést létrehozni egy csatolt tulajdonság, helyezze a zárójelek közé csatolt tulajdonság. Ahhoz például, hogy a csatolt tulajdonság kötése <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>, a szintaxis a következő `Path=(DockPanel.Dock)`.</xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName>      -A tulajdonság nevét követő, amikor az indexelő van érvényben szögletes zárójelben indexelő tulajdonság adható meg. Például a záradék `Path=ShoppingCart[0]` a kötés az indexet, amely megfelel a tulajdonság belső indexelő kezelésének a literál karakterlánc &quot;a&0;&quot; értékre állítja. Több indexelők is támogatottak.      -Indexelők és altulajdonságok vegyes is egy `Path` záradék, például `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].` - belül indexelők vesszővel (,) válassza el egymástól elválasztva több indexelő paraméter lehet. Az egyes paramétereket típusú kifejezést adható meg. Például rendelkezhet `Path=&quot;[(sys:Int32)42,(sys:Int32)24]&quot;`, ahol `sys` van leképezve a `System` névtér.      -Ha a forrás egy gyűjtemény nézetet, az aktuális elem adható meg a perjelet (/). Például a záradék `Path=/` állítja be a kötést a jelenlegi elemhez a nézetben. Ha a forrás egy gyűjtemény, ez a szintaxis megadja az aktuális elem az alapértelmezett gyűjtési nézetben.      -Tulajdonságnevek és perjeleket tartalmazó gyűjtemények tulajdonságokhoz átjárása egyesíthetők. Például `Path=/Offices/ManagerName` határozza meg a forrás gyűjtemény, amely tartalmazza az aktuális elem egy `Offices` tulajdonság, amely egyúttal a gyűjteményhez. Az aktuális elem nem egy objektum, amely tartalmazza a `ManagerName` tulajdonság.      – Szükség esetén egy pontot (.) elérési út használható a jelenlegi forráshoz. Például `Text=&quot;{Binding}&quot;` egyenértékű `Text=&quot;{Binding Path=.}&quot;`.       Elérési út szintaxissal kapcsolatos információkért lásd: [kötés nyilatkozatok áttekintése](~/add/includes/ajax-current-ext-md.md) vagy [PropertyPath XAML szintaxis](~/add/includes/ajax-current-ext-md.md).       A [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] kötések, tekintse meg a <xref:System.Windows.Data.Binding.XPath%2A>tulajdonság.</xref:System.Windows.Data.Binding.XPath%2A>       Egy teljes objektum kötése, nem kell megadnia a Path tulajdonságot. További információkért lásd a &quot;Megadása az elérési út az az érték&quot; [kötés – áttekintés](../Topic/Data%20Binding%20Overview.md)."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]"
  syntax:
    content: public System.Windows.PropertyPath Path { get; set; }
    return:
      type: System.Windows.PropertyPath
      description: "A kötés forrás elérési útja. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RelativeSource
  id: RelativeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a kötés forrás helyéről a kötés cél helyétől függően megadásával."
  remarks: "Ez a tulajdonság az objektum egy tulajdonság kötése ugyanazt az objektumot egy másik tulajdonságához, vagy adja meg egy kötés egy stílus vagy a sablon gyakran használják.       Alapértelmezés szerint a kötések öröklik az adatkörnyezetben, amelyet a `DataContext` tulajdonság, ha egy van beállítva. Azonban a RelativeSource tulajdonság egyik közvetlenül beállítható forrását módja egy <xref:System.Windows.Data.Binding>, és felülírja az örökölt adatkörnyezetet.</xref:System.Windows.Data.Binding> További információkért lásd: [hogyan: Adja meg a kötés forrás](~/add/includes/ajax-current-ext-md.md).       A <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>és <xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName>Tulajdonságok is lehetővé teszik a kötés forrását beállítását explicit módon.</xref:System.Windows.Data.Binding.Source%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Azonban csak a három tulajdonságok egyikének <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, RelativeSource, minden kötésnek kell beállítani, és ütközés fordulhat elő.</xref:System.Windows.Data.Binding.Source%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Ez a tulajdonság kivételt jelez, ha az adatforrás kötési ütközés.       A [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] információkért lásd: [RelativeSource MarkupExtension](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_RelativeSource&quot;></a>## XAML szöveg kihasználtsága"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the RelativeSource property. For more information on this example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[BindValidation#5](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#5)]  \n  \n To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.RelativeSource RelativeSource { get; set; }
    return:
      type: System.Windows.Data.RelativeSource
      description: "A <xref href=&quot;System.Windows.Data.RelativeSource&quot;> </xref> használt kötés forrás relatív helyét megadó objektum. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.RelativeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Eltávolít egy hibakezelőt a <xref:System.Windows.Data.Binding.SourceUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.SourceUpdated>"
  remarks: "Ez a metódus támogatja a csatolt események használati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> figyel az eseményre."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Távolítsa el a kezelő."
  overload: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  id: RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Eltávolít egy hibakezelőt a <xref:System.Windows.Data.Binding.TargetUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.TargetUpdated>"
  remarks: "Ez a metódus támogatja a csatolt események használati [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler<System.Windows.Data.DataTransferEventArgs> handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "A <xref href=&quot;System.Windows.UIElement&quot;> </xref> vagy <xref href=&quot;System.Windows.ContentElement&quot;> </xref> figyel az eseményre."
    - id: handler
      type: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
      description: "Távolítsa el a kezelő."
  overload: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  id: SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Beállítja egy névtér objektum a megadott elem kötés használja."
  remarks: "Ez a metódus támogatja a csatolt tulajdonságok használatát a <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>csatolt tulajdonság.</xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>"
  syntax:
    content: public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);
    parameters:
    - id: target
      type: System.Windows.DependencyObject
      description: "Az objektum a névtér információk beszerzéséhez."
    - id: value
      type: System.Xml.XmlNamespaceManager
      description: "A &lt;xref:System.Xml.XmlNamespaceManager?displayProperty=fullName&gt; az átadott elem névtere értékelésre használatára."
  overload: System.Windows.Data.Binding.SetXmlNamespaceManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>target</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializePath
  id: ShouldSerializePath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azt jelzi, hogy a <xref:System.Windows.Data.Binding.Path*>tulajdonság kell állandósítható.</xref:System.Windows.Data.Binding.Path*>"
  remarks: "Ez `ShouldSerialize` módszer áll rendelkezésre, mert a <xref:System.Windows.Data.Binding.Path%2A>tulajdonság nem rendelkezik egyszerű alapértelmezett értéket.</xref:System.Windows.Data.Binding.Path%2A> Ez a módszer azt jelzi, hogy a tulajdonság alapértelmezett értéke megváltozott. A <xref:System.Windows.Data.Binding>vagy fejlesztése a saját szabályozza a <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> tartalmazó</xref:System.Windows.Data.Binding> tervezőjét vagy fejlesztői általában meghívása Ez a módszer"
  syntax:
    content: public bool ShouldSerializePath ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság értéke megváltozott, az alapértelmezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  id: ShouldSerializeSource
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azt jelzi, hogy a <xref:System.Windows.Data.Binding.Source*>tulajdonság kell állandósítható.</xref:System.Windows.Data.Binding.Source*>"
  remarks: "Ez `ShouldSerialize` módszer áll rendelkezésre, mert a <xref:System.Windows.Data.Binding.Source%2A>tulajdonság nem rendelkezik egyszerű alapértelmezett értéket.</xref:System.Windows.Data.Binding.Source%2A> Ez a módszer azt jelzi, hogy a tulajdonság alapértelmezett értéke megváltozott. A <xref:System.Windows.Data.Binding>vagy fejlesztése a saját szabályozza a <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> tartalmazó</xref:System.Windows.Data.Binding> tervezőjét vagy fejlesztői általában meghívása Ez a módszer"
  syntax:
    content: public bool ShouldSerializeSource ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság értéke megváltozott, az alapértelmezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azt jelzi, hogy a <xref:System.Windows.Data.Binding.ValidationRules*>tulajdonság kell állandósítható.</xref:System.Windows.Data.Binding.ValidationRules*>"
  remarks: "Ez `ShouldSerialize` módszer áll rendelkezésre, mert a <xref:System.Windows.Data.Binding.ValidationRules%2A>tulajdonság nem rendelkezik egyszerű alapértelmezett értéket.</xref:System.Windows.Data.Binding.ValidationRules%2A> Ez a módszer azt jelzi, hogy a tulajdonság alapértelmezett értéke megváltozott. A <xref:System.Windows.Data.Binding>vagy fejlesztése a saját szabályozza a <xref:System.Windows.Data.Binding>.</xref:System.Windows.Data.Binding> tartalmazó</xref:System.Windows.Data.Binding> tervezőjét vagy fejlesztői általában meghívása Ez a módszer"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Ha a tulajdonság értéke megváltozott, az alapértelmezett; Ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.Source
  id: Source
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a kötési adatforrásként objektum."
  remarks: "Alapértelmezés szerint a kötések öröklik az adatkörnyezetben, amelyet a `DataContext` tulajdonság, ha egy van beállítva. A Source tulajdonság azonban explicit módon állíthatja be a forrása az eljárások valamelyikével egy <xref:System.Windows.Data.Binding>, és felülírja az örökölt adatkörnyezetet.</xref:System.Windows.Data.Binding> A funkciót, amelyben több tulajdonságok öröklése azonos adatkörnyezet hatókör megadása nem szükséges, ha használható a Source tulajdonság ahelyett, hogy a `DataContext` tulajdonság.       A <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName>és <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName>Tulajdonságok is lehetővé teszik a kötés forrását beállítását explicit módon.</xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=fullName> Azonban csak a három tulajdonságok egyikének <xref:System.Windows.Data.Binding.ElementName%2A>, forrás, és <xref:System.Windows.Data.Binding.RelativeSource%2A>, az egyes set kell kötelező vagy ütközés fordulhat elő.</xref:System.Windows.Data.Binding.RelativeSource%2A> </xref:System.Windows.Data.Binding.ElementName%2A> Ez a tulajdonság kivételt jelez, ha az adatforrás kötési ütközés.       Törölni kívánja ezt a tulajdonságot, állítsa be a <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>.</xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=fullName>      <a name=&quot;xamlAttributeUsage_Source&quot;></a>## XAML attribútumok használata ```   <object Source=&quot;object&quot;/>   ``` <a name=&quot;xamlValues_Source&quot;> </a> ## XAML értékek *objektum* objektum.       Tekintse meg a meglévő objektumhoz, használja a [StaticResource Kódkiterjesztés](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "In this example, you have a `Person` object with a string property named `PersonName`. The `Person` object is defined in the namespace called `SDKSample`.  \n  \n The following example instantiates the `Person` object with a `PersonName` property value of `Joe`. This is done in the `Resources` section and assigned an `x:Key`.  \n  \n [!code-xml[SimpleBinding#Instantiation](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#instantiation)]  \n[!code-xml[SimpleBinding#2](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#2)]  \n[!code-xml[SimpleBinding#EndWindow](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#endwindow)]  \n  \n To bind to the `PersonName` property you would do the following:  \n  \n [!code-xml[SimpleBinding#BDO1](~/add/codesnippet/xaml/SimpleBinding.SimpleBinding/Page1.xaml#bdo1)]  \n  \n As a result, the <xref:System.Windows.Controls.TextBlock> appears with the value \"Joe\".  \n  \n In the following example, the Source values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=fullName>:  \n  \n [!code-xml[DataBindingLab#ComboBoxMultiBinding](~/add/codesnippet/xaml/DataBindingLab/AddProductWindow.xaml#comboboxmultibinding)]  \n  \n For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public object Source { get; set; }
    return:
      type: System.Object
      description: "Az objektum a kötési adatforrásként."
  overload: System.Windows.Data.Binding.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  id: SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azonosítja a <xref:System.Windows.Data.Binding.SourceUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.SourceUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  id: TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azonosítja a <xref:System.Windows.Data.Binding.TargetUpdated>esemény csatolt.</xref:System.Windows.Data.Binding.TargetUpdated>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja a kezelő segítségével adjon meg egyéni logika, amely a kötés hibát észlel a kötés adatforrás-értéke a frissítésekor kivételek kezelése. Ez csak akkor alkalmazható, ha olyan társítva egy <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> a kötést."
  remarks: "A <xref:System.Windows.Controls.ExceptionValidationRule>olyan beépített ellenőrzési szabály, amely ellenőrzi, hogy a kötés source tulajdonságára frissítésekor kivételek.</xref:System.Windows.Controls.ExceptionValidationRule> Ha olyan társítva a <xref:System.Windows.Controls.ExceptionValidationRule>rendelkező a <xref:System.Windows.Data.Binding>objektum, ez a tulajdonság segítségével állítsa be a kezelő egyéni logika biztosít az ilyen kivételek kezelése.</xref:System.Windows.Data.Binding> </xref:System.Windows.Controls.ExceptionValidationRule> Ha nincs megadva egy UpdateSourceExceptionFilter a <xref:System.Windows.Data.Binding>, a kötési motor létrehoz egy <xref:System.Windows.Controls.ValidationError>azzal a kivétellel, és hozzáadja azt, hogy a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>a kötött elem gyűjteménye.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> </xref:System.Windows.Data.Binding>"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You can provide custom logic to handle those exceptions. The following example shows how to use the UpdateSourceExceptionFilter property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>. For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "A módszer, amely egyéni logika, amely a kötés hibát észlel a kötés adatforrás-értéke a frissítésekor kivételek kezelése."
  overload: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja egy érték, amely meghatározza, hogy a kötési forrás frissítések időzítése."
  remarks: "Kötéseket <xref:System.Windows.Data.BindingMode>vagy <xref:System.Windows.Data.BindingMode>a target tulajdonság változásainak figyelését, és továbbíthatja őket forrására.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> Ez más néven a forrás frissítése. Ezek a frissítések általában a target tulajdonság megváltozásakor fordulhat elő. A jelölőnégyzetek és egyéb egyszerű vezérlők rendben, de általában nem helyénvaló szövegmezők. Frissítés után minden billentyűlenyomást is romolhat a teljesítmény és a szokásos lehetőség backspace, és javítsa ki a hibákat előtt véglegesítése új értékre tiltja a felhasználónak. Ezért az UpdateSourceTrigger alapértékként a <xref:System.Windows.Controls.TextBox.Text%2A>tulajdonság <xref:System.Windows.Data.UpdateSourceTrigger>és nem <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Controls.TextBox.Text%2A>       Ha a UpdateSourceTrigger érték <xref:System.Windows.Data.UpdateSourceTrigger>, meg kell hívnia a <xref:System.Windows.Data.BindingExpression.UpdateSource%2A>metódus vagy a módosítások nem továbbítódik forrására.</xref:System.Windows.Data.BindingExpression.UpdateSource%2A> </xref:System.Windows.Data.UpdateSourceTrigger>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Egy a <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> értékeket. Az alapértelmezett érték <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, amely visszaadja az alapértelmezett <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> a cél függőségi tulajdonság értéke. Azonban a legtöbb függőség tulajdonság alapértelmezett értéke van <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, amíg a <> </> *> tulajdonság értéke alapértelmezett <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Függőség tulajdonság alapértelmezett UpdateSourceTrigger értékének meghatározása programozott módon, hogy a tulajdonság használatával tulajdonság metaadatainak lekérése <> </> *>, majd ellenőrizze az értékét a <xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>tulajdonság.</xref:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*>"
  overload: System.Windows.Data.Binding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy tartalmaznak-e a <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "A tulajdonság beállítása esetén történő használatának alternatívája biztosít a <xref:System.Windows.Controls.DataErrorValidationRule>elem explicit módon.</xref:System.Windows.Controls.DataErrorValidationRule> A <xref:System.Windows.Controls.DataErrorValidationRule>olyan beépített ellenőrzési szabály, amely a hibák által előállított ellenőrzi a <xref:System.ComponentModel.IDataErrorInfo>megvalósítása a Forrásobjektum.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Hiba történik, ha a kötési motor létrehoz egy <xref:System.Windows.Controls.ValidationError>a hibával, és hozzáadja azt, hogy a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>a kötött elem gyűjteménye.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Hiba hiánya törli az érvényesítési visszajelzést, kivéve, ha egy másik szabály riasztást állít elő egy érvényesítési hiba.       ValidatesOnDataErrors megjelent a .NET-keretrendszer 3.5-ös verziója.  További információkért lásd: [.NET-keretrendszer-verziót és a függőségek](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and ValidatesOnDataErrors to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.  \n  \n [!code-cs[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#idataerrorinfodata)]\n [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#idataerrorinfodata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnDataErrors to `true` on the <xref:System.Windows.Data.Binding>.  When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#idataerrorinfoxaml)]"
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy tartalmaznak-e a <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "A tulajdonság beállítása esetén történő használatának alternatívája biztosít a <xref:System.Windows.Controls.ExceptionValidationRule>elem explicit módon.</xref:System.Windows.Controls.ExceptionValidationRule> A <xref:System.Windows.Controls.ExceptionValidationRule>olyan beépített ellenőrzési szabály, amely ellenőrzi, hogy a source tulajdonság frissítése során okozott kivételeket.</xref:System.Windows.Controls.ExceptionValidationRule> Kivételt vált ki, ha a kötési motor létrehoz egy <xref:System.Windows.Controls.ValidationError>azzal a kivétellel, és hozzáadja azt a <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>a kötött elem gyűjteménye.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> Hiba hiánya törli az érvényesítési visszajelzést, kivéve, ha egy másik szabály riasztást állít elő egy érvényesítési hiba.       ValidatesOnExceptions megjelent a .NET-keretrendszer 3.5-ös verziója.  További információkért lásd: [.NET-keretrendszer-verziót és a függőségek](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples use ValidatesOnExceptions to validate user input in a <xref:System.Windows.Controls.TextBox>. The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.  \n  \n [!code-cs[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/csharp/bindingvalidationattributessnippets/data.cs#throwexceptiondata)]\n [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/add/codesnippet/visualbasic/bindingvalidationattributessnippets/window1.xaml.vb#throwexceptiondata)]  \n  \n The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets ValidatesOnExceptions to `true` on the <xref:System.Windows.Data.Binding>. When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.  \n  \n [!code-xml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/add/codesnippet/xaml/bindingvalidationattributessnippets/window1.xaml#throwexceptionxaml)]"
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdez vagy beállít egy értéket, amely jelzi, hogy tartalmaznak-e a <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Ha ValidatesOnNotifyDataErrors van `true`, a kötés keres, és egy adatforrás, amely megvalósítja az <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo> értesítő hibákról"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>tartalmazza a <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; ellenkező esetben <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Az alapértelmezett érték <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi a szabályokat, amelyek érvényességét, a felhasználói bevitel gyűjteménye."
  remarks: "A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] kötés adatmodell teszi lehetővé a ValidationRules hozzárendelni a <xref:System.Windows.Data.Binding>vagy <xref:System.Windows.Data.MultiBinding>objektum.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> Egyéni szabályok létrehozásához származó a <xref:System.Windows.Controls.ValidationRule>osztály és megvalósítása a <xref:System.Windows.Controls.ValidationRule.Validate%2A>metódus, vagy használhatja a beépített <xref:System.Windows.Controls.ExceptionValidationRule>, amely érvénytelenné értéket, ha nincsenek kivételek forrás frissítései közben.</xref:System.Windows.Controls.ExceptionValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule>       A kötési motor ellenőrzi az egyes <xref:System.Windows.Controls.ValidationRule>minden alkalommal, amikor olyan beviteli értéket (a kötés target tulajdonság értéke) átkerül a kötés forrástulajdonság kötés társított.</xref:System.Windows.Controls.ValidationRule> Az adatok érvényesítése szakaszában talál részletes leírást a hitelesítési folyamat, a [kötés – áttekintés](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Ez a tulajdonság állítható be [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] csak gyűjtemény szintaxist, vagy a gyűjtemény objektumra megnyitása és a különböző módszerek, például használata `Add`. Gyűjtemény objektum eléréséhez a tulajdonság csak olvasható, mivel magát a gyűjteményt írható-olvasható.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a>## XAML tulajdonság elemek használata ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>      ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> ## XAML értékek *oneOrMoreValidationRules* egy vagy több <xref:System.Windows.Controls.ValidationRule>objektumok.</xref:System.Windows.Controls.ValidationRule>       Az <xref:System.Windows.Controls.ExceptionValidationRule>osztály, vagy hozzon létre egyéni szabályok subclassing <xref:System.Windows.Controls.ValidationRule>osztályhoz.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "A gyűjtemény <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objektumok."
  overload: System.Windows.Data.Binding.ValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  id: XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Azonosítja a <xref:System.Windows.Data.Binding.XmlNamespaceManager*>csatolt tulajdonság.</xref:System.Windows.Data.Binding.XmlNamespaceManager*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Fel kell venni a párbeszédpanelre."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.Binding.XPath
  id: XPath
  parent: System.Windows.Data.Binding
  langs:
  - csharp
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Lekérdezi vagy beállítja egy <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> értékét adja vissza a lekérdezést a [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] kötés forrás használatára."
  remarks: "Ha a kötés forrása [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] adatokat ahelyett, hogy egy [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] objektum, a XPath tulajdonságot helyett használja a <xref:System.Windows.Data.Binding.Path%2A>tulajdonság, amely jelzi az értéket a használt kötés forrás elérési útja.</xref:System.Windows.Data.Binding.Path%2A>       Az XPath tulajdonság beállításával hoz létre egy `XPath` lekérdezést csomópontok gyűjteménye vagy egy csomópont kiválasztásához (<xref:System.Xml.XmlElement?displayProperty=fullName> és <xref:System.Xml.XmlAttribute?displayProperty=fullName>is származik <xref:System.Xml.XmlNode?displayProperty=fullName>).</xref:System.Xml.XmlNode?displayProperty=fullName> </xref:System.Xml.XmlAttribute?displayProperty=fullName> </xref:System.Xml.XmlElement?displayProperty=fullName> <xref:System.Xml.XmlNode?displayProperty=fullName>van egy [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] objektum, amely azt jelenti, hogy a tulajdonságok használatával kell kötni a <xref:System.Windows.Data.Binding.Path%2A>tulajdonság.</xref:System.Windows.Data.Binding.Path%2A></xref:System.Xml.XmlNode?displayProperty=fullName>       A <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>metódus kezeli a `XPath` kifejezések az XPath tulajdonságból.</xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> `XPath`függvények használata nem támogatott. A `XPath` kifejezés információkért tekintse meg a <xref:System.Xml.XmlNode.SelectNodes%2A>dokumentáció és néhány példa a példa szakaszban megadott.</xref:System.Xml.XmlNode.SelectNodes%2A>       Az XML-objektumok LINQ <xref:System.Xml.Linq.XDocument>és <xref:System.Xml.Linq.XElement>ne használjon `XPath`.</xref:System.Xml.Linq.XElement> </xref:System.Xml.Linq.XDocument> További információkért lásd: [hogyan: XML lekérdezés eredményeinek XDocument, XElement vagy LINQ kötés](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string XPath { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_XPath&quot; name=&quot;XPath&quot; href=&quot;&quot;> </xref> lekérdezés. Az alapértelmezett érték <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.Binding.XPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Data.Binding.#ctor
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.Windows.Data.Binding.Binding()
- uid: System.Windows.Data.Binding.#ctor(System.String)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding(String)
  nameWithType: Binding.Binding(String)
  fullName: System.Windows.Data.Binding.Binding(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.Data.DataTransferEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DataTransferEventArgs>
  nameWithType: EventHandler<DataTransferEventArgs>
  fullName: System.EventHandler<System.Windows.Data.DataTransferEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Data.DataTransferEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.DataTransferEventArgs
    name: DataTransferEventArgs
    nameWithType: DataTransferEventArgs
    fullName: DataTransferEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.AddTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.AsyncState
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
  fullName: System.Windows.Data.Binding.AsyncState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.Binding.BindsDirectlyToSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
  fullName: System.Windows.Data.Binding.BindsDirectlyToSource
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.Binding.Converter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
  fullName: System.Windows.Data.Binding.Converter
- uid: System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Data.Binding.ConverterCulture
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
  fullName: System.Windows.Data.Binding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.Binding.ConverterParameter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
  fullName: System.Windows.Data.Binding.ConverterParameter
- uid: System.Windows.Data.Binding.DoNothing
  parent: System.Windows.Data.Binding
  isExternal: false
  name: DoNothing
  nameWithType: Binding.DoNothing
  fullName: System.Windows.Data.Binding.DoNothing
- uid: System.Windows.Data.Binding.ElementName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
  fullName: System.Windows.Data.Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager(DependencyObject)
  nameWithType: Binding.GetXmlNamespaceManager(DependencyObject)
  fullName: System.Windows.Data.Binding.GetXmlNamespaceManager(DependencyObject)
- uid: System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Windows.Data.Binding.IndexerName
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IndexerName
  nameWithType: Binding.IndexerName
  fullName: System.Windows.Data.Binding.IndexerName
- uid: System.Windows.Data.Binding.IsAsync
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
  fullName: System.Windows.Data.Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
  fullName: System.Windows.Data.Binding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
  fullName: System.Windows.Data.Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
  fullName: System.Windows.Data.Binding.Path
- uid: System.Windows.PropertyPath
  parent: System.Windows
  isExternal: false
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: System.Windows.PropertyPath
- uid: System.Windows.Data.Binding.RelativeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
  fullName: System.Windows.Data.Binding.RelativeSource
- uid: System.Windows.Data.RelativeSource
  parent: System.Windows.Data
  isExternal: false
  name: RelativeSource
  nameWithType: RelativeSource
  fullName: System.Windows.Data.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveSourceUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  nameWithType: Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
  fullName: System.Windows.Data.Binding.RemoveTargetUpdatedHandler(DependencyObject,EventHandler<DataTransferEventArgs>)
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  nameWithType: Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
  fullName: System.Windows.Data.Binding.SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)
- uid: System.Windows.Data.Binding.ShouldSerializePath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath()
  nameWithType: Binding.ShouldSerializePath()
  fullName: System.Windows.Data.Binding.ShouldSerializePath()
- uid: System.Windows.Data.Binding.ShouldSerializeSource
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource()
  nameWithType: Binding.ShouldSerializeSource()
  fullName: System.Windows.Data.Binding.ShouldSerializeSource()
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: Binding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.Binding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.Binding.Source
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
  fullName: System.Windows.Data.Binding.Source
- uid: System.Windows.Data.Binding.SourceUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SourceUpdatedEvent
  nameWithType: Binding.SourceUpdatedEvent
  fullName: System.Windows.Data.Binding.SourceUpdatedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Data.Binding.TargetUpdatedEvent
  parent: System.Windows.Data.Binding
  isExternal: false
  name: TargetUpdatedEvent
  nameWithType: Binding.TargetUpdatedEvent
  fullName: System.Windows.Data.Binding.TargetUpdatedEvent
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.Binding.UpdateSourceTrigger
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
  fullName: System.Windows.Data.Binding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
  fullName: System.Windows.Data.Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
  fullName: System.Windows.Data.Binding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.Binding.XmlNamespaceManagerProperty
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XmlNamespaceManagerProperty
  nameWithType: Binding.XmlNamespaceManagerProperty
  fullName: System.Windows.Data.Binding.XmlNamespaceManagerProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.Binding.XPath
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
  fullName: System.Windows.Data.Binding.XPath
- uid: System.Windows.Data.Binding.#ctor*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Binding
  nameWithType: Binding.Binding
- uid: System.Windows.Data.Binding.AddSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddSourceUpdatedHandler
  nameWithType: Binding.AddSourceUpdatedHandler
- uid: System.Windows.Data.Binding.AddTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AddTargetUpdatedHandler
  nameWithType: Binding.AddTargetUpdatedHandler
- uid: System.Windows.Data.Binding.AsyncState*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: AsyncState
  nameWithType: Binding.AsyncState
- uid: System.Windows.Data.Binding.BindsDirectlyToSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: BindsDirectlyToSource
  nameWithType: Binding.BindsDirectlyToSource
- uid: System.Windows.Data.Binding.Converter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Converter
  nameWithType: Binding.Converter
- uid: System.Windows.Data.Binding.ConverterCulture*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterCulture
  nameWithType: Binding.ConverterCulture
- uid: System.Windows.Data.Binding.ConverterParameter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ConverterParameter
  nameWithType: Binding.ConverterParameter
- uid: System.Windows.Data.Binding.ElementName*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ElementName
  nameWithType: Binding.ElementName
- uid: System.Windows.Data.Binding.GetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: GetXmlNamespaceManager
  nameWithType: Binding.GetXmlNamespaceManager
- uid: System.Windows.Data.Binding.IsAsync*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: IsAsync
  nameWithType: Binding.IsAsync
- uid: System.Windows.Data.Binding.Mode*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Mode
  nameWithType: Binding.Mode
- uid: System.Windows.Data.Binding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: Binding.NotifyOnSourceUpdated
- uid: System.Windows.Data.Binding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: Binding.NotifyOnTargetUpdated
- uid: System.Windows.Data.Binding.NotifyOnValidationError*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: Binding.NotifyOnValidationError
- uid: System.Windows.Data.Binding.Path*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Path
  nameWithType: Binding.Path
- uid: System.Windows.Data.Binding.RelativeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RelativeSource
  nameWithType: Binding.RelativeSource
- uid: System.Windows.Data.Binding.RemoveSourceUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveSourceUpdatedHandler
  nameWithType: Binding.RemoveSourceUpdatedHandler
- uid: System.Windows.Data.Binding.RemoveTargetUpdatedHandler*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: RemoveTargetUpdatedHandler
  nameWithType: Binding.RemoveTargetUpdatedHandler
- uid: System.Windows.Data.Binding.SetXmlNamespaceManager*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: SetXmlNamespaceManager
  nameWithType: Binding.SetXmlNamespaceManager
- uid: System.Windows.Data.Binding.ShouldSerializePath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializePath
  nameWithType: Binding.ShouldSerializePath
- uid: System.Windows.Data.Binding.ShouldSerializeSource*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeSource
  nameWithType: Binding.ShouldSerializeSource
- uid: System.Windows.Data.Binding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: Binding.ShouldSerializeValidationRules
- uid: System.Windows.Data.Binding.Source*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: Source
  nameWithType: Binding.Source
- uid: System.Windows.Data.Binding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: Binding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.Binding.UpdateSourceTrigger*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: Binding.UpdateSourceTrigger
- uid: System.Windows.Data.Binding.ValidatesOnDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: Binding.ValidatesOnDataErrors
- uid: System.Windows.Data.Binding.ValidatesOnExceptions*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: Binding.ValidatesOnExceptions
- uid: System.Windows.Data.Binding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: Binding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.Binding.ValidationRules*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: ValidationRules
  nameWithType: Binding.ValidationRules
- uid: System.Windows.Data.Binding.XPath*
  parent: System.Windows.Data.Binding
  isExternal: false
  name: XPath
  nameWithType: Binding.XPath
