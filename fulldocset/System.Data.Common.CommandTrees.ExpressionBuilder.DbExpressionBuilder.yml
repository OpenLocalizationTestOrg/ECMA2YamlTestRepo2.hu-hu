### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  id: DbExpressionBuilder
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  langs:
  - csharp
  name: DbExpressionBuilder
  nameWithType: DbExpressionBuilder
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  type: Class
  summary: "Biztosít egy API-t összeállításához <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s, és lehetővé teszi, hogy elérhetőek, mint maga kifejezés típusának kiterjesztésmetódusok API."
  syntax:
    content: public static class DbExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "A függvény, amely meghatározza a teljes műveletet."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A argumentum, amelyben az aggregate függvényt kell kiszámítani."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "A megadott függvény és argumentum hivatkozást összesített egy új függvényt. A függvény összesítés különböző tulajdonság értéke lesz <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>vagy <code>argument</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>nem egy összesítő függvényben vagy egynél több argumentumot vagy az eredménytípus <code>argument</code> nincs egyenlő vagy előléptethetőnek paraméter típusának <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionAggregate&quot;> </xref> , amely eltérő módon van alkalmazva."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "A függvény, amely meghatározza a teljes műveletet."
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A argumentum, amelyben az aggregate függvényt kell kiszámítani."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: "A megadott függvény és argumentum hivatkozást összesített egy új függvényt. A függvény összesítés különböző tulajdonság értéke lesz <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>vagy <code>argument</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>function</code>nem egy összesítő függvényben vagy egynél több argumentumot vagy az eredménytípus <code>argument</code> nincs egyenlő vagy előléptethetőnek paraméter típusának <code>function</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> , amely meghatározza, hogy rendelkezik-e az adott predikátum összes elemhez a beviteli készletben."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum képviselő módszer.    Ez a módszer egy kifejezés eredményének logikai típusúnak típusú, amely a predikátum programot kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Új DbQuantifierExpression, amely az összes műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> predicate </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> Predicate </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> , amely meghatározza, hogy rendelkezik-e az adott predikátum összes elemhez a beviteli készletben."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum jelző kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Új DbQuantifierExpression, amely az összes műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>predicate</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy <xref href=&quot;System.Data.Common.CommandTrees.DbAndExpression&quot;> </xref> , amely a logikai és a bal és jobb argumentumok hajt végre."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy logikai kifejezés, amely megadja a bal oldali argumentumához."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy logikai kifejezés, amely megadja a jobb oldali argumentumának."
    return:
      type: System.Data.Common.CommandTrees.DbAndExpression
      description: "Új dbandexpression kifejezés a megadott argumentumokkal."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>és <code>right</code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  id: Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a megadott argumentum nem lehet üres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> egy új alkalmazott <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> a megadott argumentum."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> , amely meghatározza, hogy rendelkezik-e az adott predikátum bármely eleméhez a beviteli készletben."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum képviselő módszer. Ez a módszer egy kifejezés eredményének logikai típusúnak típusú, amely a predikátum programot kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Új DbQuantifierExpression, amely az összes műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> predicate </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> predicate </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbQuantifierExpression&quot;> </xref> , amely meghatározza, hogy rendelkezik-e az adott predikátum bármely eleméhez a beviteli készletben."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum jelző kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: "Új DbQuantifierExpression, amely az összes műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>predicate</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> predicate </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  id: As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "A kulcs/érték pár objektumként adja vissza a megadott argumentumok."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbAggregate
      description: "A kulcs/érték pár értéke."
    - id: alias
      type: System.String
      description: "A kulcsot a kulcs/érték párok."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
      description: "A kulcs/érték pár objektum."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "A kulcs/érték pár objektumként adja vissza a megadott argumentumok."
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kulcs/érték pár értéke."
    - id: alias
      type: System.String
      description: "A kulcsot a kulcs/érték párok."
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
      description: "A kulcs/érték pár objektum."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  id: Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> kötést létrehozni a megadott kifejezésnek egy generált változó neve, amely használja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kötési kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy új kifejezés kötés a megadott kifejezés és egy generált változónevet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>Nincs gyűjtemény eredményt."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely a megadott változónév használ kötést létrehozni a megadott kifejezésnek"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kötési kifejezés."
    - id: varName
      type: System.String
      description: "A változó nevét a kötéshez használandó."
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy új kifejezés kötés a megadott kifejezés és a változó nevét."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>varName</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>Nincs gyűjtemény eredményt."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbCaseExpression&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);
    parameters:
    - id: whenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Adja meg az egyes esetek a feltételes kifejezések listáját."
    - id: thenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A kifejezések listáját, amely minden esetben az eredmények."
    - id: elseExpression
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Amikor nem egyezik az eredmény meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbCaseExpression
      description: "Egy új dbcaseexpression kifejezés azonos a megadott esetek és az alapértelmezett eredmény."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>whenExpressions</code>vagy <code>thenExpressions</code> null vagy üres, tartalmaz vagy <code>elseExpression</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>whenExpressions</code>vagy <code>thenExpressions</code> üres vagy <code>whenExpressions</code> tartalmaz egy nem logikai típusú vagy a nem általános típusú kifejezés létezik-e az összes kifejezést <code>thenExpressions</code> és <code>elseExpression</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbCastExpression&quot;> </xref> polimorf argumentum egy típuskonverzió művelet, amely vonatkozik."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Az argumentum, amely a leadott alkalmazni szeretné."
    - id: toType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Írja be a metaadatokat, amelyek az adja meg a típusúvá."
    return:
      type: System.Data.Common.CommandTrees.DbCastExpression
      description: "A megadott argumentum és a cél típussal rendelkező új DbCastExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>vagy <code>toType</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A megadott típuskonverzió érvénytelen."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> az adott állandó értékkel."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A konstans érték ábrázolásához."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "A megadott értékkel rendelkező új DbConstantExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>nincs érvényes konstans típusú példány."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  id: Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> a megadott primitív típus az adott állandó értékkel."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);
    parameters:
    - id: constantType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A konstans típusa."
    - id: value
      type: System.Object
      description: "A konstans érték ábrázolásához."
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "A megadott érték és egy eredménytípusa új DbConstantExpression <code> constantType </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>vagy <code>constantType</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>Nincs olyan érvényes konstans típusú példány <code>constantType</code> nem határoz meg egy egyszerű típusú vagy <code>value</code> által képviselt mint egy másik egyszerű típusú <code>constantType</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás értékek alapján mutató hivatkozás kódolja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás, állítsa be, amelyben a hivatkozott elem található."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A gyűjtemény <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s kulcs értékeket. Ezek a kifejezések (a száma, típusa és sorrendben) meg kell egyeznie a hivatkozott entitástípusú kulcstulajdonságok."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott értékeit az adott entitáskészlet elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>NULL értékű, vagy <code>keyValues</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> keyValues </code> nem egyezik meg a deklarál kulcstagok száma a <code> entitySet </code>tartozó elem típusa, vagy <code> keyValues </code> eredmény típusú, amely nem felel meg a megfelelő kulcstagja használó kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás értékek alapján mutató hivatkozás kódolja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás, állítsa be, amelyben a hivatkozott elem található."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "A gyűjtemény <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s kulcs értékeket. Ezek a kifejezések (a száma, típusa és sorrendben) meg kell egyeznie a hivatkozott entitástípusú kulcstulajdonságok."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott értékeit az adott entitáskészlet elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>NULL értékű, vagy <code>keyValues</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> keyValues </code> nem egyezik meg a deklarál kulcstagok száma a <code> entitySet </code>tartozó elem típusa, vagy <code> keyValues </code> eredmény típusú, amely nem felel meg a megfelelő kulcstagja használó kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás egy adott típusú értékek alapján mutató hivatkozás kódolja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás, állítsa be, amelyben a hivatkozott elem található."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "A hivatkozott entitás típusát. Ez az entitáskészlet elemtípus a hierarchiából származó entitás típusúnak kell lennie."
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A gyűjtemény <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s kulcs értékeket. Ezek a kifejezések (a száma, típusa és sorrendben) meg kell egyeznie a hivatkozott entitástípusú kulcstulajdonságok."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott értékeit az adott entitáskészlet elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>vagy <code>entityType</code> értéke null, vagy <code>keyValues</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> keyValues </code> nem egyezik meg a deklarál kulcstagok száma a <code> entitySet </code>tartozó elem típusa, vagy <code> keyValues </code> eredmény típusú, amely nem felel meg a megfelelő kulcstagja használó kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás egy adott típusú értékek alapján mutató hivatkozás kódolja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás, állítsa be, amelyben a hivatkozott elem található."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "A hivatkozott entitás típusát. Ez az entitáskészlet elemtípus a hierarchiából származó entitás típusúnak kell lennie."
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "A gyűjtemény <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>s kulcs értékeket. Ezek a kifejezések (a száma, típusa és sorrendben) meg kell egyeznie a hivatkozott entitástípusú kulcstulajdonságok."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott értékeit az adott entitáskészlet elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>vagy <code>entityType</code> értéke null, vagy <code>keyValues</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> keyValues </code> nem egyezik meg a deklarál kulcstagok száma a <code> entitySet </code>tartozó elem típusa, vagy <code> keyValues </code> eredmény típusú, amely nem felel meg a megfelelő kulcstagja használó kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> , amely kiértékeli a megadott <code> apply </code> egyszer minden elem egy adott bemeneti kifejezést, és megfelelő bevitellel sorok gyűjteménye, és alkalmazni oszlopok. Sorok, amelyekre <code> apply </code> értékelődik ki üres nem tartoznak."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Egy metódus, amely meghatározza a beviteli készletben minden tagjánál egyszer kiértékelése a programot."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "A megadott egy új dbapplyexpression kifejezés bemeneti és alkalmazási kötései és egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> CrossApply a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Eredményét <code> apply </code> tartalmaz egy név vagy kifejezés, amelynek értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Eredményét <code> apply </code> neve vagy egy kifejezés kötés érvénytelen kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> , amely kiértékeli a megadott <code> apply </code> egyszer minden elem egy adott bemeneti kifejezést, és megfelelő bevitellel sorok gyűjteménye, és alkalmazni oszlopok. Sorok, amelyekre <code> apply </code> értékelődik ki üres nem tartoznak."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja, hogy a beviteli készletben minden tagjánál egyszer értékeléséhez logikájának."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "A megadott egy új dbapplyexpression kifejezés bemeneti és alkalmazási kötései és egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> CrossApply a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>apply</code> null értékű."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbCrossJoinExpression&quot;> </xref> csatlakozó feltétel nélkül a megadott bemeneti kifejezést kötések listája készletek."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);
    parameters:
    - id: inputs
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
      description: "Egy kifejezés kötések listája, amely meghatározza a bemeneti készlet."
    return:
      type: System.Data.Common.CommandTrees.DbCrossJoinExpression
      description: "Egy új DbCrossJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a CrossJoin, amely a bemeneti készletek feltétel nélküli illesztés jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>inputs</code>NULL értékű, vagy null elemet tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>inputs</code>kevesebb mint 2 kifejezés kötéseket tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  id: Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbDerefExpression&quot;> </xref> , amely egy adott entitás egy hivatkozáskifejezésében megadott kéri le."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely biztosítja, hogy a hivatkozás. Ebben a kifejezésben rendelkeznie kell egy referencia típus."
    return:
      type: System.Data.Common.CommandTrees.DbDerefExpression
      description: "Egy új dbderefexpression kifejezés, amely lekéri a megadott entitás."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik egy referencia típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  id: Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbDistinctExpression&quot;> </xref> ismétlődések, hogy eltávolítja az adott argumentum."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A készlet keresztül, amely definiálja a különálló műveletet hajtson végre kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbDistinctExpression
      description: "Új DbDistinctExpression, amely a különböző művelet a megadott argumentum alkalmazott jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely felosztja a bal oldali argumentumának által a jobb oldali argumentumának."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A felosztás műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös numerikus eredménytípus van között <code> left </code> vagy <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  id: Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbElementExpression&quot;> </xref> egy alakítja, amely egypéldányos."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbElementExpression
      description: "Az argumentum átalakítása egyszeres jelölő DbElementExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely összehasonlítja a bal és jobb argumentumok az egyezés keresésekor."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új a dbcomparisonexpression kifejezés képviselő az egyenlőségi összehasonlítást."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös egyenlőség összehasonlítható típusú között van <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExceptExpression&quot;> </xref> , amely kiszámítja a kivonás a megfelelő argumentum a bal oldali set argumentum."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali meghatározó kifejezés argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali meghatározó kifejezés argumentum beállítása."
    return:
      type: System.Data.Common.CommandTrees.DbExceptExpression
      description: "Új DbExceptExpression kifejezés bal oldali argumentumához eltérés jobb oldali argumentumának jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem gyűjtemény közös eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  id: Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a megadott argumentum nem lehet üres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> egy új alkalmazott <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> a megadott argumentum."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  id: "False"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Lekérdezi a <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> logikai értékű <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> logikai értékű <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> , amely az elemek a megadott bemeneti adatok a megadott predikátum segítségével szűri."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum jelző kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "Új DbFilterExpression, amely a szűrt létrejön."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>predicate</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>predicate</code>nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> a beállítása, a bal és jobb-kifejezések által definiált, a megadott illesztési feltétel, mint FullOuterJoin használatával csatlakozik, amely a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A feltételt, amelyre csatlakozni képviselő módszer. Ez a módszer egy kifejezés eredményének logikai típusúnak típusú az illesztési feltétel logikát biztosító kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a FullOuterJoin, a teljes külső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> joinCondition </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> joinCondition </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> , amely csatlakozik a megadott kifejezés bal és jobb kötéseket, a megadott illesztési feltétel, mint FullOuterJoin használatával készletek a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy kifejezés, amely meghatározza a feltételt, amelyre való csatlakozáshoz."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a FullOuterJoin, a teljes külső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> joinCondition </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbEntityRefExpression&quot;> </xref> , amely lekérdezi a megadott entitás strukturális formában ref."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kifejezés, amely az entitás. A kifejezés eredménye entitástípusú kell rendelkeznie."
    return:
      type: System.Data.Common.CommandTrees.DbEntityRefExpression
      description: "Új DbEntityRefExpression, amely lekéri a megadott entitás mutató hivatkozás."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>egy entitás eredménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefKeyExpression&quot;> </xref> , amely lekérdezi a megadott hivatkozás strukturális formában értékek."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kifejezés, amely a hivatkozást. A kifejezés egy hivatkozást egy entitásra elem típussal rendelkező kell rendelkeznie."
    return:
      type: System.Data.Common.CommandTrees.DbRefKeyExpression
      description: "Egy új dbrefkeyexpression kifejezés, amely lekéri a megadott hivatkozás értékek."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik egy referencia típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely meghatározza, hogy a bal oldali argumentumának nagyobb, mint a jobb oldali argumentumának."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új dbcomparisonexpression kifejezés a nagyobb képviselő-mint összehasonlítása."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös-hasonlítható összes a sorrend eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely meghatározza, hogy a bal oldali argumentumának nagyobb vagy egyenlő a megfelelő argumentumba való."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új a dbcomparisonexpression kifejezés a nagyobb, mint-vagy-egyenlő-közötti összehasonlítás jelző."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös-hasonlítható összes a sorrend eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  id: GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új csoport kifejezés kötés által használt létrehozott változó és csoportváltozónevek kötést létrehozni a megadott kifejezésnek."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kötési kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "Új csoport kifejezés kötés a megadott kifejezés és egy olyan létrehozott változó nevét és a csoport változó neve."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> a megadott változónév és csoportváltozónevek használó kötést létrehozni a megadott kifejezésnek."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A kötési kifejezés."
    - id: varName
      type: System.String
      description: "A változó nevét a kötéshez használandó."
    - id: groupVarName
      type: System.String
      description: "A változó neve, amelynek használatával az új csoport kifejezés kötés csoportosítási kifejezésben használata esetén tekintse meg a csoport."
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "Egy új csoport kifejezés kötés a megadott kifejezésben, a változó nevét és a csoport változó neve."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>,  <code>varName</code> or <code>groupVarName</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>input</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbGroupByExpression&quot;> </xref> , amely szerint a megadott csoportkulcsok beállítva a bemeneti elemek csoportnak, és alkalmazza a megadott összesítések."
  remarks: "Dbgroupaggregate lehetővé teszi, hogy a listán szereplő kulcsokra vagy összesítések lehet üres, de nem mindkettőt listáját."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbGroupExpressionBinding&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "A csoportosító oszlopokra meghatározó karakterlánc-kifejezés párok listáját."
    - id: aggregates
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
      description: "Aggregátumok alkalmazandó megadó kifejezések listáját."
    return:
      type: System.Data.Common.CommandTrees.DbGroupByExpression
      description: "A megadott beviteli készletben, a csoportosítás kulcsokkal és az összesítések egy új Dbgroupaggregate."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>keys</code> vagy <code>aggregates</code> értéke null, <code>keys</code> tartalmaz egy NULL értékű kulcs vagy egy kifejezés, vagy <code>aggregates</code> null összesített oszlop neve vagy összesítést tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Mindkét <code> keys </code> és <code> aggregates </code> üres vagy érvénytelen vagy ismétlődő oszlopnév van megadva."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> a beállítása, a bal és jobb-kifejezések által definiált, a megadott illesztési feltétel, mint InnerJoin használatával csatlakozik, amely a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A feltételt, amelyre csatlakozni képviselő módszer. Ez a módszer egy kifejezés eredményének logikai típusúnak típusú az illesztési feltétel logikát biztosító kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a InnerJoin, a belső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> joinCondition </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> joinCondition </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> , amely csatlakozik a megadott kifejezés bal és jobb kötéseket, a megadott illesztési feltétel, mint InnerJoin használatával készletek a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy kifejezés, amely meghatározza a feltételt, amelyre való csatlakozáshoz."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a InnerJoin, a belső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbIntersectExpression&quot;> </xref> , amely kiszámítja a bal oldali metszetét és jobb argumentumok beállítása."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali meghatározó kifejezés argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali meghatározó kifejezés argumentum beállítása."
    return:
      type: System.Data.Common.CommandTrees.DbIntersectExpression
      description: "A bal és jobb argumentumok metszetét jelölő új DbIntersectExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem gyűjtemény közös eredménytípus van között <code> left </code> vagy <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> képviselő az alkalmazás a megadott Lambda függvény a megadott argumentumokkal."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> a Lambda függvényt képviselő példányt."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A kifejezések listáját, amelyek a argumentumot."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "A Lambda függvény alkalmazás jelölő új DbLambdaExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>vagy <code>arguments</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> arguments </code> nem egyenlő által deklarált változók számának <code> lambda </code>, vagy <code> arguments </code> , amely nem egyenlő vagy előléptethetőnek a megfelelő változótípus eredmény típusú kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLambdaExpression&quot;> </xref> képviselő az alkalmazás a megadott Lambda függvény a megadott argumentumokkal."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> a Lambda függvényt képviselő példányt."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Az argumentumot kifejezések."
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: "A Lambda függvény alkalmazás jelölő új DbLambdaExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>lambda</code>vagy <code>arguments</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> arguments </code> nem egyenlő által deklarált változók számának <code> lambda </code>, vagy <code> arguments </code> , amely nem egyenlő vagy előléptethetőnek a megfelelő változótípus eredmény típusú kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> képviselő a megadott függvény a megadott argumentumokkal meghívását."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "A metaadatok a függvény meghívásához."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A kifejezések listáját, amely a függvény argumentumot."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Egy új Függvénymetaadatok képviselő függvény meghívását."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>NULL értékű, vagy <code>arguments</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> arguments </code> által megadott paraméterek száma nem egyenlő <code> function </code>, vagy <code> arguments </code> , amely nem egyenlő vagy előléptethetőnek a megfelelő paraméter függvénytípus eredmény típussal kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> képviselő a megadott függvény a megadott argumentumokkal meghívását."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: "A metaadatok a függvény meghívásához."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "A függvény argumentumot kifejezések."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Egy új Függvénymetaadatok képviselő függvény meghívását."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>function</code>NULL értékű, vagy <code>arguments</code> üres vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A száma <code> arguments </code> által megadott paraméterek száma nem egyenlő <code> function </code>, vagy <code> arguments </code> , amely nem egyenlő vagy előléptethetőnek a megfelelő paraméter függvénytípus eredmény típussal kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbIsEmptyExpression&quot;> </xref> , amely meghatározza, hogy a megadott argumentum üres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbIsEmptyExpression
      description: "A megadott argumentum az új DbIsEmptyExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>eredmény gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  id: IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbIsNullExpression&quot;> </xref> , amely meghatározza, hogy a megadott argumentum null értékű."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Az argumentum meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbIsNullExpression
      description: "A megadott argumentum az új DbIsNullExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>egy gyűjtemény eredmény típussal rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> , amely meghatározza, hogy a megadott argumentum altípus vagy a megadott típusú."
  remarks: "DbIsOfExpression megköveteli, hogy `argument` olyan polimorf eredménytípusú kifejezésargumentumot, és hogy rendelkezik `type` az adott típusú típus hierarchiából származó típus."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány meghatározó kifejezés."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Írja be a metaadatokat, amelyek az adja meg, hogy a példány eredménytípus össze kell hasonlítani."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "A megadott példány és a típust és DbExpressionKind IsOf új DbIsOfExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>type</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>nincs a eredménytípusa azonos típusú hierarchiában <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbIsOfExpression&quot;> </xref> kifejezés, amely meghatározza, hogy a megadott argumentum van-e a megadott típus, és csak ilyen típusú (egy altípus nem)."
  remarks: "DbIsOfExpression megköveteli, hogy `argument` olyan polimorf eredménytípusú kifejezésargumentumot, és hogy rendelkezik `type` az adott típusú típus hierarchiából származó típus."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány meghatározó kifejezés."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Írja be a metaadatokat, amelyek az adja meg, hogy a példány eredménytípus össze kell hasonlítani."
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: "A megadott példány és a típust és DbExpressionKind IsOfOnly új DbIsOfExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>type</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>nincs a eredménytípusa azonos típusú hierarchiában <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> , amely csatlakozik a különböző, a külső és belső-kifejezések által definiált, a egy egyenlőségi feltétel, a megadott külső és belső kulcsokkal, mint InnerJoin használata között a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a külső argumentum."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a a belső argumentum értéke."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A metódus, amely meghatározza, hogyan a külső kulcs értékét kell származnia elem a külső csoport."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A metódus, amely meghatározza, hogyan a belső kulcsérték kell származnia elem a belső készlet."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a InnerJoin, amely a belső illesztés műveletet alkalmazza a bal és jobb oldali bemeneti beállítása, amely összehasonlítja a külső és belső kulcs érték azonosságát illesztési feltétel alapján jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> outerKey </code> vagy <code> innerKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezések által előállított <code> outerKey </code> és <code> innerKey </code> nincsenek összehasonlítható az egyezés keresésekor."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Fel kell venni a párbeszédpanelre."
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Fel kell venni a párbeszédpanelre."
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Fel kell venni a párbeszédpanelre."
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Fel kell venni a párbeszédpanelre."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> a megadott soron belüli Lambda az működjön a megvalósítás és a formális paraméter."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A Lambda függvény logika meghatározó kifejezés."
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> a formális paraméter a Lambda függvény képviselő gyűjteményt. Ezek a változók használható a rendszer a `body` kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Új DbLambda, amely egy Lambda függvény a megadott szervezet és a formális paraméterek a beágyazott ismerteti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>NULL értékű vagy üres, tartalmaz vagy <code>body</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>ugyanaz a változónév a egynél több elemet tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy <xref href=&quot;System.Data.Common.CommandTrees.DbLambda&quot;> </xref> a megadott soron belüli Lambda az működjön a megvalósítás és a formális paraméter."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A Lambda függvény logika meghatározó kifejezés."
    - id: variables
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> a formális paraméter a Lambda függvény képviselő gyűjteményt. Ezek a változók használható a rendszer a `body` kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: "Új DbLambda, amely egy Lambda függvény a megadott szervezet és a formális paraméterek a beágyazott ismerteti."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>variables</code>NULL értékű vagy üres, tartalmaz vagy <code>body</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>variables</code>ugyanaz a változónév a egynél több elemet tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> a beállítása, a bal és jobb-kifejezések által definiált, a megadott illesztési feltétel, mint LeftOuterJoin használatával csatlakozik, amely a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A feltételt, amelyre csatlakozni képviselő módszer. Ez a módszer egy kifejezés eredményének logikai típusúnak típusú az illesztési feltétel logikát biztosító kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a LeftOuterJoin, a bal oldali külső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> joinCondition </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> joinCondition </code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbJoinExpression&quot;> </xref> , amely csatlakozik a megadott kifejezés bal és jobb kötéseket, a megadott illesztési feltétel, mint LeftOuterJoin használatával készletek a <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja a bal oldali argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely meghatározza, hogy a jobb argumentum értéke."
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy kifejezés, amely meghatározza a feltételt, amelyre való csatlakozáshoz."
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: "Egy új DbJoinExpression rendelkező egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a LeftOuterJoin, a bal oldali külső illesztés művelet a megadott illesztési feltétel alapján a bal és jobb oldali bemeneti készletek alkalmazott jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>,  <code>right</code> or <code>joinCondition</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>joinCondition</code>nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely meghatározza, hogy a bal oldali argumentumának kisebb, mint a jobb oldali argumentumának."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új dbcomparisonexpression kifejezés a kevésbé képviselő-mint összehasonlítása."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös-hasonlítható összes a sorrend eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely meghatározza, hogy a bal oldali argumentumának kisebb vagy egyenlő, mint a jobb oldali argumentumának."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új a dbcomparisonexpression kifejezés a kevesebb mint-vagy-egyenlő-közötti összehasonlítás jelző."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös eredménytípus, amely mindkét egyenlőség - és -hasonlítható összes a sorrend között van <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> , amely összehasonlítja a megadott bemeneti karakterláncot az adott mintával."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bemeneti karakterlánc meghatározó kifejezés."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A minta karakterlánc meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "A megadott bemeneti, mintát és egy null escape új DbLikeExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Argument</code>vagy <code>pattern</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Argument</code>vagy <code>pattern</code> nem rendelkezik egy karakterlánc típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLikeExpression&quot;> </xref> , amely a megadott bemeneti karakterláncot az adott mintával használja a választható escape hasonlítja össze."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bemeneti karakterlánc meghatározó kifejezés."
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A minta karakterlánc meghatározó kifejezés."
    - id: escape
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Az escape-karakterlánc nem kötelező kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: "A megadott bemeneti érték, a minta és az escape új DbLikeExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>,   <code>pattern</code> or <code>escape</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>, <code>pattern</code> vagy <code>escape</code> nem rendelkezik egy karakterlánc típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> , amely korlátozza, hogy a megadott számnak határának megfelelő érték a argumentum gyűjteményben lévő elemek száma. A feltételekhez eredmények nem szerepelnek a kimenetet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy kifejezés, amely meghatározza a bemeneti gyűjteményben."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A határérték meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "A megadott argumentum és számának korlátja értékét egy új DbLimitExpression, amely tartalmazza az eredmények kötődik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>count</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik eredmény gyűjteménytípus, vagy <code>count</code> nincs megadva, amely egyenlő vagy előléptethetőnek egy 64 bites egész típusú eredményt típusa."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely csökkenti a bal oldali argumentumának a jobb oldali argumentumának."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A kivonás műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös numerikus eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely kiszámítja a fennmaradó része a bal oldali argumentumának a jobb oldali argumentumának hányadosa."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "Egy új DbArithmeticExpression képviselő a moduló műveletet."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös numerikus eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely szorozza meg a bal oldali argumentumának a jobb oldali argumentumban."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A szorzási műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös numerikus eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> az összeállítás vagy társítás kapcsolat navigációs jelző."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>megköveteli, hogy mindig navigációs fordulhat elő, a hivatkozást, és így `navigateFrom` mindig rendelkeznie kell egy referencia típusú.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);
    parameters:
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány, amelyből navigációs jöjjön létre meghatározó kifejezés."
    - id: fromEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "A metaadatok, amelyből navigációs jöjjön létre a kapcsolat végét jelölő tulajdonsághoz."
    - id: toEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "A metaadatok, amelyhez navigációs jöjjön létre a kapcsolat végét jelölő tulajdonsághoz."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "A megadott navigációs képviselő egy új DbRelationshipNavigationExpression a kezdő és a kapcsolat vége a megadott kapcsolattípus a megadott navigáció forrás példányból."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fromEnd</code>,  <code>toEnd</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromEnd</code>és <code>toEnd</code> ugyanazzal a kapcsolattípussal, amelyeket nem deklarál vagy <code>navigateFrom</code> eredmény típusa, amely nem kompatibilis a tulajdonság típusa <code>fromEnd</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  id: Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRelationshipNavigationExpression&quot;> </xref> az összeállítás vagy társítás kapcsolat navigációs jelző."
  remarks: "<xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>megköveteli, hogy mindig navigációs fordulhat elő, a hivatkozást, és így `navigateFrom` mindig rendelkeznie kell egy referencia típusú.</xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression>"
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.RelationshipType
      description: "A kapcsolat típusa kapcsolatot képviselő metaadatait."
    - id: fromEndName
      type: System.String
      description: "A kapcsolat típusát, amelyből navigációs jöjjön létre a kapcsolat végét jelölő tulajdonságának neve."
    - id: toEndName
      type: System.String
      description: "A kapcsolat típusát, amelyhez navigációs jöjjön létre a kapcsolat végét jelölő tulajdonságának neve."
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Kifejezés a határozza meg a példányt a mely naviagtion jöjjön létre."
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: "A megadott navigációs képviselő egy új DbRelationshipNavigationExpression a kezdő és a kapcsolat vége a megadott kapcsolattípus a megadott navigáció forrás példányból."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>,  <code>fromEndName</code>,  <code>toEndName</code> or <code>navigateFrom</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code>nincs társítva ebből a parancsfából metaadatok munkaterület vagy <code>navigateFrom</code> társítva egy másik parancsfa vagy <code>type</code> nevű kapcsolat end tulajdonság nem deklarálható <code>toEndName</code> vagy <code>fromEndName</code>, vagy <code>navigateFrom</code> eredmény típusa, amely nem kompatibilis a kapcsolat end tulajdonság tulajdonságtípusát <code>fromEndName</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  id: Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely az argumentum értékének ellentettjét adja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Az argumentum meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A negálás műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egyetlen numerikus típusú létezik <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Ha a típusargumentum gyűjteménytípus, az argumentumok megadása a gyűjtemény elemeinek. Ellenkező esetben az argumentumok tulajdonságához vagy oszlopához értékeket az új példány használatosak."
  remarks: "Ha `instanceType` van egy gyűjtemény írja be a majd minden kifejezés `arguments` eredmény típusú, amely elem típusának előléptethetőnek kell lennie a `instanceType`. Ha `instanceType` egy sor típusa `arguments` tartalmaznia kell annyi kifejezések sortípus oszlopok szerepelnek, és minden kifejezés eredménytípus kell lenniük egyenlő vagy előléptethetőnek a megfelelő oszlop típusának. Sor típusa nem deklarál oszlopokat érvénytelen. Ha `instanceType` egy entitás típus `arguments` kell tartalmaznia, mert sok kifejezés olyan tulajdonságok határozzák meg a típus, és minden kifejezés eredménytípus kell lenniük egyenlő vagy előléptethetőnek a megfelelő tulajdonság típusával."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Az új példány típusa."
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "Adja meg az új példányok, a példánytípus megfelelően értelmezi értékeket kifejezések."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "A megadott típust és az argumentumok új DbNewInstanceExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>vagy <code>arguments</code> értéke null, vagy <code>arguments</code> NULL értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>üres, vagy a tárolt eredményt típusú kifejezések nem egyezik a követelményeinek <code>instanceType</code> (ahogy a Megjegyzések szakaszt)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref>. Ha a típusargumentum gyűjteménytípus, az argumentumok megadása a gyűjtemény elemeinek. Ellenkező esetben az argumentumok tulajdonságához vagy oszlopához értékeket az új példány használatosak."
  remarks: "Ha `instanceType` van egy gyűjtemény írja be a majd minden kifejezés `arguments` eredmény típusú, amely elem típusának előléptethetőnek kell lennie a `instanceType`. Ha `instanceType` egy sor típusa `arguments` tartalmaznia kell annyi kifejezések sortípus oszlopok szerepelnek, és minden kifejezés eredménytípus kell lenniük egyenlő vagy előléptethetőnek a megfelelő oszlop típusának. Sor típusa nem deklarál oszlopokat érvénytelen. Ha `instanceType` egy entitás típus `arguments` kell tartalmaznia, mert sok kifejezés olyan tulajdonságok határozzák meg a típus, és minden kifejezés eredménytípus kell lenniük egyenlő vagy előléptethetőnek a megfelelő tulajdonság típusával."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Az új példány típusa."
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "Adja meg az új példányok, a példánytípus megfelelően értelmezi értékeket kifejezések."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "A megadott típust és az argumentumok új DbNewInstanceExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>instanceType</code>vagy <code>arguments</code> értéke null, vagy <code>arguments</code> NULL értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>arguments</code>üres, vagy a tárolt eredményt típusú kifejezések nem egyezik a követelményeinek <code>instanceType</code> (ahogy a Megjegyzések szakaszt)."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> , amely hoz létre a megadott elemek tartalmazó gyűjtemény. A gyűjtemény típusú elem a közös típusával alapul. Ha nincs közös elem típusa létezik-e a rendszer kivételt hoz létre."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: "A kifejezések listáját, amelyek a gyűjtemény elemeinek biztosítanak."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Egy új DbNewInstanceExpression megadott gyűjteménytípus és argumentumait."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>NULL értékű, vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>üres, vagy nincs közös eredménytípus létezik, amelynek kifejezéseket tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> , amely hoz létre a megadott elemek tartalmazó gyűjtemény. A gyűjtemény típusú elem a közös típusával alapul. Ha nincs közös elem típusa létezik-e a rendszer kivételt hoz létre."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);
    parameters:
    - id: elements
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: "A kifejezések listáját, amelyek a gyűjtemény elemeinek biztosítanak."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Egy új DbNewInstanceExpression megadott gyűjteménytípus és argumentumait."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>elements</code>NULL értékű, vagy null értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>elements</code>üres, vagy nincs közös eredménytípus létezik, amelynek kifejezéseket tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> , amely a megadott gyűjtemény típusú egy üres gyűjteményt hoz létre."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);
    parameters:
    - id: collectionType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A gyűjtemény létrehozásához típus metaadatai"
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "A megadott gyűjtemény típust és egy üres egy új DbNewInstanceExpression <code> Arguments </code> listája."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collectionType</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionType</code>nincs gyűjteménytípus."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNewInstanceExpression&quot;> </xref> , amely egy sort eredményez a megadott névvel ellátott oszlopok és megadott értékek, kifejezésként megadott."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);
    parameters:
    - id: columnValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Kulcs-érték pár karakterlánc-DbExpression listája, amely meghatározza a struktúra és a sor értékét."
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: "Egy új dbnewinstanceexpression kifejezés felépítése a sort jelölő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>columnValues</code>NULL értékű, vagy egy null oszlop vagy kifejezés rendelkező elemet tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>columnValues</code>üres, vagy egy érvénytelen vagy ismétlődő oszlop nevét tartalmazza."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  id: Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy <xref href=&quot;System.Data.Common.CommandTrees.DbNotExpression&quot;> </xref> , amely a megadott argumentum logikai negálást végez."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy logikai kifejezés, amely meghatározza a argumentum."
    return:
      type: System.Data.Common.CommandTrees.DbNotExpression
      description: "Új dbnotexpression kifejezés a megadott argumentum."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbComparisonExpression&quot;> </xref> , amely összehasonlítja egyenlőtlen bal és jobb argumentumai."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: "Egy új a dbcomparisonexpression kifejezés képviselő egyenlőtlen összehasonlítása."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös egyenlőség összehasonlítható típusú között van <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  id: Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbNullExpression&quot;> </xref>, amely jelenti, hogy típusos null értékű."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);
    parameters:
    - id: nullType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A null érték típusa."
    return:
      type: System.Data.Common.CommandTrees.DbNullExpression
      description: "DbNullExpression példánya."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nullType</code>értéke null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> , hogy vannak-e eredményez, amely a megadott bemeneti elemből álló készletet állítsa be a megadott típusú."
  remarks: "DbOfTypeExpression megköveteli, hogy `argument` gyűjteményével rendelkezik olyan polimorf elemtípussal, és hogy eredménytípus `type` az adott elem típusa típus hierarchiából származó típus."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Adja meg a beviteli készletben elemeinek rendelkeznie kell szerepeltetni eredő típus metaadatai."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "A megadott argumentum és a típust és egy ExpressionKind, egy új DbOfTypeExpression <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>type</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik eredmény gyűjteménytípus, vagy <code>type</code> típus egy gyűjtemény eredménytípusa elem típusaként hierarchia típus <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbOfTypeExpression&quot;> </xref> , hogy vannak-e egy értéke a megadott bemeneti elemből álló állítja be, amely előállított pontosan a megadott típusú."
  remarks: "DbOfTypeExpression megköveteli, hogy `argument` gyűjteményével rendelkezik olyan polimorf elemtípussal, és hogy eredménytípus `type` az adott elem típusa típus hierarchiából származó típus."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Írja be a metaadatok eredő szerepeltetni elemei a bemeneti készlet pontosan egyezniük kell típushoz."
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: "A megadott argumentum és a típust és egy ExpressionKind, egy új DbOfTypeExpression <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>type</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik eredmény gyűjteménytípus, vagy <code>type</code> típus egy gyűjtemény eredménytípusa elem típusaként hierarchia típus <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy <xref href=&quot;System.Data.Common.CommandTrees.DbOrExpression&quot;> </xref> , amely a logikai és a bal és jobb argumentumok hajt végre."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy logikai kifejezés, amely megadja a bal oldali argumentumához."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy logikai kifejezés, amely megadja a jobb oldali argumentumának."
    return:
      type: System.Data.Common.CommandTrees.DbOrExpression
      description: "Új dborexpression kifejezés a megadott argumentumokkal."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>left</code>vagy <code>right</code> nincs a logikai típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely a megadott bemeneti állítja be a megadott rendezési kulcsot, rendezési sorrendjét és az alapértelmezett Rendezés növekvő sorrendben rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely a rendezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely a megadott bemeneti állítja be a megadott rendezési kulcsot, rendezési sorrendjét és a megadott Rendezés növekvő sorrendben rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely a rendezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik olyan-hasonlítható összes a sorrend karakterlánc típusú."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely a megadott bemeneti állítja be a megadott rendezési kulcsot, rendezési sorrendjét és alapértelmezett rendezése csökkenő rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely a rendezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely a megadott bemeneti állítja be a megadott rendezési kulcsot, rendezési sorrendjét és a megadott Rendezés csökkenő rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely a rendezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik olyan-hasonlítható összes a sorrend karakterlánc típusú."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> , amely kiértékeli a megadott <code> apply </code> egyszer minden elem egy adott bemeneti kifejezést, és megfelelő bevitellel sorok gyűjteménye, és alkalmazni oszlopok. Sorok, amelyekre <code> apply </code> üres értékelődik ki egy alkalmaz oszlop értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: "Egy metódus, amely meghatározza a beviteli készletben minden tagjánál egyszer kiértékelése a programot."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "A megadott egy új dbapplyexpression kifejezés bemeneti és alkalmazási kötései és egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> OuterApply a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Eredményét <code> apply </code> tartalmaz egy név vagy kifejezés, amelynek értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Eredményét <code> apply </code> neve vagy egy kifejezés kötés érvénytelen kifejezést tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> , amely kiértékeli a megadott <code> apply </code> egyszer minden elem egy adott bemeneti kifejezést, és megfelelő bevitellel sorok gyűjteménye, és alkalmazni oszlopok. Sorok, amelyekre <code> apply </code> üres értékelődik ki egy alkalmaz oszlop értéke <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionBinding&quot;> </xref> , amely megadja, hogy a beviteli készletben minden tagjánál egyszer értékeléséhez logikájának."
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: "A megadott egy új dbapplyexpression kifejezés bemeneti és alkalmazási kötései és egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> OuterApply a."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>apply</code> null értékű."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> , amely hivatkozik a megadott nevű és típusú paraméterrel."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A hivatkozott paraméter típusa."
    - id: name
      type: System.String
      description: "A hivatkozott paraméter neve."
    return:
      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression
      description: "DbParameterReferenceExpression egy hivatkozás a megadott nevű és típusú paraméter. A kifejezés eredménytípus lesz azonos <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely a bal oldali argumentumának ad hozzá a megfelelő argumentumba való."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali argumentumának meghatározó kifejezés."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali argumentumának meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A hozzáadása műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös numerikus eredménytípus van között <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> , amely a megadott kifejezés projektek a megadott bemeneti készleten."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: projection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A készleten projekt kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Új DbProjectExpression, amely a leképezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>projection</code> null értékű."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> képviselő a megadott tulajdonság lekérése."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány olvassa be a tulajdonságot. NULL értékű, ha a tulajdonság statikus lehet."
    - id: propertyMetadata
      type: System.Data.Metadata.Edm.EdmProperty
      description: "A tulajdonság metaadatai beolvasása."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "A tulajdonság beolvasása jelölő új DbPropertyExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyMetadata</code>NULL értékű vagy <code>instance</code> null értékű, és a tulajdonság nem statikus."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> képviselő megadott navigálási tulajdonságának lekérése."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példányt, amelynek a navigálási tulajdonság beolvasása."
    - id: navigationProperty
      type: System.Data.Metadata.Edm.NavigationProperty
      description: "A navigálási tulajdonság metaadatai beolvasása."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "A navigációs tulajdonság beolvasása jelölő új DbPropertyExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>navigationProperty</code>vagy <code>instance</code> null értékű."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> képviselő a megadott kapcsolat end tag beolvasása."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példányt, amelynek a kapcsolat end tag beolvasása."
    - id: relationshipEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: "A kapcsolat end tag lekérdezni a metaadatokat."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "A kapcsolat end tag beolvasása jelölő új DbPropertyExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipEnd</code>NULL értékű vagy <code>instance</code> null értékű, és a tulajdonság nem statikus."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbPropertyExpression&quot;> </xref> képviselő a megadott névvel rendelkező példány tulajdonság lekérése az adott példányon."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány olvassa be a tulajdonságot."
    - id: propertyName
      type: System.String
      description: "A lekérdezni a tulajdonság nevét."
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: "A tulajdonság beolvasása jelölő új DbPropertyExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>NULL értékű vagy <code>instance</code> null értékű, és a tulajdonság nem statikus."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A megadott nevű tulajdonság típusa nem deklarál <code> instance </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás értékek alapján mutató hivatkozás kódolja."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás állítsa be, amelyben a hivatkozott elem található."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely hoz létre egy rekord (a száma, típusa és sorrendben) megfelelő oszlopok, a kulcs tulajdonságai a hivatkozott entitástípusú."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott entitás készletben található megadott értékek elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>vagy <code>keyRow</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>keyRow</code>nem rendelkezik egy rekord típusú, amely megfelel a hivatkozott entitáskészlet entitástípusú kulcstulajdonságok."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbRefExpression&quot;> </xref> , amely egy adott entitás értékek alapján mutató hivatkozás kódolja."
  remarks: '`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set. The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet''s` entity type.'
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: "Az entitás állítsa be, amelyben a hivatkozott elem található."
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely hoz létre egy rekord (a száma, típusa és sorrendben) megfelelő oszlopok, a kulcs tulajdonságai a hivatkozott entitástípusú."
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: "A hivatkozás olvassa el az entitás típusa."
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: "Új DbRefExpression, amely a megadott entitás készletben található megadott értékek elemen hivatkozik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entitySet</code>,  <code>keyRow</code> or <code>entityType</code> is null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entityType</code>nincs az entitáskészlet entitástípus, azonos típusú hierarchiában vagy <code>keyRow</code> nem rendelkezik egy rekord típusú, amely megfelel a hivatkozott entitáskészlet entitástípusú kulcstulajdonságok."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  id: Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbScanExpression&quot;> </xref> , amely a megadott entitás vagy a kapcsolat beállítása hivatkozik."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);
    parameters:
    - id: targetSet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: "Az entitás vagy a kapcsolat beállítása hivatkozhat metaadatait."
    return:
      type: System.Data.Common.CommandTrees.DbScanExpression
      description: "Egy új DbScanExpression alapján a megadott entitás vagy a kapcsolat."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetSet</code>értéke null."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  id: Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Fel kell venni a párbeszédpanelre."
    - id: projection
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbApplyExpression&quot;> </xref> , amely kiértékeli a megadott <code> apply </code> egyszer minden elem egy adott bemeneti kifejezést, és megfelelő bevitellel sorok gyűjteménye, és alkalmazni oszlopok. Sorok, amelyekre <code> apply </code> értékelődik ki üres nem tartoznak. A <xref href=&quot;System.Data.Common.CommandTrees.DbProjectExpression&quot;> </xref> majd jön létre, hogy választja ki a <code> apply </code> oszlop alapján minden egyes sorára, és a teljes gyűjteményét <code> apply </code> eredmények."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely megadja, hogy a beviteli készletben."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Ez a módszer jelenti. a programot a beviteli készletben minden tagjánál egyszer kiértékeléséhez."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Egy új DbProjectExpression, amely a megadott bemeneti és az alkalmazás definiált kötésekkel választja ki a alkalmaz oszlop egy új dbapplyexpression kifejezés és egy <xref href=&quot;System.Data.Common.CommandTrees.DbExpressionKind&quot;> </xref> a CrossApply."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> apply </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> apply </code> gyűjteménytípus nem rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Fel kell venni a párbeszédpanelre."
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Fel kell venni a párbeszédpanelre."
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: "Fel kell venni a párbeszédpanelre."
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: "Fel kell venni a párbeszédpanelre."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> , amely kihagyja a megadott számú elemet az adott rendezett bemeneti készlet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely megadja, hogy a rendezett bemeneti készlet."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Kifejezés a kihagyását rendezett sorozata hány elemeinek határozza meg."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "Új DbSkipExpression, amely a skip műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>count</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>nem <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> vagy <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> vagy, amely nem egyenlő vagy előléptethetőnek egy 64 bites egész típusú eredményt típussal rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSkipExpression&quot;> </xref> , amely a megadott bemeneti előtt a rendszer kihagyja a megadott számú elemet a megadott rendezési specifikációk által beállított rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "Rendezés specifikációk, amelyek meghatározzák, hogyan kell rendezni a beviteli készletben elemeinek listáját."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Kifejezés a kihagyását rendezett sorozata hány elemeinek határozza meg."
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: "Új DbSkipExpression, amely a skip műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>, <code>sortOrder</code> vagy <code>count</code> értéke null, vagy <code>sortOrder</code> NULL értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>üres, vagy <code>count</code> nem <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> vagy <xref href=&quot;System.Data.Common.CommandTrees.DbParameterReferenceExpression&quot;> </xref> vagy, amely nem egyenlő vagy előléptethetőnek egy 64 bites egész típusú eredményt típussal rendelkezik."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , amely a megadott bemeneti állítsa be a megadott rendezési előírások szerint rendezi."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: "Egy kötelező, adja meg a beviteli készletben."
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: "Rendezés specifikációk, amelyek meghatározzák, hogyan kell rendezni a beviteli készletben elemeinek listáját."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely a rendezési művelet jelöli."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>vagy <code>sortOrder</code> értéke null, vagy <code>sortOrder</code> NULL értéket tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortOrder</code>Nincs megadva."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbLimitExpression&quot;> </xref> , amely korlátozza, hogy a megadott számnak határának megfelelő érték a argumentum gyűjteményben lévő elemek száma. A feltételekhez eredmények nem szerepelnek a kimenetet."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy kifejezés, amely meghatározza a bemeneti gyűjteményben."
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A határérték meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: "A megadott argumentum és számának korlátja értékét egy új DbLimitExpression, amely tartalmazza az eredmények kötődik."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>count</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>argument</code>nem rendelkezik egy gyűjtemény eredménytípus <code>count</code> nincs megadva, amely egyenlő vagy előléptethetőnek egy 64 bites egész típusú eredményt típusa."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , hogy a rendezési sorrendet, amely tartalmazza a megadott sorrendben rendezési sorrendjének bemeneti készlet a megadott rendezési kulcsot és az alapértelmezett Rendezés növekvő sorrendben együtt."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Egy DbSortExpression, amely meghatározza a rendezett bemeneti készlet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott további rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely az új általános az order by műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sortKey</code>nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , hogy a rendezési sorrendet, amely tartalmazza a megadott sorrendben rendezési sorrendjének bemeneti készlet a megadott rendezési kulcsok és a megadott Rendezés növekvő sorrendben együtt."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Egy DbSortExpression, amely meghatározza a rendezett bemeneti készlet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott további rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely az új általános az order by műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik olyan-hasonlítható összes a sorrend karakterlánc típusú."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , hogy a rendezési sorrendet, amely tartalmazza a megadott sorrendben rendezési sorrendjének bemeneti készlet együtt a megadott rendezési kulcsok csökkenő sorrendbe és alapértelmezett rendezését."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Egy DbSortExpression, amely meghatározza a rendezett bemeneti készlet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott további rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely az új általános az order by műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortExpression&quot;> </xref> , hogy a rendezési sorrendet, amely tartalmazza a megadott sorrendben rendezési sorrendjének bemeneti készlet a megadott rendezési kulcsok csökkenő rendezés és a megadott rendezés együtt."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Egy DbSortExpression, amely meghatározza a rendezett bemeneti készlet."
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "Egy módszer, amelynek tagja a beviteli készletben megadott további rendezési kulcskifejezés származnia módját adja meg. Ez a módszer, amely a rendezési sorrend összehasonlítható eredmény típusú kifejezést kell bemutatniuk kulcs definícióját."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: "Új DbSortExpression, amely az új általános az order by műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> sortKey </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> sortKey </code> nem rendelkezik olyan-hasonlítható összes a sorrend karakterlánc típusú."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> egy növekvő rendezési sorrendjét és alapértelmezett rendezésével."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A rendezési kulcsot meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Egy új rendezési záradékot a megadott rendezési kulcsok és a növekvő."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> növekvő sorrendben rendezi és a megadott rendezés."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A rendezési kulcsot meghatározó kifejezés."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Egy új rendezési záradékot a megadott rendezési kulcsok és a rendezés és a növekvő sorrendben rendezi."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>értéke null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> csökkenő rendezés és alapértelmezett rendezésével."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A rendezési kulcsot meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Egy új rendezési záradékot a megadott rendezési kulcsok és a Rendezés csökkenő sorrendben."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbSortClause&quot;> </xref> csökkenő rendezési sorrendet és a megadott rendezés."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A rendezési kulcsot meghatározó kifejezés."
    - id: collation
      type: System.String
      description: "A rendezési sorrend szerinti rendezéséhez."
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: "Egy új rendezési záradékot a megadott rendezési kulcsok és a rendezés és a Rendezés csökkenő sorrendben."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>értéke null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>collation</code>üres, vagy csak szóközt tartalmaz."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code>nem rendelkezik egy rendelés összehasonlítható típusú."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbTreatExpression&quot;> </xref>."
  remarks: "DbTreatExpression megköveteli, hogy `argument` olyan polimorf eredménytípusú kifejezésargumentumot, és hogy rendelkezik `treatType` az adott típusú típus hierarchiából származó típus."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A példány meghatározó kifejezés."
    - id: treatType
      type: System.Data.Metadata.Edm.TypeUsage
      description: "Írja be a Treat utasítás a metaadat-típusként."
    return:
      type: System.Data.Common.CommandTrees.DbTreatExpression
      description: "A megadott argumentum és típusú új DbTreatExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>vagy <code>treatType</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>treatType</code>nincs a eredménytípusa azonos típusú hierarchiában <code>argument</code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  id: "True"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Lekérdezi a <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> logikai értékű <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: "A <xref href=&quot;System.Data.Common.CommandTrees.DbConstantExpression&quot;> </xref> logikai értékű <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbArithmeticExpression&quot;> </xref> , amely az argumentum értékének ellentettjét adja."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Az argumentum meghatározó kifejezés."
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: "A negálás műveletet képviselő új DbArithmeticExpression."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>argument</code>értéke null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Egyetlen numerikus típusú létezik <code> argument </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref> , amely kiszámítja a bal oldali unióját, és jobb argumentumok beállítása az ismétlődő értékek eltávolításával."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali meghatározó kifejezés argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali meghatározó kifejezés argumentum beállítása."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Egy új dbexpression objektumból, amely kiszámítja a union, anélkül, duplikált elemeket, az a a bal és jobb argumentumokkal."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös gyűjtemény eredménytípus egy egyenlőség összehasonlítható elemtípussal között van <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbUnionAllExpression&quot;> </xref> , amely az Unió a bal és jobb set argumentumok kiszámítja, és nem távolítja el a duplikált elemek."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A bal oldali meghatározó kifejezés argumentum beállítása."
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A jobb oldali meghatározó kifejezés argumentum beállítása."
    return:
      type: System.Data.Common.CommandTrees.DbUnionAllExpression
      description: "Egy új DbUnionAllExpression Uniót, az ismétlődéseket, beleértve a a bal és jobb argumentumokkal."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>left</code>vagy <code>right</code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nem közös gyűjtemény eredménytípus egy egyenlőség összehasonlítható elemtípussal között van <code> left </code> és <code> right </code>."
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbVariableReferenceExpression&quot;> </xref> , amely a megadott nevű és típusú változó hivatkozik."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: "A hivatkozott változó típusa."
    - id: name
      type: System.String
      description: "A hivatkozott változó neve."
    return:
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression
      description: "A megadott nevű és típusú változó hivatkozás jelölő DbVariableReferenceExpression. A kifejezés eredménytípus lesz azonos <code> type </code>."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Létrehoz egy új <xref href=&quot;System.Data.Common.CommandTrees.DbFilterExpression&quot;> </xref> , amely az elemek a megadott bemeneti adatok a megadott predikátum segítségével szűri."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: "A beviteli készletben meghatározó kifejezés."
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: "A bemeneti készlet minden egyes tagjára kiértékelendő predikátum képviselő módszer.    Ez a módszer egy kifejezés eredményének logikai típusúnak típusú, amely a predikátum programot kell eredményez."
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: "Új DbQuantifierExpression, amely az összes műveletet jelöl."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A kifejezés által előállított <code> predicate </code> null értékű."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A kifejezés által előállított <code> predicate </code> nincs a logikai típusú."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionAggregate
  nameWithType: DbFunctionAggregate
  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbAndExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAndExpression
  nameWithType: DbAndExpression
  fullName: System.Data.Common.CommandTrees.DbAndExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbAggregate>
  nameWithType: KeyValuePair<String,DbAggregate>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAggregate
  nameWithType: DbAggregate
  fullName: System.Data.Common.CommandTrees.DbAggregate
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
- uid: System.Data.Common.CommandTrees.DbCaseExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCaseExpression
  nameWithType: DbCaseExpression
  fullName: System.Data.Common.CommandTrees.DbCaseExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbCastExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCastExpression
  nameWithType: DbCastExpression
  fullName: System.Data.Common.CommandTrees.DbCastExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System
  isExternal: true
  name: Func<DbExpression,KeyValuePair<String,DbExpression>>
  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCrossJoinExpression
  nameWithType: DbCrossJoinExpression
  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbExpressionBinding>
  nameWithType: IEnumerable<DbExpressionBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpressionBinding
    name: DbExpressionBinding
    nameWithType: DbExpressionBinding
    fullName: DbExpressionBinding
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDerefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDerefExpression
  nameWithType: DbDerefExpression
  fullName: System.Data.Common.CommandTrees.DbDerefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDistinctExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDistinctExpression
  nameWithType: DbDistinctExpression
  fullName: System.Data.Common.CommandTrees.DbDistinctExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
- uid: System.Data.Common.CommandTrees.DbElementExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbElementExpression
  nameWithType: DbElementExpression
  fullName: System.Data.Common.CommandTrees.DbElementExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExceptExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExceptExpression
  nameWithType: DbExceptExpression
  fullName: System.Data.Common.CommandTrees.DbExceptExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
- uid: System.Data.Common.CommandTrees.DbEntityRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbEntityRefExpression
  nameWithType: DbEntityRefExpression
  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
- uid: System.Data.Common.CommandTrees.DbRefKeyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefKeyExpression
  nameWithType: DbRefKeyExpression
  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
- uid: System.Data.Common.CommandTrees.DbGroupByExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupByExpression
  nameWithType: DbGroupByExpression
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbExpression>>
  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,DbAggregate>>
  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbAggregate
    name: DbAggregate
    nameWithType: DbAggregate
    fullName: DbAggregate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbIntersectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIntersectExpression
  nameWithType: DbIntersectExpression
  fullName: System.Data.Common.CommandTrees.DbIntersectExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbLambdaExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambdaExpression
  nameWithType: DbLambdaExpression
  fullName: System.Data.Common.CommandTrees.DbLambdaExpression
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsEmptyExpression
  nameWithType: DbIsEmptyExpression
  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsNullExpression
  nameWithType: DbIsNullExpression
  fullName: System.Data.Common.CommandTrees.DbIsNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbIsOfExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsOfExpression
  nameWithType: DbIsOfExpression
  fullName: System.Data.Common.CommandTrees.DbIsOfExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,TSelector>
  nameWithType: Func<DbExpression,DbExpression,TSelector>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TSelector
    name: TSelector
    nameWithType: TSelector
    fullName: TSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbVariableReferenceExpression>
  nameWithType: IEnumerable<DbVariableReferenceExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
  spec.csharp:
  - uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
    name: DbVariableReferenceExpression
    nameWithType: DbVariableReferenceExpression
    fullName: DbVariableReferenceExpression[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLikeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLikeExpression
  nameWithType: DbLikeExpression
  fullName: System.Data.Common.CommandTrees.DbLikeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLimitExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLimitExpression
  nameWithType: DbLimitExpression
  fullName: System.Data.Common.CommandTrees.DbLimitExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRelationshipNavigationExpression
  nameWithType: DbRelationshipNavigationExpression
  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
- uid: System.Data.Metadata.Edm.RelationshipType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: System.Data.Metadata.Edm.RelationshipType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
- uid: System.Data.Common.CommandTrees.DbNotExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNotExpression
  nameWithType: DbNotExpression
  fullName: System.Data.Common.CommandTrees.DbNotExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
- uid: System.Data.Common.CommandTrees.DbNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNullExpression
  nameWithType: DbNullExpression
  fullName: System.Data.Common.CommandTrees.DbNullExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbOfTypeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOfTypeExpression
  nameWithType: DbOfTypeExpression
  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbOrExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOrExpression
  nameWithType: DbOrExpression
  fullName: System.Data.Common.CommandTrees.DbOrExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbParameterReferenceExpression
  nameWithType: DbParameterReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Metadata.Edm.EdmProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmProperty
  nameWithType: EdmProperty
  fullName: System.Data.Metadata.Edm.EdmProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
- uid: System.Data.Metadata.Edm.NavigationProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: NavigationProperty
  nameWithType: NavigationProperty
  fullName: System.Data.Metadata.Edm.NavigationProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
- uid: System.Data.Common.CommandTrees.DbScanExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbScanExpression
  nameWithType: DbScanExpression
  fullName: System.Data.Common.CommandTrees.DbScanExpression
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
  parent: System
  isExternal: true
  name: Func<DbExpression,TProjection>
  nameWithType: Func<DbExpression,TProjection>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbExpression
    name: DbExpression
    nameWithType: DbExpression
    fullName: DbExpression
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TProjection
    name: TProjection
    nameWithType: TProjection
    fullName: TProjection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<DbSortClause>
  nameWithType: IEnumerable<DbSortClause>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.CommandTrees.DbSortClause
    name: DbSortClause
    nameWithType: DbSortClause
    fullName: DbSortClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbTreatExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbTreatExpression
  nameWithType: DbTreatExpression
  fullName: System.Data.Common.CommandTrees.DbTreatExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbUnionAllExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbUnionAllExpression
  nameWithType: DbUnionAllExpression
  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate
  nameWithType: DbExpressionBuilder.Aggregate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct
  nameWithType: DbExpressionBuilder.AggregateDistinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All
  nameWithType: DbExpressionBuilder.All
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And
  nameWithType: DbExpressionBuilder.And
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any
  nameWithType: DbExpressionBuilder.Any
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As
  nameWithType: DbExpressionBuilder.As
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind
  nameWithType: DbExpressionBuilder.Bind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs
  nameWithType: DbExpressionBuilder.BindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case
  nameWithType: DbExpressionBuilder.Case
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo
  nameWithType: DbExpressionBuilder.CastTo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant
  nameWithType: DbExpressionBuilder.Constant
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef
  nameWithType: DbExpressionBuilder.CreateRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply
  nameWithType: DbExpressionBuilder.CrossApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin
  nameWithType: DbExpressionBuilder.CrossJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref
  nameWithType: DbExpressionBuilder.Deref
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct
  nameWithType: DbExpressionBuilder.Distinct
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide
  nameWithType: DbExpressionBuilder.Divide
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element
  nameWithType: DbExpressionBuilder.Element
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal
  nameWithType: DbExpressionBuilder.Equal
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except
  nameWithType: DbExpressionBuilder.Except
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists
  nameWithType: DbExpressionBuilder.Exists
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter
  nameWithType: DbExpressionBuilder.Filter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin
  nameWithType: DbExpressionBuilder.FullOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef
  nameWithType: DbExpressionBuilder.GetEntityRef
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey
  nameWithType: DbExpressionBuilder.GetRefKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan
  nameWithType: DbExpressionBuilder.GreaterThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind
  nameWithType: DbExpressionBuilder.GroupBind
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs
  nameWithType: DbExpressionBuilder.GroupBindAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy
  nameWithType: DbExpressionBuilder.GroupBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin
  nameWithType: DbExpressionBuilder.InnerJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect
  nameWithType: DbExpressionBuilder.Intersect
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke
  nameWithType: DbExpressionBuilder.Invoke
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty
  nameWithType: DbExpressionBuilder.IsEmpty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull
  nameWithType: DbExpressionBuilder.IsNull
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf
  nameWithType: DbExpressionBuilder.IsOf
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly
  nameWithType: DbExpressionBuilder.IsOfOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join
  nameWithType: DbExpressionBuilder.Join
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join<TSelector>
  nameWithType: DbExpressionBuilder.Join<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda
  nameWithType: DbExpressionBuilder.Lambda
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin
  nameWithType: DbExpressionBuilder.LeftOuterJoin
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan
  nameWithType: DbExpressionBuilder.LessThan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual
  nameWithType: DbExpressionBuilder.LessThanOrEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like
  nameWithType: DbExpressionBuilder.Like
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit
  nameWithType: DbExpressionBuilder.Limit
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus
  nameWithType: DbExpressionBuilder.Minus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo
  nameWithType: DbExpressionBuilder.Modulo
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply
  nameWithType: DbExpressionBuilder.Multiply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate
  nameWithType: DbExpressionBuilder.Navigate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate
  nameWithType: DbExpressionBuilder.Negate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New
  nameWithType: DbExpressionBuilder.New
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection
  nameWithType: DbExpressionBuilder.NewCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection
  nameWithType: DbExpressionBuilder.NewEmptyCollection
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow
  nameWithType: DbExpressionBuilder.NewRow
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not
  nameWithType: DbExpressionBuilder.Not
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual
  nameWithType: DbExpressionBuilder.NotEqual
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "Null"
  nameWithType: DbExpressionBuilder.Null
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType
  nameWithType: DbExpressionBuilder.OfType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly
  nameWithType: DbExpressionBuilder.OfTypeOnly
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or
  nameWithType: DbExpressionBuilder.Or
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy
  nameWithType: DbExpressionBuilder.OrderBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending
  nameWithType: DbExpressionBuilder.OrderByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply
  nameWithType: DbExpressionBuilder.OuterApply
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter
  nameWithType: DbExpressionBuilder.Parameter
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus
  nameWithType: DbExpressionBuilder.Plus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project
  nameWithType: DbExpressionBuilder.Project
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property
  nameWithType: DbExpressionBuilder.Property
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey
  nameWithType: DbExpressionBuilder.RefFromKey
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan
  nameWithType: DbExpressionBuilder.Scan
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select<TProjection>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select<TProjection>
  nameWithType: DbExpressionBuilder.Select<TProjection>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany
  nameWithType: DbExpressionBuilder.SelectMany
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany<TSelector>*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany<TSelector>
  nameWithType: DbExpressionBuilder.SelectMany<TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip
  nameWithType: DbExpressionBuilder.Skip
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort
  nameWithType: DbExpressionBuilder.Sort
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take
  nameWithType: DbExpressionBuilder.Take
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy
  nameWithType: DbExpressionBuilder.ThenBy
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending
  nameWithType: DbExpressionBuilder.ThenByDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause
  nameWithType: DbExpressionBuilder.ToSortClause
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending
  nameWithType: DbExpressionBuilder.ToSortClauseDescending
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs
  nameWithType: DbExpressionBuilder.TreatAs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus
  nameWithType: DbExpressionBuilder.UnaryMinus
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union
  nameWithType: DbExpressionBuilder.Union
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll
  nameWithType: DbExpressionBuilder.UnionAll
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable
  nameWithType: DbExpressionBuilder.Variable
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where
  nameWithType: DbExpressionBuilder.Where
